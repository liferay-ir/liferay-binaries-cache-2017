'use strict';

var _pkgDesc = require('liferay-npm-build-tools-common/lib/pkg-desc');

var _pkgDesc2 = _interopRequireDefault(_pkgDesc);

var _pluginLogger = require('liferay-npm-build-tools-common/lib/plugin-logger');

var _pluginLogger2 = _interopRequireDefault(_pluginLogger);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Â© 2017 Liferay, Inc. <https://liferay.com>
 *
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */

var fixturesDir = _path2.default.join(__dirname, '__fixtures__');

describe('when using regular packages', function () {
	it('injects peer dependencies as needed', function () {
		var config = {};
		var log = new _pluginLogger2.default();
		var rootPkgJson = require(fixturesDir + '/project/package.json');
		var pkg = new _pkgDesc2.default('pkg-with-peer-deps', '1.0.0', fixturesDir + '/project/node_modules/pkg-with-peer-deps', true);
		var source = {
			pkg: pkg
		};
		var pkgJson = require(fixturesDir + '/project/node_modules/pkg-with-peer-deps/package.json');

		(0, _index2.default)({ config: config, log: log, rootPkgJson: rootPkgJson, pkg: pkg, source: source }, { pkgJson: pkgJson });

		expect(pkgJson.dependencies).toEqual({
			'number-is-nan': '1.0.0'
		});
	});
});

describe('when using scoped packages', function () {
	it('injects peer dependencies for regular packages', function () {
		var config = {};
		var log = new _pluginLogger2.default();
		var rootPkgJson = require(fixturesDir + '/project/package.json');
		var pkg = new _pkgDesc2.default('@scope/pkg-with-peer-deps', '1.0.0', fixturesDir + '/project/node_modules/@scope/pkg-with-peer-deps', true);
		var source = {
			pkg: pkg
		};
		var pkgJson = require(fixturesDir + '/project/node_modules/@scope/pkg-with-peer-deps/package.json');

		(0, _index2.default)({ config: config, log: log, rootPkgJson: rootPkgJson, pkg: pkg, source: source }, { pkgJson: pkgJson });

		expect(pkgJson.dependencies).toEqual({
			'@scope/number-is-nan': '1.0.0'
		});
	});

	it('injects peer dependencies for namespaced packages', function () {
		var config = {};
		var log = new _pluginLogger2.default();
		var rootPkgJson = require(fixturesDir + '/project/package.json');
		var pkg = new _pkgDesc2.default('@project$1.0.0$scope/pkg-with-peer-deps', '1.0.0', fixturesDir + '/project/node_modules/@project$1.0.0$scope/pkg-with-peer-deps', true);
		var source = {
			pkg: pkg
		};
		var pkgJson = require(fixturesDir + '/project/node_modules/@project$1.0.0$scope/pkg-with-peer-deps' + '/package.json');

		(0, _index2.default)({ config: config, log: log, rootPkgJson: rootPkgJson, pkg: pkg, source: source }, { pkgJson: pkgJson });

		expect(pkgJson.dependencies).toEqual({
			'@project$scope/number-is-nan': '1.0.0'
		});
	});
});

it('logs results correctly', function () {
	var config = {};
	var log = new _pluginLogger2.default();
	var rootPkgJson = require(fixturesDir + '/project/package.json');
	var pkg = new _pkgDesc2.default('pkg-for-logs', '1.0.0', fixturesDir + '/project/node_modules/pkg-for-logs', true);
	var source = {
		pkg: pkg
	};
	var pkgJson = require(fixturesDir + '/project/node_modules/pkg-for-logs/package.json');

	(0, _index2.default)({ config: config, log: log, rootPkgJson: rootPkgJson, pkg: pkg, source: source }, { pkgJson: pkgJson });

	expect(log.messages).toHaveLength(2);
	expect(log.messages[0]).toMatchObject({
		level: 'info',
		source: 'inject-peer-dependencies',
		things: ['Injected dependency', 'number-is-nan@1.0.0']
	});
	expect(log.messages[1]).toMatchObject({
		level: 'warn',
		source: 'inject-peer-dependencies'
	});
	expect(log.messages[1].things).toHaveLength(4);
	expect(log.messages[1].things[0]).toBe('Failed to resolve dependency');
	expect(log.messages[1].things[1]).toBe('missing-dep');
	expect(log.messages[1].things[2]).toBe('with error:');
	expect(log.messages[1].things[3].toString()).toMatch(/Error: Cannot find module 'missing-dep\/package.json' from '.*'/);
});
//# sourceMappingURL=index.test.js.map