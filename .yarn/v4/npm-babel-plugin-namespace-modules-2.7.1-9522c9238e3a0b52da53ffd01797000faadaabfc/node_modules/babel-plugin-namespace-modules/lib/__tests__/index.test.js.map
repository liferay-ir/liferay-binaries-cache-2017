{"version":3,"sources":["../../src/__tests__/index.test.js"],"names":["babel","babelIpc","filenameRelative","join","__dirname","imports","provider","shims","fs","describe","it","source","transform","plugins","code","expect","toMatchSnapshot","logger","beforeEach","set","log","rootPkgJson","require","globalConfig","messages"],"mappings":"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","file":"index.test.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport * as babel from 'babel-core';\nimport * as babelIpc from 'liferay-npm-build-tools-common/lib/babel-ipc';\nimport PluginLogger from 'liferay-npm-build-tools-common/lib/plugin-logger';\nimport path from 'path';\nimport plugin from '../index';\n\nconst filenameRelative = path.join(__dirname, '__fixtures__', 'source.js');\nconst imports = {\n\tprovider: {\n\t\t'imp-module': '^1.0.0',\n\t},\n\tshims: {\n\t\tfs: '^1.0.0',\n\t},\n\t'': {\n\t\t'no-namespace-module': '^1.0.0',\n\t},\n};\n\ndescribe('when called from Babel', () => {\n\tit('correctly namespaces require modules', () => {\n\t\tconst source = `\n\t\t\tdefine(function(){\n\t\t\t\trequire('a-module');\n\t\t\t\trequire('imp-module');\n\t\t\t\trequire('no-namespace-module');\n\t\t\t\trequire('./a-local-module');\n\t\t\t\trequire('fs');\n\t\t\t})\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [[plugin, {imports}]],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('correctly namespaces define() dependencies', () => {\n\t\tconst source = `\n\t\t\tdefine(\n\t\t\t\t['a-module', 'imp-module', 'no-namespace-module', './a-local-module', 'fs'], \n\t\t\t\tfunction(){\n\t\t\t\t}\n\t\t\t)\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [[plugin, {imports}]],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('does not namespace define() module name', () => {\n\t\tconst source = `\n\t\t\tdefine('a-module', function(){\n\t\t\t})\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [[plugin, {imports}]],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('correctly namespaces all together', () => {\n\t\tconst source = `\n\t\t\tdefine(\n\t\t\t\t'a-module', \n\t\t\t\t['a-module', 'imp-module', 'no-namespace-module', './a-local-module', 'fs'], \n\t\t\t\tfunction(){\n\t\t\t\t\trequire('a-module');\n\t\t\t\t\trequire('imp-module');\n\t\t\t\t\trequire('no-namespace-module');\n\t\t\t\t\trequire('./a-local-module');\n\t\t\t\t\trequire('fs');\n\t\t\t\t}\n\t\t\t)\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [[plugin, {imports}]],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n});\n\ndescribe('when called from liferay-npm-bundler', () => {\n\tlet logger;\n\n\tbeforeEach(() => {\n\t\tbabelIpc.set(filenameRelative, {\n\t\t\tlog: (logger = new PluginLogger()),\n\t\t\trootPkgJson: require('./__fixtures__/root-package.json'),\n\t\t\tglobalConfig: {imports},\n\t\t});\n\t});\n\n\tit('correctly namespaces require modules', () => {\n\t\tconst source = `\n\t\t\tdefine(function(){\n\t\t\t\trequire('a-module');\n\t\t\t\trequire('imp-module');\n\t\t\t\trequire('no-namespace-module');\n\t\t\t\trequire('./a-local-module');\n\t\t\t\trequire('fs');\n\t\t\t})\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [plugin],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('correctly namespaces define() dependencies', () => {\n\t\tconst source = `\n\t\t\tdefine(\n\t\t\t\t['a-module', 'imp-module', 'no-namespace-module', './a-local-module', 'fs'], \n\t\t\t\tfunction(){\n\t\t\t\t}\n\t\t\t)\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [plugin],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('correctly namespaces define() module name', () => {\n\t\tconst source = `\n\t\t\tdefine('a-module', function(){\n\t\t\t})\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [plugin],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('does not namespace define() module name in the root package', () => {\n\t\tconst source = `\n\t\t\tdefine('a-module', function(){\n\t\t\t})\n\t\t`;\n\n\t\t// Make the plugin think that it is processing the root package\n\t\tbabelIpc.set(filenameRelative, {\n\t\t\trootPkgJson: require('./__fixtures__/package.json'),\n\t\t\tglobalConfig: {imports},\n\t\t});\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [plugin],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('correctly namespaces all together', () => {\n\t\tconst source = `\n\t\t\tdefine(\n\t\t\t\t'a-module', \n\t\t\t\t['a-module', 'imp-module', 'no-namespace-module', './a-local-module', 'fs'], \n\t\t\t\tfunction(){\n\t\t\t\t\trequire('a-module');\n\t\t\t\t\trequire('imp-module');\n\t\t\t\t\trequire('no-namespace-module');\n\t\t\t\t\trequire('./a-local-module');\n\t\t\t\t\trequire('fs');\n\t\t\t\t}\n\t\t\t)\n\t\t`;\n\n\t\tconst {code} = babel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [plugin],\n\t\t});\n\n\t\texpect(code).toMatchSnapshot();\n\t});\n\n\tit('logs results correctly', () => {\n\t\tconst source = `\n\t\t\tdefine(\n\t\t\t\t'a-module', \n\t\t\t\t['a-module', 'imp-module', './a-local-module', 'fs'], \n\t\t\t\tfunction(){\n\t\t\t\t\trequire('a-module');\n\t\t\t\t\trequire('imp-module');\n\t\t\t\t\trequire('./a-local-module');\n\t\t\t\t\trequire('fs');\n\t\t\t\t}\n\t\t\t)\n\t\t`;\n\n\t\tbabel.transform(source, {\n\t\t\tfilenameRelative,\n\t\t\tplugins: [plugin],\n\t\t});\n\n\t\texpect(logger.messages).toMatchSnapshot();\n\t});\n});\n"]}