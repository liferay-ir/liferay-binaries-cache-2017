/* jshint ignore:start */
import Component from 'metal-component';
import Soy from 'metal-soy';

var templates;
goog.loadModule(function(exports) {
var soy = goog.require('soy');
var soydata = goog.require('soydata');
// This file was automatically generated from Chart.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace ClayChart.
 * @public
 */

goog.module('ClayChart.incrementaldom');

goog.require('goog.soy.data.SanitizedContent');
var incrementalDom = goog.require('incrementaldom');
goog.require('soy.asserts');
var soyIdom = goog.require('soy.idom');


/**
 * @param {{
 *  _loading: (boolean|null|undefined),
 *  id: (!goog.soy.data.SanitizedContent|null|string|undefined)
 * }} opt_data
 * @param {Object<string, *>=} opt_ijData
 * @param {Object<string, *>=} opt_ijData_deprecated
 * @return {void}
 * @suppress {checkTypes}
 */
function $render(opt_data, opt_ijData, opt_ijData_deprecated) {
  opt_ijData = opt_ijData_deprecated || opt_ijData;
  opt_data = opt_data || {};
  /** @type {boolean|null|undefined} */
  var _loading = soy.asserts.assertType(opt_data._loading == null || (goog.isBoolean(opt_data._loading) || opt_data._loading === 1 || opt_data._loading === 0), '_loading', opt_data._loading, 'boolean|null|undefined');
  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */
  var id = soy.asserts.assertType(opt_data.id == null || (goog.isString(opt_data.id) || opt_data.id instanceof goog.soy.data.SanitizedContent), 'id', opt_data.id, '!goog.soy.data.SanitizedContent|null|string|undefined');
  var attrs__soy33 = function() {
    incrementalDom.attr('class', 'metal-chart-container');
    if (id) {
      incrementalDom.attr('id', id);
    }
  };
  incrementalDom.elementOpenStart('div');
      attrs__soy33();
  incrementalDom.elementOpenEnd();
    var chartAttrs__soy44 = function() {
      if (_loading) {
        incrementalDom.attr('hidden', '');
      }
      incrementalDom.attr('ref', 'chart');
    };
    incrementalDom.elementOpenStart('div');
        incrementalDom.attr('class', 'metal-chart');
        chartAttrs__soy44();
    incrementalDom.elementOpenEnd();
    incrementalDom.elementClose('div');
    var placeholderAttrs__soy53 = function() {
      if (!_loading) {
        incrementalDom.attr('hidden', '');
      }
      incrementalDom.attr('ref', 'placeholder');
    };
    incrementalDom.elementOpenStart('div');
        placeholderAttrs__soy53();
    incrementalDom.elementOpenEnd();
      $loading(null, null, opt_ijData);
    incrementalDom.elementClose('div');
  incrementalDom.elementClose('div');
}
exports.render = $render;
/**
 * @typedef {{
 *  _loading: (boolean|null|undefined),
 *  id: (!goog.soy.data.SanitizedContent|null|string|undefined)
 * }}
 */
$render.Params;
if (goog.DEBUG) {
  $render.soyTemplateName = 'ClayChart.render';
}


/**
 * @param {Object<string, *>=} opt_data
 * @param {Object<string, *>=} opt_ijData
 * @param {Object<string, *>=} opt_ijData_deprecated
 * @return {void}
 * @suppress {checkTypes}
 */
function $loading(opt_data, opt_ijData, opt_ijData_deprecated) {
  opt_ijData = opt_ijData_deprecated || opt_ijData;
  incrementalDom.elementOpenStart('div');
      incrementalDom.attr('aria-hidden', 'true');
      incrementalDom.attr('class', 'loading-icon');
  incrementalDom.elementOpenEnd();
    incrementalDom.elementOpenStart('span');
        incrementalDom.attr('class', 'loading-animation');
    incrementalDom.elementOpenEnd();
    incrementalDom.elementClose('span');
  incrementalDom.elementClose('div');
}
exports.loading = $loading;
if (goog.DEBUG) {
  $loading.soyTemplateName = 'ClayChart.loading';
}

exports.render.params = ["_loading","id"];
exports.render.types = {"_loading":"bool","id":"string"};
exports.loading.params = [];
exports.loading.types = {};
templates = exports;
return exports;

});

class ClayChart extends Component {}
Soy.register(ClayChart, templates);
export { ClayChart, templates };
export default templates;
/* jshint ignore:end */
