{"version":3,"sources":["../src/PredictiveChart.js"],"names":["DEFAULT_AXIS_X","tick","culling","max","fit","format","type","DEFAULT_TOOLTIP","contents","data","defaultTitleFormat","defaultValueFormat","colorFn","datum","color","title","x","value","hasOwnProperty","mid","Array","isArray","id","grouped","PredictiveChart","config","getInitialConfig","timeseries","push","_normalizeData","axisXTickFormat","axisX","predictionDate","Date","regions","axis","start","tooltipContents","tooltip","map","dataSeries","element","low","high","Chart","STATE","Config","shapeOf","number","required","bool","oneOfType","func","string","oneOf","validator","val","array","Soy","register","templates"],"mappings":"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","file":"PredictiveChart.js","sourcesContent":["import Chart from './Chart';\nimport Soy from 'metal-soy';\nimport templates from './PredictiveChart.soy.js';\nimport {Config} from 'metal-state';\nimport {isDefAndNotNull, isNumber, isObject, isString} from 'metal';\n\nconst DEFAULT_AXIS_X = {\n\ttick: {\n\t\tculling: {\n\t\t\tmax: 1,\n\t\t},\n\t\tfit: true,\n\t\tformat: '%Y-%m-%d',\n\t},\n\ttype: 'timeseries',\n};\n\nconst DEFAULT_TOOLTIP = {\n\tcontents(data, defaultTitleFormat, defaultValueFormat, colorFn) {\n\t\tconst datum = data[0];\n\t\tconst color = colorFn(datum);\n\t\tconst title = defaultTitleFormat(datum.x);\n\t\tconst value =\n\t\t\tisObject(datum.value) && datum.value.hasOwnProperty('mid')\n\t\t\t\t? datum.value.mid\n\t\t\t\t: Array.isArray(datum.value)\n\t\t\t\t\t? datum.value[1]\n\t\t\t\t\t: datum.value;\n\n\t\treturn `<table class=\"bb-tooltip\">\n\t\t\t<tbody>\n\t\t\t\t<tr><th colspan=\"2\">${title}</th></tr>\n\t\t\t\t<tr class=\"bb-tooltip-name-data1\">\n\t\t\t\t\t<td class=\"name\">\n\t\t\t\t\t\t<span style=\"background-color:${color}\"></span>${datum.id}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"value\">${value}</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>`;\n\t},\n\tgrouped: false,\n};\n\n/**\n * Predictive Chart component.\n * @augments Chart\n */\nclass PredictiveChart extends Chart {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tsuper.attached();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tcreated() {\n\t\tconst config = this.getInitialConfig();\n\n\t\tif (isDefAndNotNull(config.timeseries)) {\n\t\t\tconfig.data.push({data: config.timeseries, id: 'x'});\n\t\t}\n\n\t\tif (isDefAndNotNull(this.data)) {\n\t\t\tthis._normalizeData();\n\t\t}\n\n\t\tif (isDefAndNotNull(this.axisXTickFormat)) {\n\t\t\tthis.axisX.tick.format = this.axisXTickFormat;\n\t\t}\n\n\t\tif (isDefAndNotNull(this.predictionDate)) {\n\t\t\tif (isString(this.predictionDate)) {\n\t\t\t\tthis.predictionDate = new Date(this.predictionDate);\n\t\t\t}\n\n\t\t\tif (!isDefAndNotNull(this.regions)) {\n\t\t\t\tthis.regions = [];\n\t\t\t}\n\n\t\t\tthis.regions.push({\n\t\t\t\taxis: 'x',\n\t\t\t\tstart: this.predictionDate,\n\t\t\t});\n\t\t}\n\n\t\tif (isDefAndNotNull(this.tooltipContents)) {\n\t\t\tthis.tooltip.contents = this.tooltipContents;\n\t\t}\n\t}\n\n\t/**\n\t * Normalizes the data.\n\t * @memberof PredictiveChart\n\t * @private\n\t */\n\t_normalizeData() {\n\t\tthis.data = this.data.map(dataSeries => {\n\t\t\tif (dataSeries.id !== 'x') {\n\t\t\t\tdataSeries.data = dataSeries.data.map(element => {\n\t\t\t\t\treturn isNumber(element)\n\t\t\t\t\t\t? {low: element, mid: element, high: element}\n\t\t\t\t\t\t: element;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn dataSeries;\n\t\t});\n\t}\n}\n\nPredictiveChart.STATE = {\n\t/**\n\t * X axis configuration.\n\t * @default DEFAULT_AXIS_X\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {Object}\n\t */\n\taxisX: Config.shapeOf({\n\t\ttick: Config.shapeOf({\n\t\t\tculling: Config.shapeOf({\n\t\t\t\tmax: Config.number().required(),\n\t\t\t}),\n\t\t\tfit: Config.bool(),\n\t\t\tformat: Config.oneOfType([Config.func(), Config.string()]),\n\t\t}),\n\t\ttype: Config.oneOf(['timeseries']).required(),\n\t}).value(DEFAULT_AXIS_X),\n\n\t/**\n\t * The axisX tick format configuration.\n\t * This can be a function or a string.\n\t *\n\t * For more information on the supported formats, please\n\t * see https://github.com/d3/d3-time-format\n\t *\n\t * @default '%Y-%m-%d'\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {Function|String}\n\t */\n\taxisXTickFormat: Config.oneOfType([Config.func(), Config.string()]),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * The prediction date used to define the <code>region</code>\n\t * on the X axis.\n\t * @default undefined\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {Date}\n\t */\n\tpredictionDate: {\n\t\tvalidator: val => val instanceof Date || isString(val),\n\t},\n\n\t/**\n\t * The timeseries configuration\n\t * @default undefined\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {Array}\n\t */\n\ttimeseries: Config.array(),\n\n\t/**\n\t * Toolip configuration.\n\t * @default DEFAULT_TOOLTIP\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {Date}\n\t */\n\ttooltip: Config.shapeOf({\n\t\tcontents: Config.func(),\n\t\tgrouped: Config.bool(),\n\t}).value(DEFAULT_TOOLTIP),\n\n\t/**\n\t * Tooltip format title function\n\t * @default undefined\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {Function}\n\t */\n\ttooltipContents: Config.func(),\n\n\t/**\n\t * The variety of chart that will be rendered.\n\t * @default area-line-range\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {string}\n\t */\n\ttype: Config.oneOf(['area-line-range', 'area-spline-range']).value(\n\t\t'area-line-range'\n\t),\n\n\t/**\n\t * X configuration\n\t * @default x\n\t * @instance\n\t * @memberof PredictiveChart\n\t * @type {string}\n\t */\n\tx: Config.oneOf(['x']).value('x'),\n};\n\nSoy.register(PredictiveChart, templates);\n\nexport {PredictiveChart};\nexport default PredictiveChart;\n"]}