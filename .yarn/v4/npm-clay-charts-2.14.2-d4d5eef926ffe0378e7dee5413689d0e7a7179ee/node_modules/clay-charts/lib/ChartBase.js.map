{"version":3,"sources":["../src/ChartBase.js"],"names":["d3","resolveData","data","DEFAULT_COLORS","config","DEFAULT_GRID_OBJECT","DEFAULT_LINE_CLASSES","DEFAULT_POINT_PATTERNS","DEFAULT_TILES","PROP_NAME_MAP","axis","class","color","name","regions","type","ChartBase","attached","_addEventListeners","getInitialConfig","columns","then","_resolvedData","props","_loading","emit","Error","_setupPolling","_constructChartConfig","bbChart","bb","generate","catch","err","disposed","_pollingInterval","clearInterval","destroy","on","_handleDataChanged","bind","_handleGroupsChanged","_handleLoadingChanged","_handleRegionsChanged","_handleSizeChanged","_handleTypeChanged","_handleXChanged","shouldUpdate","_constructAxisConfig","state","_getStateObj","rotated","axisRotated","x","axisX","y2","axisY2","y","axisY","_constructDataConfig","zoom","_constructZoomConfig","_constructTilesConfig","area","bar","bindto","element","querySelector","bubble","donut","gauge","grid","legend","line","loading","padding","pie","point","resize","resizeAuto","size","spline","splineInterpolationType","subchart","svg","svgClassname","title","tooltip","transition","transitionDuration","oninit","_emitChartEvent","onout","onover","onrendered","onresize","onresized","_constructChartDataConfig","_createDataArray","i","length","column","id","keys","Object","j","key","hide","push","_constructColorsConfig","colors","tiles","attachListeners","colorFormatter","empty","emptyLabelText","groups","json","labels","mimeType","order","rows","selection","url","xFormat","xLocaltime","xSort","xs","dataConfig","assign","onclick","onselected","onunselected","_getTiles","pattern","onzoom","onzoomend","onzoomstart","map","concat","apply","arguments","_getColumns","_getData","find","filter","document","val","event","_updateData","newVal","chart","placeholder","removeAttribute","setAttribute","transform","_mapXSValues","reduce","xsValues","value","xColumn","_resolveRemovedData","newData","prevData","ids","removedIds","indexOf","_setColumns","pollingInterval","setInterval","prevVal","unload","load","STATE","Config","bool","internal","shapeOf","above","zerobased","categories","array","extent","height","number","label","object","string","localtime","max","min","oneOfType","show","tick","centered","count","culling","fit","format","func","multiline","outer","rotate","values","width","oneOf","center","default","inner","inverted","ratio","maxR","threshhold","unit","setter","valueFn","arrayOf","required","types","all","expand","padAngle","text","fullCircle","lable","startingAngle","units","focus","lines","front","position","any","ticks","intersection","enabled","brighten","inputType","mouse","touch","contents","template","inset","anchor","step","classes","connectNull","bottom","left","right","top","r","select","end","start","auto","draggable","grouped","isselectable","multiple","interpolation","onbrush","classname","duration","rescale"],"mappings":"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","file":"ChartBase.js","sourcesContent":["import {bb} from 'billboard.js';\nimport {Config} from 'metal-state';\nimport {isDefAndNotNull, isServerSide} from 'metal';\nimport {config, data} from 'clay-charts-shared';\nimport types from './utils/types';\nimport * as d3 from 'd3';\n\nconst {resolveData} = data;\n\nconst {\n\tDEFAULT_COLORS,\n\tDEFAULT_GRID_OBJECT,\n\tDEFAULT_LINE_CLASSES,\n\tDEFAULT_POINT_PATTERNS,\n\tDEFAULT_TILES,\n} = config;\n\nconst PROP_NAME_MAP = {\n\taxis: 'axes',\n\tclass: 'classes',\n\tcolor: 'colors',\n\tname: 'names',\n\tregions: 'regions',\n\ttype: 'types',\n};\n\n/**\n * Chart Base prototype.\n * @class ChartBase\n *\n * @mixin\n */\nconst ChartBase = {\n\t/**\n\t * @inheritDoc\n\t * @memberof ChartBase\n\t */\n\tattached() {\n\t\tif (isServerSide()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._addEventListeners();\n\n\t\tconst config = this.getInitialConfig();\n\t\tconst data = isDefAndNotNull(config.columns)\n\t\t\t? config.columns\n\t\t\t: config.data;\n\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tresolveData(data)\n\t\t\t.then(data => {\n\t\t\t\tthis._resolvedData = data;\n\n\t\t\t\tif (\n\t\t\t\t\tisDefAndNotNull(this.props) &&\n\t\t\t\t\tisDefAndNotNull(this.props._loading)\n\t\t\t\t) {\n\t\t\t\t\tthis.props._loading = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis._loading = false;\n\t\t\t\t}\n\n\t\t\t\tif (!isDefAndNotNull(data)) {\n\t\t\t\t\tthis.emit(\n\t\t\t\t\t\t'chartError',\n\t\t\t\t\t\tnew Error('unable to load Chart data.')\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._setupPolling();\n\n\t\t\t\tconst config = this._constructChartConfig();\n\t\t\t\tthis.bbChart = bb.generate(config);\n\t\t\t\tthis.emit('chartReady');\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis.emit('chartError', err);\n\t\t\t});\n\t},\n\n\t/**\n\t * @inheritDoc\n\t * @memberof ChartBase\n\t */\n\tdisposed() {\n\t\tif (isServerSide()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pollingInterval) {\n\t\t\tclearInterval(this._pollingInterval);\n\t\t\tthis._pollingInterval = null;\n\t\t}\n\n\t\tif (this.bbChart) {\n\t\t\tthis.bbChart.destroy();\n\t\t}\n\t},\n\n\t/**\n\t * Adds event listeners\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_addEventListeners() {\n\t\tthis.on('dataChanged', this._handleDataChanged.bind(this));\n\t\tthis.on('groupsChanged', this._handleGroupsChanged.bind(this));\n\t\tthis.on('_loadingChanged', this._handleLoadingChanged.bind(this));\n\t\tthis.on('regionsChanged', this._handleRegionsChanged.bind(this));\n\t\tthis.on('sizeChanged', this._handleSizeChanged.bind(this));\n\t\tthis.on('typeChanged', this._handleTypeChanged.bind(this));\n\t\tthis.on('xChanged', this._handleXChanged.bind(this));\n\t},\n\n\t/**\n\t * @inheritDoc\n\t * @memberof ChartBase\n\t */\n\tshouldUpdate() {\n\t\treturn false;\n\t},\n\n\t/**\n\t * Constructs `axis` billboard config property.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {Object}\n\t */\n\t_constructAxisConfig() {\n\t\tconst state = this._getStateObj();\n\n\t\treturn {\n\t\t\trotated: state.axisRotated,\n\t\t\tx: state.axisX,\n\t\t\ty2: state.axisY2,\n\t\t\ty: state.axisY,\n\t\t};\n\t},\n\n\t/**\n\t * Constructs config object for `bb.generate` method.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {Object}\n\t */\n\t_constructChartConfig() {\n\t\tconst state = this._getStateObj();\n\t\tconst axis = this._constructAxisConfig();\n\t\tconst data = this._constructDataConfig();\n\t\tconst zoom = this._constructZoomConfig();\n\t\tconst color = this._constructTilesConfig();\n\n\t\tconst config = {\n\t\t\tarea: state.area,\n\t\t\taxis,\n\t\t\tbar: state.bar,\n\t\t\tbindto: this.element.querySelector('[ref=\"chart\"]'),\n\t\t\tbubble: state.bubble,\n\t\t\tcolor: color,\n\t\t\tdata,\n\t\t\tdonut: state.donut,\n\t\t\tgauge: state.gauge,\n\t\t\tgrid: state.grid,\n\t\t\tlegend: state.legend,\n\t\t\tline: state.line,\n\t\t\tloading: state.loading,\n\t\t\tpadding: state.padding,\n\t\t\tpie: state.pie,\n\t\t\tpoint: state.point,\n\t\t\tregions: state.regions,\n\t\t\tresize: state.resizeAuto,\n\t\t\tsize: state.size,\n\t\t\tspline: state.splineInterpolationType,\n\t\t\tsubchart: state.subchart,\n\t\t\tsvg: state.svgClassname,\n\t\t\ttitle: state.title,\n\t\t\ttooltip: state.tooltip,\n\t\t\ttransition: state.transitionDuration,\n\t\t\tzoom,\n\t\t};\n\n\t\t/**\n\t\t * Chart init event.\n\t\t * @event chartInit\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.oninit = this._emitChartEvent.bind(this, 'chartInit');\n\t\t/**\n\t\t * Chart mouse out event.\n\t\t * @event chartMouseout\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onout = this._emitChartEvent.bind(this, 'chartMouseout');\n\t\t/**\n\t\t * Chart mouse over event.\n\t\t * @event chartMouseover\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onover = this._emitChartEvent.bind(this, 'chartMouseover');\n\t\t/**\n\t\t * Chart rendered event.\n\t\t * @event chartRendered\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onrendered = this._emitChartEvent.bind(this, 'chartRendered');\n\t\t/**\n\t\t * Chart resize event.\n\t\t * @event chartResize\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onresize = this._emitChartEvent.bind(this, 'chartResize');\n\t\t/**\n\t\t * Chart resized event.\n\t\t * @event chartResized\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onresized = this._emitChartEvent.bind(this, 'chartResized');\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * Constructs various `data` billboard properties from `data` state.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {Object}\n\t */\n\t_constructChartDataConfig() {\n\t\tconst data = this._resolvedData;\n\t\tconst config = {\n\t\t\tcolumns: this._createDataArray(data),\n\t\t};\n\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst column = data[i];\n\n\t\t\tconst {id} = column;\n\n\t\t\tconst keys = Object.keys(column);\n\n\t\t\tfor (let j = 0; j < keys.length; j++) {\n\t\t\t\tconst key = keys[j];\n\n\t\t\t\tif (key === 'data' || key === 'id') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (key === 'hide') {\n\t\t\t\t\tconfig.hide = config.hide || [];\n\n\t\t\t\t\tif (column.hide) {\n\t\t\t\t\t\tconfig.hide.push(column.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tconfig[PROP_NAME_MAP[key]] =\n\t\t\t\t\t\tconfig[PROP_NAME_MAP[key]] || {};\n\n\t\t\t\t\tconfig[PROP_NAME_MAP[key]][id] = column[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * When tiles for true always leave `colors` empty,\n\t * this ensures that` colors.tiles` is more important.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {Object}\n\t */\n\t_constructColorsConfig() {\n\t\tlet {colors, color} = this._getStateObj();\n\n\t\tif (color && color.tiles) {\n\t\t\tcolors = {};\n\t\t}\n\n\t\treturn colors;\n\t},\n\n\t/**\n\t * Constructs `data` billboard config property.\n\t * @memberof ChartBase\n\t * @param {boolean} attachListeners\n\t * @protected\n\t * @return {Object}\n\t */\n\t_constructDataConfig(attachListeners = true) {\n\t\tconst state = this._getStateObj();\n\t\tconst colors = this._constructColorsConfig();\n\t\tconst config = {\n\t\t\tcolor: state.colorFormatter,\n\t\t\tcolors: colors,\n\t\t\tempty: state.emptyLabelText,\n\t\t\tgroups: state.groups,\n\t\t\thide: state.hide,\n\t\t\tjson: state.json,\n\t\t\tkeys: state.keys,\n\t\t\tlabels: state.labels,\n\t\t\tmimeType: state.mimeType,\n\t\t\torder: state.order,\n\t\t\trows: state.rows,\n\t\t\tselection: state.selection,\n\t\t\ttype: state.type,\n\t\t\turl: state.url,\n\t\t\tx: state.x,\n\t\t\txFormat: state.xFormat,\n\t\t\txLocaltime: state.xLocaltime,\n\t\t\txSort: state.xSort,\n\t\t\txs: state.xs,\n\t\t};\n\n\t\tconst dataConfig = this._constructChartDataConfig();\n\n\t\tObject.assign(config, dataConfig);\n\n\t\tif (attachListeners) {\n\t\t\t/**\n\t\t\t * Point click event.\n\t\t\t * @event pointClick\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onclick = this._emitChartEvent.bind(this, 'pointClick');\n\t\t\t/**\n\t\t\t * Point mouse out event.\n\t\t\t * @event pointMouseout\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onout = this._emitChartEvent.bind(this, 'pointMouseout');\n\t\t\t/**\n\t\t\t * Point mouse over event.\n\t\t\t * @event pointMouseoever\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onover = this._emitChartEvent.bind(this, 'pointMouseover');\n\t\t\t/**\n\t\t\t * Data selected event.\n\t\t\t * @event dataSelected\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onselected = this._emitChartEvent.bind(this, 'dataSelected');\n\t\t\t/**\n\t\t\t * Data unselected event.\n\t\t\t * @event dataUnselected\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onunselected = this._emitChartEvent.bind(\n\t\t\t\tthis,\n\t\t\t\t'dataUnselected'\n\t\t\t);\n\t\t}\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * Constructs color tiles for passed to billboard.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {Object}\n\t */\n\t_constructTilesConfig() {\n\t\tconst {color} = this._getStateObj();\n\n\t\tif (color.tiles) {\n\t\t\tconst tiles = this._getTiles();\n\n\t\t\tcolor.tiles = () => tiles;\n\t\t\tcolor.pattern = DEFAULT_COLORS;\n\t\t}\n\n\t\treturn color;\n\t},\n\n\t/**\n\t * Constructs `zoom` billboard config property.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {Object}\n\t */\n\t_constructZoomConfig() {\n\t\tconst state = this._getStateObj();\n\t\tconst zoom = state.zoom;\n\t\tconst config = zoom || {};\n\n\t\t/**\n\t\t * Zoom event.\n\t\t * @event zoom\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onzoom = this._emitChartEvent.bind(this, 'zoom');\n\t\t/**\n\t\t * Zoom end event.\n\t\t * @event zoomEnd\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onzoomend = this._emitChartEvent.bind(this, 'zoomEnd');\n\t\t/**\n\t\t * Zoom start event.\n\t\t * @event zoomStart\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onzoomstart = this._emitChartEvent.bind(this, 'zoomStart');\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * Converts `data` state into consumable array for billboard.js\n\t * @memberof ChartBase\n\t * @param {Array} data\n\t * @protected\n\t * @return {Array}\n\t */\n\t_createDataArray(data) {\n\t\treturn data.map(({data, id}) => {\n\t\t\treturn [id].concat(data);\n\t\t});\n\t},\n\n\t/**\n\t * Emits event based on arguments array.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_emitChartEvent() {\n\t\tthis.emit.apply(this, arguments); // eslint-disable-line\n\t},\n\n\t/**\n\t * Gets all columns\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {?Object}\n\t */\n\t_getColumns() {\n\t\treturn this.data;\n\t},\n\n\t/**\n\t * Gets column by column id.\n\t * @memberof ChartBase\n\t * @param {string} id column id\n\t * @protected\n\t * @return {?Object}\n\t */\n\t_getData(id) {\n\t\treturn this.data.find(data => {\n\t\t\treturn data.id === id;\n\t\t});\n\t},\n\n\t/**\n\t * Retrieves state object, used to allow JSX implementation.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {Object}\n\t */\n\t_getStateObj() {\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get all tiles of the DOM.\n\t * @memberof ChartBase\n\t * @protected\n\t * @return {?Elements}\n\t */\n\t_getTiles() {\n\t\treturn DEFAULT_TILES.filter(val => {\n\t\t\treturn document.querySelector(`#${val}`);\n\t\t}).map(val => document.querySelector(`#${val}`));\n\t},\n\n\t/**\n\t * Maps `data` state to chart via `bb.load` method.\n\t * @memberof ChartBase\n\t * @param {Object} event The change event.\n\t * @protected\n\t */\n\t_handleDataChanged(event) {\n\t\tthis._updateData(event.newVal);\n\t},\n\n\t/**\n\t * Maps `groups` state to chart via `bb.groups` method.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_handleGroupsChanged({newVal}) {\n\t\tthis.bbChart.groups(newVal);\n\t},\n\n\t/**\n\t * Handles `loading` state.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_handleLoadingChanged({newVal}) {\n\t\tconst chart = this.element.querySelector('[ref=\"chart\"]');\n\t\tconst placeholder = this.element.querySelector('[ref=\"placeholder\"]');\n\n\t\tif (!newVal) {\n\t\t\tchart.removeAttribute('hidden');\n\t\t\tplaceholder.setAttribute('hidden', 'hidden');\n\t\t} else {\n\t\t\tchart.setAttribute('hidden', 'hidden');\n\t\t\tplaceholder.removeAttribute('hidden');\n\t\t}\n\t},\n\n\t/**\n\t * Maps `regions` state to chart via `bb.regions` method.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_handleRegionsChanged({newVal}) {\n\t\tthis.bbChart.regions(newVal);\n\t},\n\n\t/**\n\t * Maps `size` state to chart via `bb.resize` method.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_handleSizeChanged({newVal}) {\n\t\tthis.bbChart.resize(newVal);\n\t},\n\n\t/**\n\t * Maps `type` state to chart via `bb.transform` method.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_handleTypeChanged({newVal}) {\n\t\tthis.bbChart.transform(newVal);\n\t},\n\n\t/**\n\t * Maps `x` state to chart via `bb.x` method.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_handleXChanged({newVal}) {\n\t\tconst column = this._getData(newVal);\n\n\t\tthis.bbChart.x(column.data);\n\t},\n\n\t/**\n\t * Maps xs value to data points.\n\t * @memberof ChartBase\n\t * @param {Object} xs\n\t * @protected\n\t * @return {Object}\n\t */\n\t_mapXSValues(xs) {\n\t\treturn Object.keys(xs).reduce((xsValues, key) => {\n\t\t\tconst value = xs[key];\n\n\t\t\tconst xColumn = this._getData(value);\n\n\t\t\txsValues[key] = xColumn.data;\n\n\t\t\treturn xsValues;\n\t\t}, {});\n\t},\n\n\t/**\n\t * Determines which ids should be passed to the unload property.\n\t * @memberof ChartBase\n\t * @param {Array} newData\n\t * @param {Array} prevData\n\t * @return {Array}\n\t * @static\n\t */\n\t_resolveRemovedData(newData, prevData) {\n\t\tconst ids = newData.map(data => data[0]);\n\n\t\treturn prevData.reduce((removedIds, data) => {\n\t\t\tconst id = data[0];\n\n\t\t\tif (ids.indexOf(id) === -1) {\n\t\t\t\tremovedIds.push(id);\n\t\t\t}\n\n\t\t\treturn removedIds;\n\t\t}, []);\n\t},\n\n\t/**\n\t * Set's the chart's data\n\t * @memberof ChartBase\n\t * @param {?Object} columns The data to use.\n\t * @protected\n\t */\n\t_setColumns(columns) {\n\t\tthis.data = columns;\n\t},\n\n\t/**\n\t * Sets up the polling interval.\n\t * @memberof ChartBase\n\t * @protected\n\t */\n\t_setupPolling() {\n\t\tconst config = this.getInitialConfig();\n\t\tconst data = config.data;\n\t\tconst pollingInterval = config.pollingInterval;\n\n\t\tif (pollingInterval) {\n\t\t\tif (this._pollingInterval) {\n\t\t\t\tclearInterval(this._pollingInterval);\n\t\t\t}\n\n\t\t\tthis._pollingInterval = setInterval(() => {\n\t\t\t\tthis._updateData(data);\n\t\t\t}, pollingInterval);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart's data.\n\t * @memberof ChartBase\n\t * @param {Object} data The new data to load\n\t * @protected\n\t */\n\t_updateData(data) {\n\t\tresolveData(data).then(val => {\n\t\t\tconst prevVal = this._createDataArray(this._resolvedData);\n\n\t\t\tthis._resolvedData = val;\n\n\t\t\tconst data = this._constructDataConfig(false);\n\t\t\tconst newVal = data.columns;\n\t\t\tconst removedIds = this._resolveRemovedData(newVal, prevVal);\n\n\t\t\tif (removedIds.length) {\n\t\t\t\tdata.unload = removedIds;\n\t\t\t}\n\n\t\t\tthis.bbChart.load(data);\n\n\t\t\tif (data.xs) {\n\t\t\t\tthis.bbChart.xs(this._mapXSValues(data.xs));\n\t\t\t}\n\n\t\t\tthis.emit('dataResolved', data);\n\t\t});\n\t},\n};\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nChartBase.STATE = {\n\t/**\n\t * Sets the `loading` state.\n\t */\n\t_loading: Config.bool()\n\t\t.internal()\n\t\t.value(true),\n\n\t/**\n\t * Data that will be rendered to the chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tarea: Config.shapeOf({\n\t\tabove: Config.bool().value(false),\n\t\tzerobased: Config.bool().value(true),\n\t}),\n\n\t/**\n\t * Switches the x and y axis.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\taxisRotated: Config.bool(),\n\n\t/**\n\t * Styling and behavior of x axis.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\taxisX: Config.shapeOf({\n\t\tcategories: Config.array(),\n\t\textent: Config.array(),\n\t\theight: Config.number(),\n\t\tlabel: Config.object().string(),\n\t\tlocaltime: Config.bool(),\n\t\tmax: Config.number(),\n\t\tmin: Config.number(),\n\t\tpadding: Config.oneOfType([Config.number(), Config.object()]),\n\t\tshow: Config.bool(),\n\t\ttick: Config.shapeOf({\n\t\t\tcentered: Config.bool(),\n\t\t\tcount: Config.number(),\n\t\t\tculling: Config.bool().shapeOf({\n\t\t\t\tmax: Config.number(),\n\t\t\t}),\n\t\t\tfit: Config.bool(),\n\t\t\tformat: Config.oneOfType([Config.func(), Config.string()]),\n\t\t\tmultiline: Config.bool(),\n\t\t\touter: Config.bool(),\n\t\t\trotate: Config.number(),\n\t\t\tvalues: Config.array(),\n\t\t\twidth: Config.number(),\n\t\t}),\n\t\ttype: Config.oneOf(['category', 'indexed', 'timeseries']),\n\t}),\n\n\t/**\n\t * Styling and behavior of y2 axis.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\taxisY2: Config.shapeOf({\n\t\tcenter: Config.number(),\n\t\tdefault: Config.array(),\n\t\tinner: Config.bool(),\n\t\tinverted: Config.bool(),\n\t\tlabel: Config.object().string(),\n\t\tmax: Config.number(),\n\t\tmin: Config.number(),\n\t\tpadding: Config.oneOfType([Config.number(), Config.object()]),\n\t\tshow: Config.bool(),\n\t\ttick: Config.shapeOf({\n\t\t\tcount: Config.number(),\n\t\t\tformat: Config.func(),\n\t\t\touter: Config.bool(),\n\t\t\tvalues: Config.array(),\n\t\t}),\n\t}),\n\n\t/**\n\t * Styling and behavior of y axis.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\taxisY: Config.shapeOf({\n\t\tcenter: Config.number(),\n\t\tdefault: Config.array(),\n\t\tformat: Config.func(),\n\t\tinner: Config.bool(),\n\t\tinverted: Config.bool(),\n\t\tlabel: Config.object().string(),\n\t\tmax: Config.number(),\n\t\tmin: Config.number(),\n\t\tpadding: Config.oneOfType([Config.number(), Config.object()]),\n\t\tshow: Config.bool(),\n\t\ttick: Config.shapeOf({\n\t\t\tcount: Config.number(),\n\t\t\touter: Config.bool(),\n\t\t\tvalues: Config.array(),\n\t\t}),\n\t\ttype: Config.oneOf(['category', 'indexed', 'timeseries']),\n\t}),\n\n\t/**\n\t * Styling and behavior of bars.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tbar: Config.shapeOf({\n\t\twidth: Config.oneOfType([\n\t\t\tConfig.number(),\n\t\t\tConfig.shapeOf({\n\t\t\t\tmax: Config.number(),\n\t\t\t\tratio: Config.number(),\n\t\t\t}),\n\t\t]),\n\t\tpadding: Config.number(),\n\t\tzerobased: Config.bool(),\n\t}),\n\n\t/** Styling and behavior of bubbles.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tbubble: Config.shapeOf({\n\t\tmaxR: Config.number(),\n\t}),\n\n\t/**\n\t * Defines a custom color pattern for chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tcolor: Config.shapeOf({\n\t\tpattern: Config.array().value(DEFAULT_COLORS),\n\t\tthreshhold: Config.shapeOf({\n\t\t\tunit: Config.string(),\n\t\t\tvalue: Config.array(),\n\t\t\tmax: Config.number(),\n\t\t}),\n\t\ttiles: Config.oneOfType([Config.bool().value(false), Config.func()]),\n\t}).value({\n\t\tpattern: DEFAULT_COLORS,\n\t\ttiles: false,\n\t}),\n\n\t/**\n\t * Defines a custom colors for data in chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tcolors: Config.object().value({}),\n\n\t/**\n\t * Sets billboard's data.color config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Function|undefined)}\n\t */\n\tcolorFormatter: Config.func(),\n\n\t/**\n\t * Data that will be rendered to the chart.\n\t * @default undefined\n\t * @deprecated since 2.0.0-rc.2\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Array|undefined)}\n\t */\n\tcolumns: {\n\t\tsetter: '_setColumns',\n\t\tvalueFn: '_getColumns',\n\t},\n\n\t/**\n\t * Data that will be rendered to the chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Array|undefined)}\n\t */\n\tdata: Config.oneOfType([\n\t\tConfig.arrayOf(\n\t\t\tConfig.shapeOf({\n\t\t\t\taxis: Config.oneOf(['y', 'y2']),\n\t\t\t\tclass: Config.string(),\n\t\t\t\tcolor: Config.string(),\n\t\t\t\tdata: Config.array().required(),\n\t\t\t\thide: Config.bool(),\n\t\t\t\tid: Config.required().string(),\n\t\t\t\tname: Config.string(),\n\t\t\t\tregions: Config.array(),\n\t\t\t\ttype: Config.oneOf(types.all),\n\t\t\t\tx: Config.string(),\n\t\t\t})\n\t\t),\n\t\tConfig.object(),\n\t\tConfig.func(),\n\t\tConfig.string(),\n\t]),\n\n\t/**\n\t * Configuration options for donut chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tdonut: Config.shapeOf({\n\t\tlabel: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tformat: Config.func(),\n\t\t\tthreshhold: Config.number(),\n\t\t\tratio: Config.func().number(),\n\t\t}),\n\t\texpand: Config.bool(),\n\t\twidth: Config.number(),\n\t\ttitle: Config.string(),\n\t\tpadAngle: Config.number(),\n\t}),\n\n\t/**\n\t * Sets label for when no data is loaded.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\temptyLabelText: Config.string().setter(value => {\n\t\treturn value ? {empty: {label: {text: value}}} : value;\n\t}),\n\n\t/**\n\t * Configuration options for guage chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tgauge: Config.shapeOf({\n\t\tfullCircle: Config.bool(),\n\t\tlable: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tformat: Config.func(),\n\t\t}),\n\t\texpand: Config.bool(),\n\t\tmin: Config.number(),\n\t\tmax: Config.number(),\n\t\tstartingAngle: Config.number(),\n\t\tunits: Config.string(),\n\t\twidth: Config.number(),\n\t}),\n\n\t/**\n\t * Configuration options for grid chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tgrid: Config.shapeOf({\n\t\t// Cross reference this with source code, have a feeling this info is wrong\n\t\tfocus: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t}),\n\t\tlines: Config.shapeOf({\n\t\t\tfront: Config.bool(),\n\t\t}),\n\t\tx: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tlines: Config.arrayOf(\n\t\t\t\tConfig.shapeOf({\n\t\t\t\t\tclass: Config.string(),\n\t\t\t\t\tposition: Config.oneOf(['start', 'middle', 'end']),\n\t\t\t\t\ttext: Config.string(),\n\t\t\t\t\tvalue: Config.any(),\n\t\t\t\t})\n\t\t\t),\n\t\t}),\n\t\ty: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tlines: Config.arrayOf(\n\t\t\t\tConfig.shapeOf({\n\t\t\t\t\tclass: Config.string(),\n\t\t\t\t\tposition: Config.oneOf(['start', 'middle', 'end']),\n\t\t\t\t\ttext: Config.string(),\n\t\t\t\t\tvalue: Config.any(),\n\t\t\t\t})\n\t\t\t),\n\t\t}),\n\t\tticks: Config.number(),\n\t}).value(DEFAULT_GRID_OBJECT),\n\n\t/**\n\t * Sets billboard's data.groups config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Array|undefined)}\n\t */\n\tgroups: Config.array(),\n\n\t/**\n\t * If set to true hides all data.\n\t * @default false\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(boolean|undefined)}\n\t */\n\thide: Config.bool().value(false),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * Intersection display options.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tintersection: Config.shapeOf({\n\t\tenabled: Config.bool(),\n\t\tbrighten: Config.bool(),\n\t\tinputType: Config.shapeOf({\n\t\t\tmouse: Config.bool(),\n\t\t\ttouch: Config.bool(),\n\t\t}),\n\t}),\n\n\t/**\n\t * Sets billboard's data.json config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Array|boolean|undefined)}\n\t */\n\tjson: Config.array(),\n\n\t/**\n\t * Sets billboard's data.keys config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Array|undefined)}\n\t */\n\tkeys: Config.array().setter(value => {\n\t\treturn value ? {value} : value;\n\t}),\n\n\t/**\n\t * Sets billboard's data.labels config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Boolean|Function|undefined)}\n\t */\n\tlabels: Config.bool()\n\t\t.func()\n\t\t.setter(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn value;\n\t\t\t} else if (typeof value === 'boolean') {\n\t\t\t\treturn {\n\t\t\t\t\tlabels: value,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformat: value,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}),\n\n\t/**\n\t * Legend display options.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tlegend: Config.shapeOf({\n\t\tcontents: Config.shapeOf({\n\t\t\tbindto: Config.any(),\n\t\t\ttemplate: Config.oneOfType([Config.func(), Config.string()]),\n\t\t}),\n\t\thide: Config.bool(),\n\t\tposition: Config.oneOf(['bottom', 'inset', 'right']),\n\t\tinset: Config.shapeOf({\n\t\t\tanchor: Config.oneOf([\n\t\t\t\t'bottom-left',\n\t\t\t\t'bottom-right',\n\t\t\t\t'top-left',\n\t\t\t\t'top-right',\n\t\t\t]),\n\t\t\tstep: Config.number(),\n\t\t\tx: Config.number(),\n\t\t\ty: Config.number(),\n\t\t}),\n\t\tshow: Config.bool(),\n\t}),\n\n\t/**\n\t * Display settings for chart lines.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tline: Config.shapeOf({\n\t\tclasses: Config.array(),\n\t\tconnectNull: Config.bool(),\n\t\tstep: Config.shapeOf({\n\t\t\ttype: Config.oneOf(['step', 'step-after', 'step-before']),\n\t\t}),\n\t}).value({\n\t\tclasses: DEFAULT_LINE_CLASSES,\n\t}),\n\n\t/**\n\t * Sets billboard's data.mimeType config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\tmimeType: Config.string(),\n\n\t/**\n\t * Sets billboard's data.order config.\n\t * @default desc\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\torder: Config.string().value('desc'),\n\n\t/**\n\t * Sets padding on chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tpadding: Config.shapeOf({\n\t\tbottom: Config.number(),\n\t\tleft: Config.number(),\n\t\tright: Config.number(),\n\t\ttop: Config.number(),\n\t}),\n\n\t/**\n\t * Configuration options for pie chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tpie: Config.shapeOf({\n\t\tlabel: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tformat: Config.func(),\n\t\t\tthreshhold: Config.number(),\n\t\t\tratio: Config.func().number(),\n\t\t}),\n\t\texpand: Config.bool(),\n\t\tpadAngle: Config.number(),\n\t}),\n\n\t/**\n\t * Configuration options for chart points.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tpoint: Config.shapeOf({\n\t\tshow: Config.bool(),\n\t\tr: Config.number(),\n\t\tfocus: Config.shapeOf({\n\t\t\texpand: Config.shapeOf({\n\t\t\t\tenabled: Config.bool(),\n\t\t\t\tr: Config.number(),\n\t\t\t}),\n\t\t\tselect: Config.shapeOf({\n\t\t\t\tr: Config.number(),\n\t\t\t}),\n\t\t}),\n\t\tpattern: Config.array(),\n\t}).value({\n\t\tpattern: DEFAULT_POINT_PATTERNS,\n\t}),\n\n\t/**\n\t * Set an interval (in ms) to fetch the data.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Number}\n\t */\n\tpollingInterval: Config.number(),\n\n\t/**\n\t * Creates custom regions on chart that can be styled.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tregions: Config.arrayOf(\n\t\tConfig.shapeOf({\n\t\t\tclass: Config.string(),\n\t\t\tenabled: Config.oneOf(['x', 'y']).required(),\n\t\t\tend: Config.oneOfType([\n\t\t\t\tConfig.number(),\n\t\t\t\tConfig.string(),\n\t\t\t]).required(),\n\t\t\tstart: Config.oneOfType([\n\t\t\t\tConfig.number(),\n\t\t\t\tConfig.string(),\n\t\t\t]).required(),\n\t\t})\n\t),\n\n\t/**\n\t * Determines if chart auto resizes when viewport size changes.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(boolean|undefined)}\n\t */\n\tresizeAuto: Config.bool().setter(value => {\n\t\treturn value ? {auto: value} : value;\n\t}),\n\n\t/**\n\t * Load data from a multidimensional array. Sets billboard's `data.rows`\n\t * config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(array|undefined)}\n\t */\n\trows: Config.array(),\n\n\t/**\n\t * Sets billboard's `data.selection` config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tselection: Config.shapeOf({\n\t\tdraggable: Config.bool(),\n\t\tenabled: Config.bool(),\n\t\tgrouped: Config.bool(),\n\t\tisselectable: Config.func(),\n\t\tmultiple: Config.bool(),\n\t}),\n\n\t/**\n\t * Sets size of chart.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tsize: Config.shapeOf({\n\t\theight: Config.number(),\n\t\twidth: Config.number(),\n\t}),\n\n\t/**\n\t * Determines interpolation type of spline charts.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|object|undefined)}\n\t */\n\tsplineInterpolationType: Config.oneOfType([\n\t\tConfig.object(),\n\t\tConfig.string(),\n\t]).setter(value => {\n\t\treturn value ? {interpolation: {type: value}} : value;\n\t}),\n\n\t/**\n\t * Config options for subcharts.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tsubchart: Config.shapeOf({\n\t\tshow: Config.bool(),\n\t\tsize: Config.shapeOf({\n\t\t\theight: Config.number(),\n\t\t}),\n\t\tonbrush: Config.func(),\n\t}),\n\n\t/**\n\t * Customizes classname for svg element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\tsvgClassname: Config.string().setter(value => {\n\t\treturn value ? {classname: value} : value;\n\t}),\n\n\t/**\n\t * Display options for title element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\ttitle: Config.shapeOf({\n\t\ttext: Config.string(),\n\t\tpadding: Config.shapeOf({\n\t\t\tbottom: Config.number(),\n\t\t\tleft: Config.number(),\n\t\t\tright: Config.number(),\n\t\t\ttop: Config.number(),\n\t\t}),\n\t\tposition: Config.string(),\n\t}),\n\n\t/**\n\t * Display options for tooltip.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\ttooltip: Config.shapeOf({\n\t\tshow: Config.bool(),\n\t\tgrouped: Config.bool(),\n\t\tformat: Config.shapeOf({\n\t\t\tname: Config.func(),\n\t\t\ttitle: Config.func(),\n\t\t\tvalue: Config.func(),\n\t\t}),\n\t\tcontents: Config.func(),\n\t}),\n\n\t/**\n\t * Sets duration of transitions.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(number|undefined)}\n\t */\n\ttransitionDuration: Config.number().setter(value => {\n\t\treturn value ? {duration: value} : value;\n\t}),\n\n\t/**\n\t * The variety of chart that will be rendered.\n\t * @default line\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\ttype: Config.oneOf(types.all).value('line'),\n\n\t/**\n\t * Load a CSV or JSON file from a URL.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\turl: Config.string(),\n\n\t/**\n\t * Sets billboard's data.x config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\tx: Config.string(),\n\n\t/**\n\t * Sets billboard's data.xs config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(object|undefined)}\n\t */\n\txs: Config.object(),\n\n\t/**\n\t * Sets billboard's data.xFormat config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(string|undefined)}\n\t */\n\txFormat: Config.string(),\n\n\t/**\n\t * Sets billboard's data.xLocaltime config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(boolean|undefined)}\n\t */\n\txLocaltime: Config.bool(),\n\n\t/**\n\t * Sets billboard's data.xSort config.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\txSort: Config.bool(),\n\n\t/**\n\t * Configuration for bb chart zoom capabilities.\n\t * @default undefined\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?(Object|undefined)}\n\t */\n\tzoom: Config.shapeOf({\n\t\tenabled: Config.bool().value(true),\n\t\trescale: Config.bool().value(false),\n\t\textent: Config.array(),\n\t}),\n};\n\nexport {bb, d3, ChartBase};\nexport default ChartBase;\n"]}