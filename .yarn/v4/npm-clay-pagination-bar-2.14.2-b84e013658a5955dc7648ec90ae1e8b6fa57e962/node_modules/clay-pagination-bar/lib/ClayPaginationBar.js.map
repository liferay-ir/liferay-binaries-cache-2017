{"version":3,"sources":["../src/ClayPaginationBar.js"],"names":["ClayPaginationBar","event","emit","data","page","name","originalEvent","item","ClayComponent","STATE","baseHref","Config","string","currentPage","number","required","object","defaultEventHandler","elementClasses","entries","arrayOf","shapeOf","active","bool","href","label","id","selectedEntry","spritemap","totalEntries","Soy","register","templates"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA;;;;IAIMA,iB;;;;;;;;;;;;AACL;;;;;;mCAMiBC,K,EAAO;AACvB,UAAO,CAAC,KAAKC,IAAL,CAAU;AACjBC,UAAM;AACLC,WAAMH,MAAME,IAAN,CAAWC;AADZ,KADW;AAIjBC,UAAM,aAJW;AAKjBC,mBAAeL;AALE,IAAV,CAAR;AAOA;;AAED;;;;;;;;;6CAM2BA,K,EAAO;AACjC,UAAO,CAAC,KAAKC,IAAL,CAAU;AACjBC,UAAM;AACLI,WAAMN,MAAME,IAAN,CAAWI;AADZ,KADW;AAIjBF,UAAM,qBAJW;AAKjBC,mBAAeL;AALE,IAAV,CAAR;AAOA;;;;EA/B8BO,uB;;AAkChC;;;;;;;AAKAR,kBAAkBS,KAAlB,GAA0B;AACzB;;;;;;;AAOAC,WAAUC,mBAAOC,MAAP,EARe;;AAUzB;;;;;;;AAOAC,cAAaF,mBAAOG,MAAP,GAAgBC,QAAhB,EAjBY;;AAmBzB;;;;;;;AAOAZ,OAAMQ,mBAAOK,MAAP,EA1BmB;;AA4BzB;;;;;;;;AAQAC,sBAAqBN,mBAAOK,MAAP,EApCI;;AAsCzB;;;;;;;AAOAE,iBAAgBP,mBAAOC,MAAP,EA7CS;;AA+CzB;;;;;;;AAOAO,UAASR,mBAAOS,OAAP,CACRT,mBAAOU,OAAP,CAAe;AACdC,UAAQX,mBAAOY,IAAP,EADM;AAEdC,QAAMb,mBAAOC,MAAP,GAAgBG,QAAhB,EAFQ;AAGdU,SAAOd,mBAAOG,MAAP,GAAgBC,QAAhB;AAHO,EAAf,CADQ,EAMPA,QANO,EAtDgB;;AA8DzB;;;;;;;AAOAW,KAAIf,mBAAOC,MAAP,EArEqB;;AAuEzB;;;;;;;AAOAe,gBAAehB,mBAAOG,MAAP,GAAgBC,QAAhB,EA9EU;;AAgFzB;;;;;;;AAOAa,YAAWjB,mBAAOC,MAAP,GAAgBG,QAAhB,EAvFc;;AAyFzB;;;;;;;AAOAc,eAAclB,mBAAOG,MAAP,GAAgBC,QAAhB;AAhGW,CAA1B;;AAmGA,iCAAmB,qBAAnB,EAA0Cf,iBAA1C;;AAEA8B,mBAAIC,QAAJ,CAAa/B,iBAAb,EAAgCgC,8BAAhC;;QAEQhC,iB,GAAAA,iB;kBACOA,iB","file":"ClayPaginationBar.js","sourcesContent":["import 'clay-dropdown';\nimport 'clay-pagination';\nimport {Config} from 'metal-state';\nimport ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\n\nimport templates from './ClayPaginationBar.soy.js';\n\n/**\n * Metal ClayPaginationBar component.\n * @extends ClayComponent\n */\nclass ClayPaginationBar extends ClayComponent {\n\t/**\n\t * Continues the propagation of the page clicked event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handlePageClick(event) {\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\tpage: event.data.page,\n\t\t\t},\n\t\t\tname: 'pageClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the item per page clicked event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleItemsPerPageClicked(event) {\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\titem: event.data.item,\n\t\t\t},\n\t\t\tname: 'itemsPerPageClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayPaginationBar.STATE = {\n\t/**\n\t * Href to create each pagination page complete href.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {?(string|undefined)}\n\t */\n\tbaseHref: Config.string(),\n\n\t/**\n\t * Current pagination page number.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {!number}\n\t */\n\tcurrentPage: Config.number().required(),\n\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * List of available number of entries.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {!array}\n\t */\n\tentries: Config.arrayOf(\n\t\tConfig.shapeOf({\n\t\t\tactive: Config.bool(),\n\t\t\thref: Config.string().required(),\n\t\t\tlabel: Config.number().required(),\n\t\t})\n\t).required(),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * Entries index that points to selected entry.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {?(number|undefined)}\n\t */\n\tselectedEntry: Config.number().required(),\n\n\t/**\n\t * The path to the SVG spritemap file containing the icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {!string}\n\t */\n\tspritemap: Config.string().required(),\n\n\t/**\n\t * Total number of entries.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayPaginationBar\n\t * @type {!number}\n\t */\n\ttotalEntries: Config.number().required(),\n};\n\ndefineWebComponent('clay-pagination-bar', ClayPaginationBar);\n\nSoy.register(ClayPaginationBar, templates);\n\nexport {ClayPaginationBar};\nexport default ClayPaginationBar;\n"]}