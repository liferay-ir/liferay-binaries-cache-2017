{"version":3,"sources":["../src/ClayCollapse.js"],"names":["KEY_CODE_ENTER","KEY_CODE_SPACE","ClayCollapse","config","_eventHandler","EventHandler","transitionEnd","_getTransitionEndEvent","supportsTransitionEnd","on","_handleHeadersChanged","_syncHeaderListeners","_handleCollapsedChanged","content","collapsed","_close","_open","removeAllListeners","openClasses","transitionClasses","transitionType","_updateContentHeight","dom","addClasses","removeClasses","offsetHeight","style","removeProperty","_shimUnsupportedTransition","closedClasses","header","add","_handleClick","bind","_handleKeydown","headers","setAttribute","Array","isArray","forEach","el","document","createElement","transitionEndEvents","transition","WebkitTransition","MozTransition","OTransition","name","undefined","toggle","_animateClose","_animateOpen","event","keyCode","preventDefault","element","anim","emulateTransitionEnd","_attachHeaderListeners","once","_handleTransitionEnd","firstElementChild","State","STATE","validator","validators","string","value","bool","setter","toElement","oneOfType","object","array"],"mappings":"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","file":"ClayCollapse.js","sourcesContent":["import State, {validators} from 'metal-state';\nimport anim from 'metal-anim';\nimport dom, {toElement} from 'metal-dom';\nimport {EventHandler} from 'metal-events';\n\nconst KEY_CODE_ENTER = 13;\nconst KEY_CODE_SPACE = 32;\n\n/**\n * Collapse Metal Clay component.\n * @extends State\n */\nclass ClayCollapse extends State {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(config) {\n\t\tsuper(config);\n\n\t\tthis._eventHandler = new EventHandler();\n\n\t\tconst transitionEnd = this._getTransitionEndEvent();\n\n\t\tthis.supportsTransitionEnd = transitionEnd !== false;\n\t\tthis.transitionEnd = transitionEnd || 'transitionend';\n\n\t\tthis.on('headersChanged', this._handleHeadersChanged);\n\t\tthis._syncHeaderListeners();\n\n\t\tthis.on('collapsedChanged', this._handleCollapsedChanged);\n\n\t\tif (this.content) {\n\t\t\tthis.collapsed ? this._close() : this._open();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tthis._eventHandler.removeAllListeners();\n\t}\n\n\t/**\n\t * Animates close when `collapsed` is true\n\t * @protected\n\t */\n\t_animateClose() {\n\t\tconst {content, openClasses, transitionClasses} = this;\n\n\t\tcontent.transitionType = 0;\n\n\t\tthis._updateContentHeight();\n\n\t\tdom.addClasses(content, transitionClasses);\n\t\tdom.removeClasses(content, openClasses);\n\n\t\tcontent.offsetHeight;\n\t\tcontent.style.removeProperty('height');\n\n\t\tthis._shimUnsupportedTransition(content);\n\t}\n\n\t/**\n\t * Animates open when `collapsed` is false\n\t * @protected\n\t */\n\t_animateOpen() {\n\t\tconst {closedClasses, content, transitionClasses} = this;\n\n\t\tcontent.transitionType = 1;\n\n\t\tdom.removeClasses(content, closedClasses);\n\t\tdom.addClasses(content, transitionClasses);\n\n\t\tthis._updateContentHeight();\n\n\t\tthis._shimUnsupportedTransition(content);\n\t}\n\n\t/**\n\t * Attaches click and keydown listeners to header.\n\t * @param {!Element|!string} header\n\t * @protected\n\t */\n\t_attachHeaderListeners(header) {\n\t\tthis._eventHandler.add(\n\t\t\tdom.on(header, 'click', this._handleClick.bind(this)),\n\t\t\tdom.on(header, 'keydown', this._handleKeydown.bind(this))\n\t\t);\n\t}\n\n\t/**\n\t * Adds CSS classes and properties to the `content` and `headers` elements when\n\t * `collapsed` is true\n\t * @protected\n\t */\n\t_close() {\n\t\tconst {\n\t\t\tclosedClasses,\n\t\t\tcontent,\n\t\t\theaders,\n\t\t\topenClasses,\n\t\t\ttransitionClasses,\n\t\t} = this;\n\n\t\tdom.removeClasses(content, `${openClasses} ${transitionClasses}`);\n\t\tdom.addClasses(content, closedClasses);\n\t\tcontent.setAttribute('aria-expanded', false);\n\t\tcontent.style.removeProperty('height');\n\n\t\tif (Array.isArray(headers)) {\n\t\t\theaders.forEach(header => {\n\t\t\t\tdom.addClasses(header, 'collapsed');\n\t\t\t\ttoElement(header).setAttribute('aria-expanded', false);\n\t\t\t});\n\t\t} else {\n\t\t\tdom.addClasses(headers, 'collapsed');\n\t\t\ttoElement(headers).setAttribute('aria-expanded', false);\n\t\t}\n\t}\n\n\t/**\n\t * Checks to see if browser supports CSS3 Transitions and returns the name\n\t * of the transitionend event; returns false if it's not supported\n\t * @protected\n\t * @return {string|boolean} The name of the transitionend event or false\n\t * if not supported\n\t */\n\t_getTransitionEndEvent() {\n\t\tlet el = document.createElement('metalClayTransitionEnd');\n\n\t\tlet transitionEndEvents = {\n\t\t\ttransition: 'transitionend',\n\t\t\tWebkitTransition: 'webkitTransitionEnd',\n\t\t\tMozTransition: 'transitionend',\n\t\t\tOTransition: 'oTransitionEnd otransitionend',\n\t\t};\n\n\t\tfor (let name in transitionEndEvents) {\n\t\t\tif (el.style[name] !== undefined) {\n\t\t\t\treturn transitionEndEvents[name];\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handles a `click` event on the headers.\n\t * @protected\n\t */\n\t_handleClick() {\n\t\tthis.toggle();\n\t}\n\n\t/**\n\t * Syncs the `content` element according to the value of the `collapsed`\n\t * state, attaching and removing css properties and classes needed to open\n\t * and close the element.\n\t */\n\t_handleCollapsedChanged() {\n\t\tthis.collapsed ? this._animateClose() : this._animateOpen();\n\t}\n\n\t/**\n\t * Handles `changed` event of `headers` and attaches listeners.\n\t */\n\t_handleHeadersChanged() {\n\t\tthis._syncHeaderListeners();\n\t}\n\n\t/**\n\t * Handles a `keydown` event on the headers.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\t_handleKeydown(event) {\n\t\t// eslint-disable-next-line\n\t\tif (\n\t\t\tevent.keyCode === KEY_CODE_ENTER ||\n\t\t\tevent.keyCode === KEY_CODE_SPACE\n\t\t) {\n\t\t\tthis.toggle();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Handles the `transitionend` event on the content.\n\t * @protected\n\t */\n\t_handleTransitionEnd() {\n\t\tthis.content.transitionType ? this._open() : this._close();\n\t}\n\n\t/**\n\t * Adds CSS classes and properties to the `content` and `headers` elements when\n\t * `collapsed` is false\n\t * @protected\n\t */\n\t_open() {\n\t\tconst {content, headers, openClasses, transitionClasses} = this;\n\n\t\tdom.addClasses(content, openClasses);\n\t\tdom.removeClasses(content, transitionClasses);\n\t\tcontent.setAttribute('aria-expanded', true);\n\t\tcontent.style.removeProperty('height');\n\n\t\tif (Array.isArray(headers)) {\n\t\t\theaders.forEach(header => {\n\t\t\t\tdom.removeClasses(header, 'collapsed');\n\t\t\t\ttoElement(header).setAttribute('aria-expanded', true);\n\t\t\t});\n\t\t} else {\n\t\t\tdom.removeClasses(headers, 'collapsed');\n\t\t\ttoElement(headers).setAttribute('aria-expanded', true);\n\t\t}\n\t}\n\n\t/**\n\t * Fires a synthetic `transitionend` event for browsers that don't support\n\t * CSS3 transitions\n\t * @param {!Element} element\n\t * @protected\n\t */\n\t_shimUnsupportedTransition(element) {\n\t\tif (!this.supportsTransitionEnd) {\n\t\t\tanim.emulateTransitionEnd(element);\n\t\t}\n\t}\n\n\t/**\n\t * Syncs the component according to the value of the `headers` state,\n\t * attaching events to the new element and detaching from any previous one.\n\t * @protected\n\t */\n\t_syncHeaderListeners() {\n\t\tconst {headers} = this;\n\n\t\tthis._eventHandler.removeAllListeners();\n\n\t\tif (Array.isArray(headers)) {\n\t\t\theaders.forEach(header => {\n\t\t\t\tthis._attachHeaderListeners(header);\n\t\t\t});\n\t\t} else {\n\t\t\tthis._attachHeaderListeners(headers);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the content's visibility.\n\t * @public\n\t */\n\ttoggle() {\n\t\tconst {collapsed, content, transitionEnd} = this;\n\n\t\tdom.once(content, transitionEnd, this._handleTransitionEnd.bind(this));\n\n\t\tthis.collapsed = !collapsed;\n\t}\n\n\t/**\n\t * Calculates what the content height should be and sets it.\n\t * @protected\n\t */\n\t_updateContentHeight() {\n\t\tconst {content} = this;\n\n\t\tcontent.setAttribute(\n\t\t\t'style',\n\t\t\t`height: ${content.firstElementChild.offsetHeight}px;`\n\t\t);\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayCollapse.STATE = {\n\t/**\n\t * The CSS class added to `content` when it's collapsed.\n\t * @type {!string}\n\t */\n\tclosedClasses: {\n\t\tvalidator: validators.string,\n\t\tvalue: 'collapse',\n\t},\n\n\t/**\n\t * The open or closed state of the `content` element, false and true\n\t * respectively.\n\t * @type {boolean}\n\t */\n\tcollapsed: {\n\t\tvalidator: validators.bool,\n\t\tvalue: true,\n\t},\n\n\t/**\n\t * The element or selector that should collapse.\n\t * @type {!(string|Element)}\n\t */\n\tcontent: {\n\t\tsetter: dom.toElement,\n\t\tvalidator: validators.oneOfType([validators.string, validators.object]),\n\t},\n\n\t/**\n\t * The element that should trigger the toggling. If you pass in a\n\t * core.isElement value you will lose reference to the element once it is\n\t * removed from the dom. If you pass in a selector it will delegate it on\n\t * the document across all headers matching that selector.\n\t * @type {!(string|Array<string>|Element)}\n\t */\n\theaders: {\n\t\tvalidator: validators.oneOfType([\n\t\t\tvalidators.string,\n\t\t\tvalidators.array,\n\t\t\tvalidators.object,\n\t\t]),\n\t},\n\n\t/**\n\t * The CSS class added to `content` when it's open.\n\t * @type {!string}\n\t */\n\topenClasses: {\n\t\tvalidator: validators.string,\n\t\tvalue: 'collapse show',\n\t},\n\n\t/**\n\t * The CSS class added to `content` when it's transitioning.\n\t * @type {!string}\n\t */\n\ttransitionClasses: {\n\t\tvalidator: validators.string,\n\t\tvalue: 'collapsing',\n\t},\n};\n\nexport {ClayCollapse};\nexport default ClayCollapse;\n"]}