{"version":3,"sources":["../src/geomap.js"],"names":["d3","DEFAULT_COLOR","range","min","max","selected","value","Geomap","config","_data","data","_element","element","_color","color","_id","id","_pollingInterval","pollingInterval","_height","_width","w","h","svg","select","append","attr","_handleClickHandler","_handleClick","bind","rect","on","bounds","node","getBoundingClientRect","svgGroup","mapLayer","projection","geoMercator","scale","translate","width","height","path","geoPath","_selected","_onDataLoadHandler","_onDataLoad","then","apply","val","_internalPollingInterval","clearInterval","setInterval","_updateData","catch","err","remove","d","properties","colorScale","selectAll","style","_fillFn","feature","idx","selection","mapData","features","values","map","f","_domainMin","Math","_domainMax","scaleLinear","domain","enter","_handleMouseOut","_handleMouseOver"],"mappings":";;;;;;;;;AAAA;;IAAYA,E;;AACZ;;AACA;;;;;;AAEA,IAAMC,gBAAgB;AACrBC,QAAO;AACNC,OAAK,SADC;AAENC,OAAK;AAFC,EADc;AAKrBC,WAAU,SALW;AAMrBC,QAAO;AANc,CAAtB;;AASA;;;;;IAIaC,M,WAAAA,M;AACZ;;;AAGA,iBAAYC,MAAZ,EAAoB;AAAA;;AACnB,OAAKC,KAAL,GAAaD,OAAOE,IAApB;AACA,OAAKC,QAAL,GAAgBH,OAAOI,OAAvB;AACA,OAAKC,MAAL,GAAcL,OAAOM,KAAP,IAAgBb,aAA9B;AACA,OAAKc,GAAL,GAAWP,OAAOQ,EAAlB;AACA,OAAKC,gBAAL,GAAwBT,OAAOU,eAA/B;;AAEA,OAAKC,OAAL,GAAe,MAAf;AACA,OAAKC,MAAL,GAAc,MAAd;AACA;;AAED;;;;;;;6BAGW;AAAA;;AACV,OAAI,0BAAJ,EAAoB;AACnB;AACA;;AAED,OAAMC,IACL,OAAO,KAAKD,MAAZ,KAAuB,QAAvB,GAAkC,KAAKA,MAAvC,GAAmD,KAAKA,MAAxD,OADD;AAEA,OAAME,IACL,OAAO,KAAKH,OAAZ,KAAwB,QAAxB,GACG,KAAKA,OADR,GAEM,KAAKA,OAFX,OADD;;AAKA,QAAKI,GAAL,GAAWvB,GACTwB,MADS,CACF,KAAKb,QADH,EAETc,MAFS,CAEF,KAFE,EAGTC,IAHS,CAGJ,OAHI,EAGKL,CAHL,EAITK,IAJS,CAIJ,QAJI,EAIMJ,CAJN,CAAX;;AAMA,QAAKK,mBAAL,GAA2B,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA3B;;AAEA,QAAKC,IAAL,GAAY,KAAKP,GAAL,CACVE,MADU,CACH,MADG,EAEVC,IAFU,CAEL,MAFK,EAEG,kBAFH,EAGVA,IAHU,CAGL,OAHK,EAGIL,CAHJ,EAIVK,IAJU,CAIL,QAJK,EAIKJ,CAJL,EAKVS,EALU,CAKP,OALO,EAKE,KAAKJ,mBALP,CAAZ;;AAOA,OAAMK,SAAS,KAAKT,GAAL,CAASU,IAAT,GAAgBC,qBAAhB,EAAf;;AAEA,QAAKC,QAAL,GAAgB,KAAKZ,GAAL,CAASE,MAAT,CAAgB,GAAhB,CAAhB;AACA,QAAKW,QAAL,GAAgB,KAAKD,QAAL,CAAcV,MAAd,CAAqB,GAArB,CAAhB;AACA,QAAKY,UAAL,GAAkBrC,GAChBsC,WADgB,GAEhBC,KAFgB,CAEV,GAFU,EAGhBC,SAHgB,CAGN,CAACR,OAAOS,KAAP,GAAe,CAAhB,EAAmBT,OAAOU,MAAP,GAAgB,CAAnC,CAHM,CAAlB;;AAKA,QAAKC,IAAL,GAAY3C,GAAG4C,OAAH,GAAaP,UAAb,CAAwB,KAAKA,UAA7B,CAAZ;AACA,QAAKQ,SAAL,GAAiB,IAAjB;;AAEA,QAAKC,kBAAL,GAA0B,KAAKC,WAAL,CAAiBlB,IAAjB,CAAsB,IAAtB,CAA1B;;AAEA,0BAAY,KAAKpB,KAAjB,EACEuC,IADF,CACO,eAAO;AACZ,UAAKF,kBAAL,CAAwBG,KAAxB,CAA8B,KAA9B,EAAoC,CAAC,IAAD,EAAOC,GAAP,CAApC;;AAEA,QAAI,MAAKC,wBAAT,EAAmC;AAClCC,mBAAc,MAAKD,wBAAnB;AACA;;AAED,QAAI,MAAKjC,eAAT,EAA0B;AACzB,WAAKiC,wBAAL,GAAgCE,YAAY,YAAM;AACjD,YAAKC,WAAL,CAAiB,MAAK5C,IAAtB;AACA,MAF+B,EAE7B,MAAKO,gBAFwB,CAAhC;AAGA;AACD,IAbF,EAcEsC,KAdF,CAcQ,eAAO;AACb,UAAKT,kBAAL,CAAwBG,KAAxB,CAA8B,KAA9B,EAAoC,CAACO,GAAD,EAAM,IAAN,CAApC;AACA,IAhBF;AAiBA;;AAED;;;;;;6BAGW;AACV,OAAI,0BAAJ,EAAoB;AACnB;AACA;;AAED,OAAI,KAAKL,wBAAT,EAAmC;AAClCC,kBAAc,KAAKD,wBAAnB;AACA,SAAKA,wBAAL,GAAgC,IAAhC;AACA;;AAED,OAAI,KAAK5B,GAAT,EAAc;AACb,SAAKA,GAAL,CAASkC,MAAT;AACA;AACD;;AAED;;;;;;;;;0BAMQC,C,EAAG;AACV,OAAMpD,QAAQoD,KAAKA,EAAEC,UAAP,GAAoBD,EAAEC,UAAF,CAAa,KAAK9C,MAAL,CAAYP,KAAzB,CAApB,GAAsD,CAApE;AACA,UAAO,KAAKsD,UAAL,CAAgBtD,KAAhB,CAAP;AACA;AACD;;;;;;4BAGU;AACT,UAAO;AACNoC,YAAQ,KAAKvB,OADP;AAENsB,WAAO,KAAKrB;AAFN,IAAP;AAIA;;AAED;;;;;;;;+BAKasC,C,EAAG;AAAA;;AACf,OAAIA,KAAK,KAAKb,SAAL,KAAmBa,CAA5B,EAA+B;AAC9B,SAAKb,SAAL,GAAiBa,CAAjB;AACA,IAFD,MAEO;AACN,SAAKb,SAAL,GAAiB,IAAjB;AACA;;AAED;AACA,QAAKT,QAAL,CACEyB,SADF,CACY,MADZ,EAEEC,KAFF,CAEQ,MAFR,EAEgB;AAAA,WACd,OAAKjB,SAAL,IAAkBa,MAAM,OAAKb,SAA7B,GACG,OAAKhC,MAAL,CAAYR,QADf,GAEG,OAAK0D,OAAL,CAAalC,IAAb,CAAkB,MAAlB,EAAwB6B,CAAxB,CAHW;AAAA,IAFhB;AAOA;;AAED;;;;;;;;;;mCAOiBM,O,EAASC,G,EAAKC,S,EAAW;AACzC,OAAMjC,OAAOiC,UAAUD,GAAV,CAAb;AACAjE,MAAGwB,MAAH,CAAUS,IAAV,EAAgB6B,KAAhB,CAAsB,MAAtB,EAA8B,KAAKjD,MAAL,CAAYR,QAA1C;AACA;;AAED;;;;;;;;;;kCAOgB2D,O,EAASC,G,EAAKC,S,EAAW;AACxC,OAAMjC,OAAOiC,UAAUD,GAAV,CAAb;AACAjE,MAAGwB,MAAH,CAAUS,IAAV,EAAgB6B,KAAhB,CAAsB,MAAtB,EAA8B,KAAKC,OAAL,CAAalC,IAAb,CAAkB,IAAlB,CAA9B;AACA;;AAED;;;;;;;;;8BAMY2B,G,EAAKW,O,EAAS;AAAA;;AACzB,OAAIX,GAAJ,EAAS;AACR,UAAMA,GAAN;AACA;AACD,OAAMY,WAAWD,QAAQC,QAAzB;;AAEA;AACA,OAAMC,SAASD,SAASE,GAAT,CAAa;AAAA,WAAKC,EAAEZ,UAAF,CAAa,OAAK9C,MAAL,CAAYP,KAAzB,CAAL;AAAA,IAAb,CAAf;;AAEA,QAAKkE,UAAL,GAAkBC,KAAKtE,GAAL,CAAS8C,KAAT,CAAe,IAAf,EAAqBoB,MAArB,CAAlB;AACA,QAAKK,UAAL,GAAkBD,KAAKrE,GAAL,CAAS6C,KAAT,CAAe,IAAf,EAAqBoB,MAArB,CAAlB;;AAEA,QAAKT,UAAL,GAAkB5D,GAChB2E,WADgB,GAEhBC,MAFgB,CAET,CAAC,KAAKJ,UAAN,EAAkB,KAAKE,UAAvB,CAFS,EAGhBxE,KAHgB,CAGV,CAAC,KAAKW,MAAL,CAAYX,KAAZ,CAAkBC,GAAnB,EAAwB,KAAKU,MAAL,CAAYX,KAAZ,CAAkBE,GAA1C,CAHU,CAAlB;;AAKA,QAAKgC,QAAL,CACEyB,SADF,CACY,MADZ,EAEEnD,IAFF,CAEO0D,QAFP,EAGES,KAHF,GAIEpD,MAJF,CAIS,MAJT,EAKEC,IALF,CAKO,GALP,EAKY,KAAKiB,IALjB,EAMEjB,IANF,CAMO,eANP,EAMwB,oBANxB,EAOEA,IAPF,CAOO,MAPP,EAOe,KAAKqC,OAAL,CAAalC,IAAb,CAAkB,IAAlB,CAPf,EAQEE,EARF,CAQK,OARL,EAQc,KAAKJ,mBARnB,EASEI,EATF,CASK,UATL,EASiB,KAAK+C,eAAL,CAAqBjD,IAArB,CAA0B,IAA1B,CATjB,EAUEE,EAVF,CAUK,WAVL,EAUkB,KAAKgD,gBAAL,CAAsBlD,IAAtB,CAA2B,IAA3B,CAVlB;AAWA;;AAED;;;;;;;;8BAKYnB,I,EAAM;AAAA;;AACjB,0BAAYA,IAAZ,EACEsC,IADF,CACO,eAAO;AACZ,WAAKF,kBAAL,CAAwBG,KAAxB,CAA8B,MAA9B,EAAoC,CAAC,IAAD,EAAOC,GAAP,CAApC;AACA,IAHF,EAIEK,KAJF,CAIQ,eAAO;AACb,WAAKT,kBAAL,CAAwBG,KAAxB,CAA8B,MAA9B,EAAoC,CAACO,GAAD,EAAM,IAAN,CAApC;AACA,IANF;AAOA","file":"geomap.js","sourcesContent":["import * as d3 from 'd3';\nimport {isServerSide} from 'metal';\nimport {resolveData} from './data';\n\nconst DEFAULT_COLOR = {\n\trange: {\n\t\tmin: '#b1d4ff',\n\t\tmax: '#0065e4',\n\t},\n\tselected: '#4b9bff',\n\tvalue: 'pop_est',\n};\n\n/**\n * Geomap Base class.\n * @class Geomap\n */\nexport class Geomap {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(config) {\n\t\tthis._data = config.data;\n\t\tthis._element = config.element;\n\t\tthis._color = config.color || DEFAULT_COLOR;\n\t\tthis._id = config.id;\n\t\tthis._pollingInterval = config.pollingInterval;\n\n\t\tthis._height = '100%';\n\t\tthis._width = '100%';\n\t}\n\n\t/**\n\t * Function to call when component is first mounting/attaching\n\t */\n\tattached() {\n\t\tif (isServerSide()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w =\n\t\t\ttypeof this._width === 'string' ? this._width : `${this._width}px`;\n\t\tconst h =\n\t\t\ttypeof this._height === 'string'\n\t\t\t\t? this._height\n\t\t\t\t: `${this._height}px`;\n\n\t\tthis.svg = d3\n\t\t\t.select(this._element)\n\t\t\t.append('svg')\n\t\t\t.attr('width', w)\n\t\t\t.attr('height', h);\n\n\t\tthis._handleClickHandler = this._handleClick.bind(this);\n\n\t\tthis.rect = this.svg\n\t\t\t.append('rect')\n\t\t\t.attr('fill', 'rgba(1, 1, 1, 0)')\n\t\t\t.attr('width', w)\n\t\t\t.attr('height', h)\n\t\t\t.on('click', this._handleClickHandler);\n\n\t\tconst bounds = this.svg.node().getBoundingClientRect();\n\n\t\tthis.svgGroup = this.svg.append('g');\n\t\tthis.mapLayer = this.svgGroup.append('g');\n\t\tthis.projection = d3\n\t\t\t.geoMercator()\n\t\t\t.scale(100)\n\t\t\t.translate([bounds.width / 2, bounds.height / 2]);\n\n\t\tthis.path = d3.geoPath().projection(this.projection);\n\t\tthis._selected = null;\n\n\t\tthis._onDataLoadHandler = this._onDataLoad.bind(this);\n\n\t\tresolveData(this._data)\n\t\t\t.then(val => {\n\t\t\t\tthis._onDataLoadHandler.apply(this, [null, val]);\n\n\t\t\t\tif (this._internalPollingInterval) {\n\t\t\t\t\tclearInterval(this._internalPollingInterval);\n\t\t\t\t}\n\n\t\t\t\tif (this.pollingInterval) {\n\t\t\t\t\tthis._internalPollingInterval = setInterval(() => {\n\t\t\t\t\t\tthis._updateData(this.data);\n\t\t\t\t\t}, this._pollingInterval);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis._onDataLoadHandler.apply(this, [err, null]);\n\t\t\t});\n\t}\n\n\t/**\n\t * Function to call when disposing instance\n\t */\n\tdisposed() {\n\t\tif (isServerSide()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._internalPollingInterval) {\n\t\t\tclearInterval(this._internalPollingInterval);\n\t\t\tthis._internalPollingInterval = null;\n\t\t}\n\n\t\tif (this.svg) {\n\t\t\tthis.svg.remove();\n\t\t}\n\t}\n\n\t/**\n\t * Fill function\n\t * @param {Object} d\n\t * @protected\n\t * @return {Number}\n\t */\n\t_fillFn(d) {\n\t\tconst value = d && d.properties ? d.properties[this._color.value] : 0;\n\t\treturn this.colorScale(value);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tgetSize() {\n\t\treturn {\n\t\t\theight: this._height,\n\t\t\twidth: this._width,\n\t\t};\n\t}\n\n\t/**\n\t * Click handler\n\t * @param {Object} d\n\t * @protected\n\t */\n\t_handleClick(d) {\n\t\tif (d && this._selected !== d) {\n\t\t\tthis._selected = d;\n\t\t} else {\n\t\t\tthis._selected = null;\n\t\t}\n\n\t\t// Highlight the clicked province\n\t\tthis.mapLayer\n\t\t\t.selectAll('path')\n\t\t\t.style('fill', d =>\n\t\t\t\tthis._selected && d === this._selected\n\t\t\t\t\t? this._color.selected\n\t\t\t\t\t: this._fillFn.bind(this)(d)\n\t\t\t);\n\t}\n\n\t/**\n\t * Mouse over handler\n\t * @param {Object} feature\n\t * @param {Number} idx\n\t * @param {Array} selection\n\t * @protected\n\t */\n\t_handleMouseOver(feature, idx, selection) {\n\t\tconst node = selection[idx];\n\t\td3.select(node).style('fill', this._color.selected);\n\t}\n\n\t/**\n\t * Mouse over handler\n\t * @param {Object} feature\n\t * @param {Number} idx\n\t * @param {Array} selection\n\t * @protected\n\t */\n\t_handleMouseOut(feature, idx, selection) {\n\t\tconst node = selection[idx];\n\t\td3.select(node).style('fill', this._fillFn.bind(this));\n\t}\n\n\t/**\n\t * Data load handler\n\t * @param {Error} err\n\t * @param {Object} mapData\n\t * @protected\n\t */\n\t_onDataLoad(err, mapData) {\n\t\tif (err) {\n\t\t\tthrow err;\n\t\t}\n\t\tconst features = mapData.features;\n\n\t\t// Calculate domain based on values received\n\t\tconst values = features.map(f => f.properties[this._color.value]);\n\n\t\tthis._domainMin = Math.min.apply(null, values);\n\t\tthis._domainMax = Math.max.apply(null, values);\n\n\t\tthis.colorScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([this._domainMin, this._domainMax])\n\t\t\t.range([this._color.range.min, this._color.range.max]);\n\n\t\tthis.mapLayer\n\t\t\t.selectAll('path')\n\t\t\t.data(features)\n\t\t\t.enter()\n\t\t\t.append('path')\n\t\t\t.attr('d', this.path)\n\t\t\t.attr('vector-effect', 'non-scaling-stroke')\n\t\t\t.attr('fill', this._fillFn.bind(this))\n\t\t\t.on('click', this._handleClickHandler)\n\t\t\t.on('mouseout', this._handleMouseOut.bind(this))\n\t\t\t.on('mouseover', this._handleMouseOver.bind(this));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @param {Object} data The updated data\n\t * @protected\n\t */\n\t_updateData(data) {\n\t\tresolveData(data)\n\t\t\t.then(val => {\n\t\t\t\tthis._onDataLoadHandler.apply(this, [null, val]);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis._onDataLoadHandler.apply(this, [err, null]);\n\t\t\t});\n\t}\n}\n"]}