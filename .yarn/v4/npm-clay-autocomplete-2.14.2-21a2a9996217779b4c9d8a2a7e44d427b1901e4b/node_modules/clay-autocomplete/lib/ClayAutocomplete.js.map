{"version":3,"sources":["../src/ClayAutocomplete.js"],"names":["ClayAutocomplete","_dropdownItemFocused","addListener","_defaultDataChange","_defaultInputChange","refs","dataProvider","portal","on","_handleRenderedPortal","bind","inputFocused","input","focus","filteredItems","length","newVal","_query","_getUpdatedFilteredItems","event","data","value","dataSource","updateData","regexp","RegExp","allowedCharacters","match","Array","isArray","join","filter","extractData","map","newFilteredItemData","labelLocator","label","_performCall","filteredItem","valueLocator","emit","name","originalEvent","_handleItemSelected","delegateTarget","getAttribute","index","item","Number","target","newValue","_getCharactersAllowed","char","substr","inputValue","key","stopPropagation","tagName","preventDefault","_setFocusItem","shiftKey","element","eventFromInput","alignElement","widthElement","clientWidth","bodyElement","dropdown","_dropdownWidth","_alignedPosition","Align","align","BottomCenter","param","direction","elements","querySelectorAll","ClayComponent","STATE","Config","validator","isValidPosition","internal","number","instanceOf","contentRenderer","string","object","oneOfType","array","func","required","debounceTime","defaultEventHandler","elementClasses","enableAutocomplete","console","warn","elem","id","dataProviderInitialData","dropdownPortalElement","inputElementClasses","bool","inputName","placeholder","pollingInterval","requestInputMode","oneOf","requestOptions","shapeOf","method","mode","cache","credentials","headers","redirect","referrer","body","requestPolling","requestRetries","requestTimeout","unstable_content","any","useDefaultClasses","Soy","register","templates"],"mappings":"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","file":"ClayAutocomplete.js","sourcesContent":["import 'clay-data-provider';\nimport 'clay-portal';\nimport {Align} from 'metal-position';\nimport {Config} from 'metal-state';\nimport {isFunction} from 'metal';\nimport ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\n\nimport templates from './ClayAutocomplete.soy.js';\n\n/**\n * Metal ClayAutocomplete component.\n * @extends ClayComponent\n */\nclass ClayAutocomplete extends ClayComponent {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis._dropdownItemFocused = null;\n\n\t\tthis.addListener('dataChange', this._defaultDataChange, true);\n\t\tthis.addListener('inputChange', this._defaultInputChange, true);\n\t\tthis.refs.dataProvider.refs.portal.on(\n\t\t\t'rendered',\n\t\t\tthis._handleRenderedPortal.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trendered() {\n\t\tif (this.inputFocused === true) {\n\t\t\tthis.refs.input.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposed() {\n\t\tthis._dropdownItemFocused = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsyncFilteredItems() {\n\t\tif (!this.filteredItems.length) {\n\t\t\tthis._dropdownItemFocused = null;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsyncInputFocused(newVal) {\n\t\tif (newVal === true) {\n\t\t\tthis.refs.input.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Sets filtered items with received data\n\t * @private\n\t */\n\t_defaultDataChange() {\n\t\tif (this._query) {\n\t\t\tthis.filteredItems = this._getUpdatedFilteredItems();\n\t\t} else {\n\t\t\tthis.filteredItems = [];\n\t\t}\n\t}\n\n\t/**\n\t * Filters the items according to received input\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_defaultInputChange(event) {\n\t\tthis._query = event.data.value;\n\n\t\tif (this._query) {\n\t\t\tif (isFunction(this.dataSource)) {\n\t\t\t\tthis.refs.dataProvider.updateData(this._query);\n\t\t\t} else {\n\t\t\t\tthis.filteredItems = this._getUpdatedFilteredItems();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.filteredItems = [];\n\t\t}\n\t}\n\n\t/**\n\t * Gets the accepted characters of the input\n\t * element values\n\t * @param {!string} value\n\t * @protected\n\t * @return {string}\n\t */\n\t_getCharactersAllowed(value) {\n\t\tconst regexp = new RegExp(this.allowedCharacters);\n\t\tconst match = value.match(regexp);\n\n\t\treturn Array.isArray(match) ? match.join('') : '';\n\t}\n\n\t/**\n\t * Gets the the udpated filtered items\n\t * @protected\n\t * @return {Array}\n\t */\n\t_getUpdatedFilteredItems() {\n\t\tlet filteredItems = this.refs.dataProvider.filter(\n\t\t\tthis._query,\n\t\t\tthis.extractData\n\t\t);\n\n\t\tfilteredItems.map(filteredItem => {\n\t\t\tlet newFilteredItemData = {};\n\n\t\t\tif (this.labelLocator) {\n\t\t\t\tnewFilteredItemData.label = this._performCall(\n\t\t\t\t\tthis.labelLocator,\n\t\t\t\t\tfilteredItem.data\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.valueLocator) {\n\t\t\t\tnewFilteredItemData.value = this._performCall(\n\t\t\t\t\tthis.valueLocator,\n\t\t\t\t\tfilteredItem.data\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof filteredItem.data === 'string') {\n\t\t\t\tfilteredItem.data = newFilteredItemData;\n\t\t\t} else {\n\t\t\t\tfilteredItem.data.label = newFilteredItemData.label;\n\t\t\t\tfilteredItem.data.value = newFilteredItemData.value;\n\t\t\t}\n\t\t});\n\n\t\treturn filteredItems;\n\t}\n\n\t/**\n\t * Continues the propagation of the data change event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleDataChange(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'dataChange',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the item clicked event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleDropdownItemClick(event) {\n\t\treturn this._handleItemSelected(\n\t\t\tevent,\n\t\t\tevent.delegateTarget.getAttribute('data-dropdown-item-index')\n\t\t);\n\t}\n\n\t/**\n\t * Handle the selected item in the dropdown and trigger the itemSelected event.\n\t * @param {!Event} event\n\t * @param {!string} index\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleItemSelected(event, index) {\n\t\tconst item = this.filteredItems[Number(index)];\n\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\titem: item.data,\n\t\t\t},\n\t\t\tname: 'itemSelected',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the input blur event and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnBlur(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'inputOnBlur',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the input focus event and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnFocus(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'inputOnFocus',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the input event and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnInput(event) {\n\t\tconst {value} = event.target;\n\t\tconst newValue = this.allowedCharacters\n\t\t\t? this._getCharactersAllowed(value)\n\t\t\t: value;\n\t\tconst char = newValue.substr(-1);\n\n\t\t// Updates the value of the input with the value\n\t\t// entered by the user in case the validation is false\n\t\t// the above components can update the state of the input value.\n\t\tthis.inputValue = value;\n\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\tvalue: newValue,\n\t\t\t\tchar,\n\t\t\t},\n\t\t\tname: 'inputChange',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the onKeydown events and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnKeydown(event) {\n\t\tswitch (event.key) {\n\t\tcase 'Enter':\n\t\t\tevent.stopPropagation();\n\t\t\tif (\n\t\t\t\tthis.filteredItems.length &&\n\t\t\t\t\tevent.delegateTarget.tagName !== 'INPUT'\n\t\t\t) {\n\t\t\t\tthis._handleItemSelected(\n\t\t\t\t\tevent,\n\t\t\t\t\tevent.target.getAttribute('data-dropdown-item-index')\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'Tab':\n\t\t\tif (\n\t\t\t\tthis.inputFocused &&\n\t\t\t\t\tthis.filteredItems &&\n\t\t\t\t\tthis.filteredItems.length > 0\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis._setFocusItem(event.shiftKey);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\telement: event.target,\n\t\t\t\tvalue: this.refs.input.value,\n\t\t\t\tkey: event.key,\n\t\t\t\teventFromInput: event.delegateTarget.tagName === 'INPUT',\n\t\t\t},\n\t\t\tname: 'inputOnKeydown',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handle when the lifecycle `rendered` is called in ClayPortal.\n\t * @protected\n\t */\n\t_handleRenderedPortal() {\n\t\tconst alignElement = this.element;\n\n\t\tif (alignElement) {\n\t\t\tconst widthElement = alignElement.clientWidth;\n\t\t\tconst bodyElement = this.refs.dataProvider.refs.portal.refs\n\t\t\t\t.dropdown;\n\n\t\t\tthis._dropdownWidth = widthElement;\n\t\t\tthis._alignedPosition = Align.align(\n\t\t\t\tbodyElement,\n\t\t\t\talignElement,\n\t\t\t\tAlign.BottomCenter,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Handles data mapping.\n\t * @param {!(function|string)} param\n\t * @param {!Array} data\n\t * @protected\n\t * @return {!(string|number)}\n\t */\n\t_performCall(param, data) {\n\t\tif (typeof param === 'function') {\n\t\t\treturn param(data);\n\t\t}\n\n\t\tif (typeof data === 'string') {\n\t\t\treturn data;\n\t\t}\n\n\t\treturn data[param];\n\t}\n\n\t/**\n\t * Handle the interactions in the dropdown and add focus on the items.\n\t * @param {!Boolean} direction\n\t * @protected\n\t */\n\t_setFocusItem(direction) {\n\t\tif (this.filteredItems.length) {\n\t\t\tconst {dropdown} = this.refs.dataProvider.refs.portal.refs;\n\t\t\tconst elements = dropdown.querySelectorAll(\n\t\t\t\t'a[data-dropdown-item-index]'\n\t\t\t);\n\n\t\t\tif (direction && this._dropdownItemFocused === 0) {\n\t\t\t\tthis.refs.input.focus();\n\t\t\t\tthis._dropdownItemFocused = null;\n\t\t\t} else if (\n\t\t\t\t!(direction === true && this._dropdownItemFocused === null)\n\t\t\t) {\n\t\t\t\tthis._dropdownItemFocused =\n\t\t\t\t\tthis._dropdownItemFocused === null ||\n\t\t\t\t\telements.length - 1 === this._dropdownItemFocused\n\t\t\t\t\t\t? direction\n\t\t\t\t\t\t\t? this._dropdownItemFocused - 1\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t: direction\n\t\t\t\t\t\t\t? this._dropdownItemFocused - 1\n\t\t\t\t\t\t\t: this._dropdownItemFocused + 1;\n\n\t\t\t\telements[this._dropdownItemFocused].focus();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayAutocomplete.STATE = {\n\t/**\n\t * The current position of the tooltip after being aligned via `Align.align`.\n\t * @default Align.isValidPosition\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {!number}\n\t */\n\t_alignedPosition: Config.validator(Align.isValidPosition).internal(),\n\n\t/**\n\t * Flag to indicate the dropdown width referring to the width of the input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {!number}\n\t */\n\t_dropdownWidth: Config.number().internal(),\n\n\t/**\n\t * Flag to indicate the characters allowed in the\n\t * input element (e.g /[a-zA-Z0-9_]/g).\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?RegExp}\n\t */\n\tallowedCharacters: Config.instanceOf(RegExp),\n\n\t/**\n\t * Variation name to render different deltemplates.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tcontentRenderer: Config.string(),\n\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * The array of data items that the data source contains,\n\t * the URL for the data provider to request, or a function\n\t * that receives the query and returns a promise with the\n\t * elements.\n\t *\n\t * @instance\n\t * @default undefined\n\t * @memberof ClayAutocomplete\n\t * @type {!(string|object|array|function)}\n\t */\n\tdataSource: Config.oneOfType([\n\t\tConfig.array(),\n\t\tConfig.func(),\n\t\tConfig.object(),\n\t\tConfig.string(),\n\t]).required(),\n\n\t/**\n\t * Set the request debounce time\n\t * @instance\n\t * @default 200\n\t * @memberof ClayAutocomplete\n\t * @type {?(number)}\n\t */\n\tdebounceTime: Config.number().value(200),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * Flag to enable the filtered items with autocomplete default.\n\t * @default true\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?bool}\n\t */\n\tenableAutocomplete: Config.validator(value => {\n\t\tif (value) {\n\t\t\tconsole.warn(\n\t\t\t\t'🚨 `enableAutocomplete` has been deprecated and will be removed in the next major version.'\n\t\t\t);\n\t\t}\n\t}),\n\n\t/**\n\t * Extracts from the data the item to be compared in autocomplete.\n\t * @instance\n\t * @default (elem) => elem\n\t * @memberof ClayAutocomplete\n\t * @type {?(function|string)}\n\t */\n\textractData: Config.oneOfType([Config.func(), Config.string()]).value(\n\t\telem => elem\n\t),\n\n\t/**\n\t * List of filtered items for suggestion or autocomplete.\n\t * @default []\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?Array<Object>}\n\t */\n\tfilteredItems: Config.array(Config.object()).value([]),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * Set some initial data while the first request is being made\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(object|array)}\n\t */\n\tdataProviderInitialData: Config.oneOfType([\n\t\tConfig.object(),\n\t\tConfig.array(),\n\t]),\n\n\tdropdownPortalElement: Config.string().value('#clay_dropdown_portal'),\n\n\t/**\n\t * CSS classes to be applied to the input element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tinputElementClasses: Config.string(),\n\n\t/**\n\t * Flag to indicate that if the input is focused.\n\t * @instance\n\t * @default false\n\t * @memberof ClayAutocomplete\n\t * @type {?bool}\n\t */\n\tinputFocused: Config.bool().value(false),\n\n\t/**\n\t * Name of the selected items input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tinputName: Config.string(),\n\n\t/**\n\t * Value of the input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tinputValue: Config.string(),\n\n\t/**\n\t * Sets the name of the field to map the label of the item.\n\t * @default label\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(function|string)}\n\t */\n\tlabelLocator: Config.oneOfType([Config.func(), Config.string()]).value(\n\t\t'label'\n\t),\n\n\t/**\n\t * Input placeholder.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tplaceholder: Config.string(),\n\n\t/**\n\t * Flag to define how often to refetch data (ms)\n\t * @instance\n\t * @default 0\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\tpollingInterval: Config.number().value(0),\n\n\t/**\n\t * Specifies explicitly if request needs to be made with debounce\n\t * (userInput) or with polling (polling)\n\t * @instance\n\t * @default undefined\n\t * @memberof ClayAutocomplete\n\t * @type {?(object|array)}\n\t */\n\trequestInputMode: Config.oneOf(['polling', 'userInput']).value('userInput'),\n\n\t/**\n\t * Set ups the request options\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(object|undefined)}\n\t */\n\trequestOptions: Config.shapeOf({\n\t\tmethod: Config.string(),\n\t\tmode: Config.string(),\n\t\tcache: Config.string(),\n\t\tcredentials: Config.string(),\n\t\theaders: Config.object(),\n\t\tredirect: Config.string(),\n\t\treferrer: Config.string(),\n\t\tbody: Config.object(),\n\t}),\n\n\t/**\n\t * Flag to define how often to refetch data (ms)\n\t * @instance\n\t * @default 0\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\trequestPolling: Config.validator(value => {\n\t\tif (value) {\n\t\t\tconsole.warn(\n\t\t\t\t'🚨 `requestPolling` has been renamed to `pollingInterval` and will be deprecated and removed in the next release.'\n\t\t\t);\n\t\t}\n\t}),\n\n\t/**\n\t * Define how many attempts will be made when the request fails\n\t * @default 5\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\trequestRetries: Config.number().value(5),\n\n\t/**\n\t * Set timeout of the request\n\t * @default 30000\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\trequestTimeout: Config.number().value(30000),\n\n\t/**\n\t * The content renderer.\n\t * Warning: This API is unstable and can be changed at any time,\n\t * use at your own risk.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?html}\n\t */\n\tunstable_content: Config.any(),\n\n\t/**\n\t * Flag to indicate the autocomplete should use default css\n\t * classes or not.\n\t * @default true\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?bool}\n\t */\n\tuseDefaultClasses: Config.bool().value(true),\n\n\t/**\n\t * Sets the name of the field to map the value of the item.\n\t * @default label\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(function|string)}\n\t */\n\tvalueLocator: Config.oneOfType([Config.func(), Config.string()]).value(\n\t\t'value'\n\t),\n};\n\ndefineWebComponent('clay-autocomplete', ClayAutocomplete);\n\nSoy.register(ClayAutocomplete, templates);\n\nexport {ClayAutocomplete};\nexport default ClayAutocomplete;\n"]}