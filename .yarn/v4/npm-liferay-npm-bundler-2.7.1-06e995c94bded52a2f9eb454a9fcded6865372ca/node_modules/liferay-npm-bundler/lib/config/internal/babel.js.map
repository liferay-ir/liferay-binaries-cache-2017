{"version":3,"sources":["../../../src/config/internal/babel.js"],"names":["init","getConfig","getIgnore","loadBabelPlugins","config","state","pkg","get","presets","plugins","concat","map","presetModule","preset","err","default"],"mappings":";;;;;QAiBgBA,I,GAAAA,I;QASAC,S,GAAAA,S;QAQAC,S,GAAAA,S;QAUAC,gB,GAAAA,gB;;AAtChB;;;;AAEA;;;;oMARA;;;;;;AAUA,IAAIC,eAAJ;;AAEA;;;;;AAKO,SAASJ,IAAT,CAAcK,KAAd,EAAqB;AAC3BD,WAASC,MAAMD,MAAf;AACA;;AAED;;;;;AAKO,SAASH,SAAT,CAAmBK,GAAnB,EAAwB;AAC9B,SAAO,4BAAiBA,GAAjB,EAAsB,UAAtB,EAAkC,EAAlC,CAAP;AACA;;AAED;;;;AAIO,SAASJ,SAAT,GAAqB;AAC3B,SAAO,kBAAKK,GAAL,CAASH,MAAT,EAAiB,QAAjB,CAAP;AACA;;AAED;;;;;;AAMO,SAASD,gBAAT,CAA0BK,OAA1B,EAAmCC,OAAnC,EAA4C;AAAA;;AAClD,SAAO,YACLC,MADK,gCAEFF,QAAQG,GAAR,CAAY,kBAAU;AACxB,QAAIC,qBAAJ;;AAEA,QAAI;AACHA,qBAAe,yBAAcC,MAAd,CAAf;AACA,KAFD,CAEE,OAAOC,GAAP,EAAY;AACbF,qBAAe,2CAA8BC,MAA9B,CAAf;AACA;;AAED,WAAOD,aAAaH,OAAb,IAAwBG,aAAaG,OAAb,GAAuBN,OAAtD;AACA,GAVE,CAFE,GAcLC,MAdK,CAcED,OAdF,CAAP;AAeA","file":"babel.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport prop from 'dot-prop';\n\nimport {configRequire, getPackageConfig} from './util';\n\nlet config;\n\n/**\n * Initialize submodule\n * @param {object} state\n * @return {void}\n */\nexport function init(state) {\n\tconfig = state.config;\n}\n\n/**\n * Get Babel config for a given package\n * @param {PkgDesc} pkg the package descriptor\n * @return {Object} a Babel configuration object as defined by its API\n */\nexport function getConfig(pkg) {\n\treturn getPackageConfig(pkg, '.babelrc', {});\n}\n\n/**\n * Get paths of files to be left untouched by babel\n * @return {Array} array of output-relative file paths to avoid when processing with Babel\n */\nexport function getIgnore() {\n\treturn prop.get(config, 'ignore');\n}\n\n/**\n * Load Babel plugins from a given array of presets and plugins.\n * @param {Array} presets an array of Babel preset names as defined by .babelrc\n * @param {Array} plugins an array of Babel plugins names as defined by .babelrc\n * @return {Array} the instantiated Babel plugins\n */\nexport function loadBabelPlugins(presets, plugins) {\n\treturn []\n\t\t.concat(\n\t\t\t...presets.map(preset => {\n\t\t\t\tlet presetModule;\n\n\t\t\t\ttry {\n\t\t\t\t\tpresetModule = configRequire(preset);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tpresetModule = configRequire(`babel-preset-${preset}`);\n\t\t\t\t}\n\n\t\t\t\treturn presetModule.plugins || presetModule.default().plugins;\n\t\t\t})\n\t\t)\n\t\t.concat(plugins);\n}\n"]}