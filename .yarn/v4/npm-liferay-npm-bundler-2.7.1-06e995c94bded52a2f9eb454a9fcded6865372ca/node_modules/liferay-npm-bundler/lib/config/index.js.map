{"version":3,"sources":["../../src/config/index.js"],"names":["getGlobalConfig","getOutputDir","getReportFilePath","getVersionsInfo","isCreateJar","isDumpReport","isNoTracking","isVerbose","reloadConfig","setProgramArgs","babel","bundler","jar","util","config","pkgJson","savedProgramArgs","init","loadConfig","loadPkgJson","get","dir","normalize","join","require","info","version","Object","assign","getPluginVersions","has","process","set","cwd","existsSync","resolve","args","length","push","includes","concatAllPlugins","plugins","cfg","concatBundlerPlugins","concatBabelPlugins","babelPresets","babelPlugins","concat","map","configRequire","name","err","Array","isArray","pluginVersions","preset","key","hasOwnProperty","packages","plugin","code","pluginsBaseDir","presetFile","undefined","sync","basedir","originalConfig","recursive"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport prop from 'dot-prop';\nimport fs from 'fs';\nimport {getPackageDir} from 'liferay-npm-build-tools-common/lib/packages';\nimport path from 'path';\nimport readJsonSync from 'read-json-sync';\nimport resolveModule from 'resolve';\nimport merge from 'merge';\n\nimport * as babel from './internal/babel';\nimport * as bundler from './internal/bundler';\nimport * as jar from './internal/jar';\nimport * as util from './internal/util';\n\n// These state objects are consts so that they can be injected into private\n// submodules just once.\nconst config = {};\nconst pkgJson = {};\nconst savedProgramArgs = [];\n\n// Inject configuration in private submodules\nbabel.init({config, pkgJson});\nbundler.init({config, pkgJson});\njar.init({config, pkgJson});\nutil.init({config, pkgJson});\n\n// Load things for the first time\nloadConfig();\nloadPkgJson();\n\n// Reexport private modules as namespaced configuration\nexport {babel, bundler, jar};\n\n/**\n * Get global plugins configuration.\n * @return {Object} the global config hash\n */\nexport function getGlobalConfig() {\n\treturn prop.get(config, 'config');\n}\n\n/**\n * Get the configured output directory\n * @return {String} the directory path (with native separators)\n */\nexport function getOutputDir() {\n\tconst dir = prop.get(\n\t\tconfig,\n\t\t'output',\n\t\tisCreateJar() ? 'build' : 'build/resources/main/META-INF/resources'\n\t);\n\n\treturn path.normalize(dir);\n}\n\n/**\n * Get the path to the report file or null if no report is configured.\n * @return {String} a normalized path or null\n */\nexport function getReportFilePath() {\n\treturn path.join('.', 'liferay-npm-bundler-report.html');\n}\n\n/**\n * Get versions information\n * @return {void}\n */\nexport function getVersionsInfo() {\n\tconst pkgJson = require('../../package.json');\n\n\tlet info = {\n\t\t'liferay-npm-bundler': pkgJson.version,\n\t};\n\n\tinfo = Object.assign(info, getPluginVersions());\n\n\treturn info;\n}\n\n/**\n * Whether or not to create an OSGi bundle\n * @return {boolean}\n */\nexport function isCreateJar() {\n\treturn prop.get(config, 'create-jar', false);\n}\n\n/**\n * Whether or not to dump report\n * @return {boolean}\n */\nexport function isDumpReport() {\n\treturn prop.get(config, 'dump-report', false);\n}\n\n/**\n * Whether or not to track usage\n * @return {boolean}\n */\nexport function isNoTracking() {\n\tif (!prop.has(config, 'no-tracking')) {\n\t\tif (prop.has(process, 'env.LIFERAY_NPM_BUNDLER_NO_TRACKING')) {\n\t\t\tprop.set(config, 'no-tracking', true);\n\t\t}\n\t}\n\n\tif (!prop.has(config, 'no-tracking')) {\n\t\tlet dir = process.cwd();\n\n\t\twhile (\n\t\t\t!fs.existsSync(\n\t\t\t\tpath.join(dir, '.liferay-npm-bundler-no-tracking')\n\t\t\t) &&\n\t\t\tpath.resolve(dir, '..') !== dir\n\t\t) {\n\t\t\tdir = path.resolve(dir, '..');\n\t\t}\n\n\t\tprop.set(\n\t\t\tconfig,\n\t\t\t'no-tracking',\n\t\t\tfs.existsSync(path.join(dir, '.liferay-npm-bundler-no-tracking'))\n\t\t);\n\t}\n\n\treturn prop.get(config, 'no-tracking', false);\n}\n\n/**\n * Whether or not to dump detailed information about what the tool is doing\n * @return {boolean}\n */\nexport function isVerbose() {\n\treturn prop.get(config, 'verbose', false);\n}\n\n/**\n * Force a config reload\n * @return {void}\n */\nexport function reloadConfig() {\n\tloadConfig();\n\tloadPkgJson();\n\tsetProgramArgs(savedProgramArgs);\n}\n\n/**\n * Set CLI arguments to be able to override some .npmbundlerrc options.\n * @param {Array} args passed in CLI arguments\n */\nexport function setProgramArgs(args) {\n\tsavedProgramArgs.length = 0;\n\tsavedProgramArgs.push(args);\n\n\tif (args.includes('-j') || args.includes('--create-jar')) {\n\t\tconfig['create-jar'] = true;\n\t}\n\n\tif (args.includes('-r') || args.includes('--dump-report')) {\n\t\tconfig['dump-report'] = true;\n\t}\n\n\tif (args.includes('--no-tracking')) {\n\t\tconfig['no-tracking'] = true;\n\t}\n}\n\n/**\n * Add version numbers for all bundler and Babel plugins listed in `cfg`.\n * @param {Array} plugins the array of currently collected plugins\n * @param {Array} cfg a configuration subsection\n * @return {Array} the concatenated array of collected plugins\n */\nfunction concatAllPlugins(plugins, cfg) {\n\tif (cfg) {\n\t\tplugins = concatBundlerPlugins(plugins, cfg['plugins']);\n\t\tplugins = concatBundlerPlugins(plugins, cfg['post-plugins']);\n\t\tplugins = concatBabelPlugins(plugins, cfg['.babelrc']);\n\t}\n\n\treturn plugins;\n}\n\n/**\n * Add version numbers for all Babel plugins listed in `cfg`.\n * @param {Array} plugins the array of currently collected plugins\n * @param {Array} cfg a configuration subsection\n * @return {Array} the concatenated array of collected plugins\n */\nfunction concatBabelPlugins(plugins, cfg) {\n\tif (!cfg) {\n\t\treturn plugins;\n\t}\n\n\tconst babelPresets = cfg['presets'];\n\tconst babelPlugins = cfg['plugins'];\n\n\tif (babelPresets) {\n\t\tplugins = plugins.concat(\n\t\t\tbabelPresets.map(name => {\n\t\t\t\ttry {\n\t\t\t\t\tutil.configRequire(name);\n\t\t\t\t\treturn name;\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn `babel-preset-${name}`;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tif (babelPlugins) {\n\t\tplugins = plugins.concat(\n\t\t\tbabelPlugins.map(name => {\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tname = name[0];\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tutil.configRequire(name);\n\t\t\t\t\treturn name;\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn `babel-plugin-${name}`;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\treturn plugins;\n}\n\n/**\n * Add version numbers for all bundler plugins listed in `cfg`.\n * @param {Array} plugins the array of currently collected plugins\n * @param {Array} cfg a configuration subsection\n * @return {Array} the concatenated array of collected plugins\n */\nfunction concatBundlerPlugins(plugins, cfg) {\n\tif (!cfg) {\n\t\treturn plugins;\n\t}\n\n\treturn plugins.concat(\n\t\tcfg.map(name => {\n\t\t\tif (Array.isArray(name)) {\n\t\t\t\tname = name[0];\n\t\t\t}\n\n\t\t\treturn `liferay-npm-bundler-plugin-${name}`;\n\t\t})\n\t);\n}\n\n/**\n * Get version numbers of all plugins used in the build.\n * @return {Object} a map of {plugin-name: version} values\n */\nfunction getPluginVersions() {\n\tconst pluginVersions = {};\n\n\t// Get preset plugin version\n\tif (config.preset) {\n\t\tconst pkgJson = util.configRequire(`${config.preset}/package.json`);\n\n\t\tpluginVersions[config.preset] = pkgJson.version;\n\t}\n\n\t// Get legacy package and package plugins versions\n\tlet plugins = [];\n\n\tfor (const key in config) {\n\t\tif (config.hasOwnProperty(key)) {\n\t\t\tplugins = concatAllPlugins(plugins, config[key]);\n\t\t}\n\t}\n\n\tfor (const key in config.packages) {\n\t\tif (config.packages.hasOwnProperty(key)) {\n\t\t\tplugins = concatAllPlugins(plugins, config.packages[key]);\n\t\t}\n\t}\n\n\tfor (const plugin of plugins) {\n\t\tif (!pluginVersions[plugin]) {\n\t\t\tconst pkgJson = util.configRequire(`${plugin}/package.json`);\n\n\t\t\tpluginVersions[plugin] = pkgJson.version;\n\t\t}\n\t}\n\n\treturn pluginVersions;\n}\n\n/**\n * Load configuration from current work dir into config object.\n * @return {void}\n */\nfunction loadConfig() {\n\t// Clean configuration\n\tfor (const key in config) {\n\t\tif (config.hasOwnProperty(key)) {\n\t\t\tdelete config[key];\n\t\t}\n\t}\n\n\t// Load base configuration\n\ttry {\n\t\tObject.assign(config, readJsonSync('.npmbundlerrc'));\n\t} catch (err) {\n\t\tif (err.code !== 'ENOENT') {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t// Store plugins base dir\n\tconfig.pluginsBaseDir = path.resolve('.');\n\n\t// Apply preset if necessary\n\tlet presetFile;\n\n\tif (config.preset === undefined) {\n\t\tpresetFile = require.resolve('liferay-npm-bundler-preset-standard');\n\t} else if (config.preset === '' || config.preset === false) {\n\t\t// don't load preset\n\t} else {\n\t\tpresetFile = resolveModule.sync(config.preset, {\n\t\t\tbasedir: '.',\n\t\t});\n\t}\n\n\tif (presetFile) {\n\t\tconst originalConfig = Object.assign({}, config);\n\t\tObject.assign(\n\t\t\tconfig,\n\t\t\tmerge.recursive(readJsonSync(presetFile), originalConfig)\n\t\t);\n\t\tconfig.pluginsBaseDir = getPackageDir(presetFile);\n\t}\n\n\t// Normalize\n\tconfig['/'] = config['/'] || {};\n\tconfig['config'] = config['config'] || {};\n\tconfig.packages = config.packages || {};\n}\n\n/**\n * Load package.json from current work dir into config object.\n * @return {void}\n */\nfunction loadPkgJson() {\n\t// Clean pkgJson\n\tfor (const key in pkgJson) {\n\t\tif (pkgJson.hasOwnProperty(key)) {\n\t\t\tdelete pkgJson[key];\n\t\t}\n\t}\n\n\tObject.assign(pkgJson, readJsonSync('package.json'));\n}\n"]}