{"version":3,"sources":["../src/index.js"],"names":["args","console","log","versionsInfo","config","getVersionsInfo","JSON","stringify","isNoTracking","run","insight","init","then","gl","start","process","hrtime","outputDir","resolve","getOutputDir","mkdirsSync","join","promises","push","bundleRootPackage","rootPackage","pkgs","bundler","getIncludeDependencies","Object","keys","map","id","filter","pkg","isRoot","dependencies","info","length","bundlePackage","Promise","all","isCreateJar","undefined","executionTime","sendAnalytics","isDumpReport","writeFileSync","getReportFilePath","toHtml","warningsPresent","debug","catch","abort","err","error","exit","srcPkg","clone","dir","isOutdated","srcPkgJson","processPackage","ignore","babel","getIgnore","addPackage","save","outPkgDir","name","version","reject","copyPackage","copied","exclusions","getExclusions","globs","concat","negate","prefix","state","getPlugins","files","plugin","packageProcessBundlerPlugin","fileFilter","statSync","path","isFile","relativePathMapper","substring","allFiles","sync","packageCopy","copy","phase","pkgJson","errorsPresent","warn","unique","warnsPresent"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport fs from 'fs-extra';\nimport globby from 'globby';\nimport * as gl from 'liferay-npm-build-tools-common/lib/globs';\nimport {getPackageTargetDir} from 'liferay-npm-build-tools-common/lib/packages';\nimport path from 'path';\nimport pretty from 'pretty-time';\nimport readJsonSync from 'read-json-sync';\n\nimport * as config from './config';\nimport {addPackageDependencies, getRootPkg} from './dependencies';\nimport * as insight from './insight';\nimport createJar from './jar';\nimport * as log from './log';\nimport manifest from './manifest';\nimport report from './report';\n\nimport {runPlugins, runBabel} from './runners';\nimport {\n\titerateSerially,\n\trenamePkgDirIfPkgJsonChanged,\n\treportLinkedDependencies,\n} from './util';\n\n/**\n * Default entry point for the liferay-npm-bundler.\n * @param {Array} args command line arguments\n * @return {void}\n */\nexport default function(args) {\n\tif (args[0] === '-h' || args[0] === '--help') {\n\t\tconsole.log(\n\t\t\t'Usage:',\n\t\t\t'liferay-npm-bundler',\n\t\t\t'[-h|--help]',\n\t\t\t'[-v|--version]',\n\t\t\t'[-r|--dump-report]',\n\t\t\t'[-j|--create-jar]',\n\t\t\t'[--no-tracking]'\n\t\t);\n\t\treturn;\n\t}\n\n\tconst versionsInfo = config.getVersionsInfo();\n\n\tif (args[0] === '-v' || args[0] === '--version') {\n\t\tconsole.log(JSON.stringify(versionsInfo, null, 2));\n\t\treturn;\n\t}\n\n\treport.versionsInfo(versionsInfo);\n\n\tif (config.isNoTracking()) {\n\t\trun();\n\t} else {\n\t\tinsight.init().then(run);\n\t}\n}\n\n/**\n * Real tool execution\n * @return {void}\n */\nfunction run() {\n\ttry {\n\t\tconst start = process.hrtime();\n\n\t\t// Create work directories\n\t\tconst outputDir = path.resolve(config.getOutputDir());\n\t\tfs.mkdirsSync(path.join(outputDir, 'node_modules'));\n\n\t\tconst promises = [];\n\n\t\t// Copy project's package.json\n\t\tpromises.push(bundleRootPackage(outputDir));\n\t\treport.rootPackage(getRootPkg());\n\n\t\t// Grab NPM dependencies\n\t\tlet pkgs = addPackageDependencies(\n\t\t\t{},\n\t\t\t'.',\n\t\t\tconfig.bundler.getIncludeDependencies()\n\t\t);\n\n\t\tpkgs = Object.keys(pkgs)\n\t\t\t.map(id => pkgs[id])\n\t\t\t.filter(pkg => !pkg.isRoot);\n\n\t\treport.dependencies(pkgs);\n\t\treportLinkedDependencies(readJsonSync('package.json'));\n\n\t\t// Process NPM dependencies\n\t\tlog.info(`Bundling ${pkgs.length} dependencies...`);\n\n\t\tpromises.push(\n\t\t\titerateSerially(pkgs, pkg => bundlePackage(pkg, outputDir))\n\t\t);\n\n\t\t// Report results\n\t\tPromise.all(promises)\n\t\t\t.then(() => (config.isCreateJar() ? createJar() : undefined))\n\t\t\t.then(() => {\n\t\t\t\t// Report and show execution time\n\t\t\t\tconst hrtime = process.hrtime(start);\n\t\t\t\treport.executionTime(hrtime);\n\t\t\t\tlog.info(`Bundling took ${pretty(hrtime)}`);\n\n\t\t\t\t// Send report analytics data\n\t\t\t\treport.sendAnalytics();\n\n\t\t\t\t// Write report if requested\n\t\t\t\tif (config.isDumpReport()) {\n\t\t\t\t\tfs.writeFileSync(\n\t\t\t\t\t\tconfig.getReportFilePath(),\n\t\t\t\t\t\treport.toHtml()\n\t\t\t\t\t);\n\t\t\t\t\tlog.info(`Report written to ${config.getReportFilePath()}`);\n\t\t\t\t} else if (report.warningsPresent) {\n\t\t\t\t\tlog.debug(`\n*************************************************************\n\n             WARNING FROM liferay-npm-bundler\n\nThe build has emitted some warning messages: we recommend\ncleaning the output, activating the 'dump-report' option\nin '.npmbundlerrc', and then reviewing the generated\n'liferay-npm-bundler-report.html' to make sure no problems\nwill arise during runtime.\n\n*************************************************************\n`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(abort);\n\t} catch (err) {\n\t\tabort(err);\n\t}\n}\n\n/**\n * Abort execution showing error message\n * @param  {Object} err the error object\n * @return {void}\n */\nfunction abort(err) {\n\tlog.error(err);\n\tprocess.exit(1);\n}\n\n/**\n * Copy project root package.json file to output directory.\n * @param {String} outputDir the output directory path\n * @return {Promise} a Promise fulfilled when the copy has been finished\n */\nfunction bundleRootPackage(outputDir) {\n\tconst srcPkg = getRootPkg();\n\tconst pkg = srcPkg.clone({dir: outputDir});\n\n\tif (!manifest.isOutdated(srcPkg)) {\n\t\tlog.debug(`Skipping root package (already bundled)`);\n\t\treturn Promise.resolve();\n\t}\n\n\t// Copy source package.json\n\tconst srcPkgJson = readJsonSync('package.json');\n\n\tfs.writeFileSync(\n\t\tpath.join(pkg.dir, 'package.json'),\n\t\tJSON.stringify(srcPkgJson, '', 2)\n\t);\n\n\t// Process package\n\treturn processPackage('pre', srcPkg, pkg)\n\t\t.then(() => runBabel(pkg, {ignore: config.babel.getIgnore()}))\n\t\t.then(() => processPackage('post', srcPkg, pkg))\n\t\t.then(() => manifest.addPackage(srcPkg, pkg))\n\t\t.then(() => manifest.save())\n\t\t.then(() => log.debug(`Bundled root package`));\n}\n\n/**\n * Bundle a npm package\n * @param {PkgDesc} srcPkg the source package descriptor\n * @param {String} outputDir directory where bundled packages are placed\n * @return {Promise} a promise that is fulfilled when the package is bundled\n */\nfunction bundlePackage(srcPkg, outputDir) {\n\tif (!manifest.isOutdated(srcPkg)) {\n\t\tlog.debug(`Skipping ${srcPkg.id} (already bundled)`);\n\t\treturn Promise.resolve();\n\t}\n\n\tlog.debug(`Bundling ${srcPkg.id}`);\n\n\tconst outPkgDir = path.join(\n\t\toutputDir,\n\t\t'node_modules',\n\t\tgetPackageTargetDir(srcPkg.name, srcPkg.version)\n\t);\n\n\tconst pkg = srcPkg.clone({dir: outPkgDir});\n\n\treturn new Promise((resolve, reject) => {\n\t\tcopyPackage(srcPkg, outPkgDir)\n\t\t\t.then(copied => {\n\t\t\t\tif (!copied) {\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tprocessPackage('pre', srcPkg, pkg)\n\t\t\t\t\t.then(() => runBabel(pkg))\n\t\t\t\t\t.then(() => processPackage('post', srcPkg, pkg))\n\t\t\t\t\t.then(() => renamePkgDirIfPkgJsonChanged(pkg))\n\t\t\t\t\t.then(pkg => manifest.addPackage(srcPkg, pkg))\n\t\t\t\t\t.then(() => manifest.save())\n\t\t\t\t\t.then(() => log.debug(`Bundled ${pkg.id}`))\n\t\t\t\t\t.then(resolve)\n\t\t\t\t\t.catch(reject);\n\t\t\t})\n\t\t\t.catch(reject);\n\t});\n}\n\n/**\n * Copy an NPM package to output directory.\n * @param {PkgDesc} pkg the package descriptor\n * @param {String} dir the output directory path\n * @return {Promise} a Promise fulfilled with true|false stating that the copy has been finished|rejected\n */\nfunction copyPackage(pkg, dir) {\n\tconst exclusions = config.bundler.getExclusions(pkg);\n\n\t// Determine what to copy\n\tconst globs = [`${pkg.dir}/**/*`, `!${pkg.dir}/node_modules/**/*`].concat(\n\t\tgl.negate(gl.prefix(`${pkg.dir}/`, exclusions))\n\t);\n\n\treturn globby(globs).then(files => {\n\t\t// Filter files with copy-plugins\n\t\tconst state = runPlugins(\n\t\t\tconfig.bundler.getPlugins('copy', pkg),\n\t\t\tpkg,\n\t\t\tpkg.clone({dir}),\n\t\t\t{\n\t\t\t\tfiles,\n\t\t\t},\n\t\t\t(plugin, log) => {\n\t\t\t\treport.packageProcessBundlerPlugin('copy', pkg, plugin, log);\n\t\t\t}\n\t\t);\n\t\tfiles = state.files;\n\n\t\t// Copy files\n\t\tconst fileFilter = path => fs.statSync(path).isFile();\n\t\tconst relativePathMapper = path => path.substring(pkg.dir.length + 1);\n\n\t\tfiles = files.filter(fileFilter).map(relativePathMapper);\n\n\t\tconst allFiles = globby\n\t\t\t.sync([`${pkg.dir}/**/*`])\n\t\t\t.filter(fileFilter)\n\t\t\t.map(relativePathMapper);\n\n\t\treport.packageCopy(pkg, allFiles, files);\n\n\t\tif (files.length == 0) {\n\t\t\treturn Promise.resolve(false);\n\t\t} else {\n\t\t\tconst promises = files.map(path =>\n\t\t\t\tfs.copy(`${pkg.dir}/${path}`, `${dir}/${path}`)\n\t\t\t);\n\n\t\t\treturn Promise.all(promises).then(() => true);\n\t\t}\n\t});\n}\n\n/**\n * Process an NPM package with the configured liferay-nmp-bundler plugins. This\n * function is called two times (known as phases) per package: one before Babel\n * runs and one after.\n * @param {String} phase 'pre' or 'post' depending on what phase we are in\n * @param {PkgDesc} srcPkg the source package descriptor\n * @param {PkgDesc} pkg the target package descriptor\n * @return {Promise} a Promise fulfilled when the process has been finished\n */\nfunction processPackage(phase, srcPkg, pkg) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst state = runPlugins(\n\t\t\t\tconfig.bundler.getPlugins(phase, pkg),\n\t\t\t\tsrcPkg,\n\t\t\t\tpkg,\n\t\t\t\t{\n\t\t\t\t\tpkgJson: readJsonSync(path.join(pkg.dir, 'package.json')),\n\t\t\t\t},\n\t\t\t\t(plugin, log) => {\n\t\t\t\t\treport.packageProcessBundlerPlugin(phase, pkg, plugin, log);\n\n\t\t\t\t\tif (log.errorsPresent) {\n\t\t\t\t\t\treport.warn(\n\t\t\t\t\t\t\t'There are errors for some of the ' +\n\t\t\t\t\t\t\t\t'liferay-npm-bundler plugins: please check ' +\n\t\t\t\t\t\t\t\t'details of bundler transformations.',\n\t\t\t\t\t\t\t{unique: true}\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (log.warnsPresent) {\n\t\t\t\t\t\treport.warn(\n\t\t\t\t\t\t\t'There are warnings for some of the ' +\n\t\t\t\t\t\t\t\t'liferay-npm-bundler plugins: please check ' +\n\t\t\t\t\t\t\t\t'details of bundler transformations.',\n\t\t\t\t\t\t\t{unique: true}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tfs.writeFileSync(\n\t\t\t\tpath.join(pkg.dir, 'package.json'),\n\t\t\t\tJSON.stringify(state.pkgJson, '', 2)\n\t\t\t);\n\n\t\t\tresolve();\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n"]}