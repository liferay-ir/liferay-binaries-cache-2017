'use strict';

var _util = require('../util');

var util = _interopRequireWildcard(_util);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/**
 * Â© 2017 Liferay, Inc. <https://liferay.com>
 *
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */

describe('loadSourceMap()', function () {
	it('works with //# annotation', function () {
		var sourceMap = util.loadSourceMap(_path2.default.join(__dirname, '__fixtures__', 'sourcemaps', 'sourceMapFile1.js.file'));

		expect(sourceMap).toMatchSnapshot();
	});

	it('works with /*# annotation', function () {
		var sourceMap = util.loadSourceMap(_path2.default.join(__dirname, '__fixtures__', 'sourcemaps', 'sourceMapFile2.js.file'));

		expect(sourceMap).toMatchSnapshot();
	});
});
//# sourceMappingURL=util.test.js.map