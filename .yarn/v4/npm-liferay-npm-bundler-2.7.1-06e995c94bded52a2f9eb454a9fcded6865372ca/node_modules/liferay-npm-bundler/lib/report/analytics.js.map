{"version":3,"sources":["../../src/report/analytics.js"],"names":["analyticsDump","insight","report","_packages","_versionsInfo","track","PROJECT_NAME","Object","keys","forEach","name","pkgId","version"],"mappings":";;;;;QAyCgBA,a,GAAAA,a;;AAnChB;;IAAYC,O;;;;AAEZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;AAKO,SAASD,aAAT,CAAuBE,MAAvB,EAA+B;AAAA,MAC9BC,SAD8B,GACFD,MADE,CAC9BC,SAD8B;AAAA,MACnBC,aADmB,GACFF,MADE,CACnBE,aADmB;;AAGrC;;AACAH,UAAQI,KAAR,CAAc,MAAd,EAAsBJ,QAAQK,YAA9B;;AAEA;AACAL,UAAQI,KAAR,CAAc,OAAd,EAAuB,OAAvB;;AAEA;AACAE,SAAOC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC;AAAA,WAClCR,QAAQI,KAAR,CAAc,SAAd,EAAyB,QAAzB,EAAmCK,IAAnC,EAAyCN,cAAcM,IAAd,CAAzC,CADkC;AAAA,GAAnC;;AAIA;AACAH,SAAOC,IAAP,CAAYL,SAAZ,EAAuBM,OAAvB,CAA+B,iBAAS;AAAA,0BACfN,UAAUQ,KAAV,CADe;AAAA,QAChCD,IADgC,mBAChCA,IADgC;AAAA,QAC1BE,OAD0B,mBAC1BA,OAD0B;;;AAGvCX,YAAQI,KAAR,CAAc,SAAd,EAAyB,YAAzB,EAAuCK,IAAvC,EAA6CE,OAA7C;AACA,GAJD;AAKA,C,CA7DD","file":"analytics.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport * as insight from '../insight';\n\n/*\n * Some important information about analytics.\n *\n * The data generated by this report dump can be analyzed by getting the raw\n * URLs from the GA API, using this URL:\n *\n * https://ga-dev-tools.appspot.com/query-explorer/?start-date=30daysAgo&end-date=today&metrics=ga%3Apageviews&dimensions=ga%3ApagePath\n *\n * Note that the URL gets the data for the last 30 days, but that may be\n * changed once in the page.\n *\n * Keep in mind that every time someone runs the bundler new statistics are\n * created, thus, the important information must be bundled inside the track\n * URL because the count will be a function of the times liferay-npm-bundler has\n * been executed.\n *\n * Apart from the previous caveat, it is also important to note that the project\n * configuration may change over time (maybe you use Angular 4 today, but 5\n * tomorrow) and that's why the URLs always start with a unique ID which is a\n * signature of (computer, project's name).\n *\n * To finish with, we must take care with report fields that may come empty. For\n * example, if some package has been processed, the bundler caches the result in\n * the build directory and doesn't process it any more, thus any information\n * related to that package will only be available to the analyticsDump function\n * in the first run but not the following.\n */\n\n/**\n * Dump a report information to Google Analytics.\n * @param  {Report} report the report to dump\n * @return {void}\n */\nexport function analyticsDump(report) {\n\tconst {_packages, _versionsInfo} = report;\n\n\t// Report project name\n\tinsight.track('name', insight.PROJECT_NAME);\n\n\t// Increase build count for this project\n\tinsight.track('build', 'count');\n\n\t// Increase plugin use counts for this project\n\tObject.keys(_versionsInfo).forEach(name =>\n\t\tinsight.track('bundler', 'plugin', name, _versionsInfo[name])\n\t);\n\n\t// Increase dependency use counts for this project\n\tObject.keys(_packages).forEach(pkgId => {\n\t\tconst {name, version} = _packages[pkgId];\n\n\t\tinsight.track('project', 'dependency', name, version);\n\t});\n}\n"]}