{"version":3,"sources":["../../src/__tests__/pkg-desc.test.js"],"names":["it","pkg","expect","id","toBe","ROOT_ID","name","version","dir","isRoot","clone"],"mappings":";;AAMA;;;;;;AAEAA,GAAG,+CAAH,EAAoD,YAAM;AACzD,KAAMC,MAAM,sBAAY,WAAZ,EAAyB,OAAzB,CAAZ;;AAEAC,QAAOD,IAAIE,EAAX,EAAeC,IAAf,CAAoB,kBAAQC,OAA5B;AACAH,QAAOD,IAAIK,IAAX,EAAiBF,IAAjB,CAAsB,WAAtB;AACAF,QAAOD,IAAIM,OAAX,EAAoBH,IAApB,CAAyB,OAAzB;AACAF,QAAOD,IAAIO,GAAX,EAAgBJ,IAAhB,CAAqB,GAArB;AACAF,QAAOD,IAAIQ,MAAX,EAAmBL,IAAnB,CAAwB,IAAxB;AACA,CARD,E,CARA;;;;;;AAkBAJ,GAAG,sDAAH,EAA2D,YAAM;AAChE,KAAMC,MAAM,sBAAY,WAAZ,EAAyB,OAAzB,EAAkC,MAAlC,EAA0C,IAA1C,CAAZ;;AAEAC,QAAOD,IAAIE,EAAX,EAAeC,IAAf,CAAoB,kBAAQC,OAA5B;AACAH,QAAOD,IAAIK,IAAX,EAAiBF,IAAjB,CAAsB,WAAtB;AACAF,QAAOD,IAAIM,OAAX,EAAoBH,IAApB,CAAyB,OAAzB;AACAF,QAAOD,IAAIO,GAAX,EAAgBJ,IAAhB,CAAqB,MAArB;AACAF,QAAOD,IAAIQ,MAAX,EAAmBL,IAAnB,CAAwB,IAAxB;AACA,CARD;;AAUAJ,GAAG,mDAAH,EAAwD,YAAM;AAC7D,KAAMC,MAAM,sBAAY,WAAZ,EAAyB,OAAzB,EAAkC,MAAlC,CAAZ;;AAEAC,QAAOD,IAAIE,EAAX,EAAeC,IAAf,CAAoB,iBAApB;AACAF,QAAOD,IAAIK,IAAX,EAAiBF,IAAjB,CAAsB,WAAtB;AACAF,QAAOD,IAAIM,OAAX,EAAoBH,IAApB,CAAyB,OAAzB;AACAF,QAAOD,IAAIO,GAAX,EAAgBJ,IAAhB,CAAqB,MAArB;AACAF,QAAOD,IAAIQ,MAAX,EAAmBL,IAAnB,CAAwB,KAAxB;AACA,CARD;;AAUAJ,GAAG,aAAH,EAAkB,YAAM;AACvB,KAAIC,MAAM,sBAAY,WAAZ,EAAyB,OAAzB,EAAkC,MAAlC,CAAV;;AAEAA,OAAMA,IAAIS,KAAJ,CAAU,EAACF,KAAK,UAAN,EAAV,CAAN;;AAEAN,QAAOD,IAAIE,EAAX,EAAeC,IAAf,CAAoB,iBAApB;AACAF,QAAOD,IAAIK,IAAX,EAAiBF,IAAjB,CAAsB,WAAtB;AACAF,QAAOD,IAAIM,OAAX,EAAoBH,IAApB,CAAyB,OAAzB;AACAF,QAAOD,IAAIO,GAAX,EAAgBJ,IAAhB,CAAqB,UAArB;AACAF,QAAOD,IAAIQ,MAAX,EAAmBL,IAAnB,CAAwB,KAAxB;AACA,CAVD;;AAYAJ,GAAG,cAAH,EAAmB,YAAM;AACxB,KAAIC,YAAJ;;AAEAA,OAAM,sBAAY,WAAZ,EAAyB,OAAzB,CAAN;;AAEAC,QAAOD,IAAIQ,MAAX,EAAmBL,IAAnB,CAAwB,IAAxB;;AAEAH,OAAM,sBAAY,WAAZ,EAAyB,OAAzB,EAAkC,MAAlC,CAAN;;AAEAC,QAAOD,IAAIQ,MAAX,EAAmBL,IAAnB,CAAwB,KAAxB;AACA,CAVD","file":"pkg-desc.test.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PkgDesc from '../pkg-desc';\n\nit('constructs root package descriptors correctly', () => {\n\tconst pkg = new PkgDesc('a-package', '1.0.0');\n\n\texpect(pkg.id).toBe(PkgDesc.ROOT_ID);\n\texpect(pkg.name).toBe('a-package');\n\texpect(pkg.version).toBe('1.0.0');\n\texpect(pkg.dir).toBe('.');\n\texpect(pkg.isRoot).toBe(true);\n});\n\nit('constructs forced root package descriptors correctly', () => {\n\tconst pkg = new PkgDesc('a-package', '1.0.0', '/tmp', true);\n\n\texpect(pkg.id).toBe(PkgDesc.ROOT_ID);\n\texpect(pkg.name).toBe('a-package');\n\texpect(pkg.version).toBe('1.0.0');\n\texpect(pkg.dir).toBe('/tmp');\n\texpect(pkg.isRoot).toBe(true);\n});\n\nit('constructs non-root package descriptors correctly', () => {\n\tconst pkg = new PkgDesc('a-package', '1.0.0', '/tmp');\n\n\texpect(pkg.id).toBe('a-package@1.0.0');\n\texpect(pkg.name).toBe('a-package');\n\texpect(pkg.version).toBe('1.0.0');\n\texpect(pkg.dir).toBe('/tmp');\n\texpect(pkg.isRoot).toBe(false);\n});\n\nit('clone works', () => {\n\tlet pkg = new PkgDesc('a-package', '1.0.0', '/tmp');\n\n\tpkg = pkg.clone({dir: '/var/log'});\n\n\texpect(pkg.id).toBe('a-package@1.0.0');\n\texpect(pkg.name).toBe('a-package');\n\texpect(pkg.version).toBe('1.0.0');\n\texpect(pkg.dir).toBe('/var/log');\n\texpect(pkg.isRoot).toBe(false);\n});\n\nit('isRoot works', () => {\n\tlet pkg;\n\n\tpkg = new PkgDesc('a-package', '1.0.0');\n\n\texpect(pkg.isRoot).toBe(true);\n\n\tpkg = new PkgDesc('a-package', '1.0.0', '/tmp');\n\n\texpect(pkg.isRoot).toBe(false);\n});\n"]}