'use strict';

var _pkgDesc = require('../pkg-desc');

var _pkgDesc2 = _interopRequireDefault(_pkgDesc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

it('constructs root package descriptors correctly', function () {
	var pkg = new _pkgDesc2.default('a-package', '1.0.0');

	expect(pkg.id).toBe(_pkgDesc2.default.ROOT_ID);
	expect(pkg.name).toBe('a-package');
	expect(pkg.version).toBe('1.0.0');
	expect(pkg.dir).toBe('.');
	expect(pkg.isRoot).toBe(true);
}); /**
     * Â© 2017 Liferay, Inc. <https://liferay.com>
     *
     * SPDX-License-Identifier: LGPL-3.0-or-later
     */

it('constructs forced root package descriptors correctly', function () {
	var pkg = new _pkgDesc2.default('a-package', '1.0.0', '/tmp', true);

	expect(pkg.id).toBe(_pkgDesc2.default.ROOT_ID);
	expect(pkg.name).toBe('a-package');
	expect(pkg.version).toBe('1.0.0');
	expect(pkg.dir).toBe('/tmp');
	expect(pkg.isRoot).toBe(true);
});

it('constructs non-root package descriptors correctly', function () {
	var pkg = new _pkgDesc2.default('a-package', '1.0.0', '/tmp');

	expect(pkg.id).toBe('a-package@1.0.0');
	expect(pkg.name).toBe('a-package');
	expect(pkg.version).toBe('1.0.0');
	expect(pkg.dir).toBe('/tmp');
	expect(pkg.isRoot).toBe(false);
});

it('clone works', function () {
	var pkg = new _pkgDesc2.default('a-package', '1.0.0', '/tmp');

	pkg = pkg.clone({ dir: '/var/log' });

	expect(pkg.id).toBe('a-package@1.0.0');
	expect(pkg.name).toBe('a-package');
	expect(pkg.version).toBe('1.0.0');
	expect(pkg.dir).toBe('/var/log');
	expect(pkg.isRoot).toBe(false);
});

it('isRoot works', function () {
	var pkg = void 0;

	pkg = new _pkgDesc2.default('a-package', '1.0.0');

	expect(pkg.isRoot).toBe(true);

	pkg = new _pkgDesc2.default('a-package', '1.0.0', '/tmp');

	expect(pkg.isRoot).toBe(false);
});
//# sourceMappingURL=pkg-desc.test.js.map