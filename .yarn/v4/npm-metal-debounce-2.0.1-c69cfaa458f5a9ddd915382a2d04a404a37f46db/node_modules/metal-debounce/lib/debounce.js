'use strict';

// This dependency is used to polyfill Array.from method that is used in
// _toConsumableArray() function in babel glue to this rest-spread utilization

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounce = exports.cancelDebounce = undefined;

var _array = require('core-js/es6/array');

var _array2 = _interopRequireDefault(_array);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

//eslint-disable-line

/**
 * Debounces function execution.
 * @param {!function()} fn
 * @param {number} delay
 * @return {!function()}
 */
function debounce(fn, delay) {
  return function debounced() {
    var args = arguments;
    cancelDebounce(debounced);
    debounced.id = setTimeout(function () {
      fn.apply(undefined, _toConsumableArray((null, args)));
    }, delay);
  };
}

/**
 * Cancels the scheduled debounced function.
 * @param {function()} debounced
 */
function cancelDebounce(debounced) {
  clearTimeout(debounced.id);
}

exports.default = debounce;
exports.cancelDebounce = cancelDebounce;
exports.debounce = debounce;