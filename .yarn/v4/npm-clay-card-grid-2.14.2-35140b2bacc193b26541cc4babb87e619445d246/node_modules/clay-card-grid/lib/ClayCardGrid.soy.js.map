{"version":3,"sources":["../src/ClayCardGrid.soy.js"],"names":["templates","goog","loadModule","exports","soy","require","soydata","module","incrementalDom","soyIdom","$templateAlias1","Soy","getTemplate","$templateAlias2","$templateAlias3","$templateAlias4","$render","opt_data","opt_ijData","opt_ijData_deprecated","schema","asserts","assertType","isObject","_handleItemToggled","elementClasses","isString","data","SanitizedContent","id","items","isArray","selectable","isBoolean","spritemap","attributes__soy11","attr","elementOpenStart","elementOpenEnd","$items","elementClose","render","Params","DEBUG","soyTemplateName","$item","item","variant__soy47","$tmp$$1","contentRenderer","fieldsMap","$tmp","contentRendererMap","$$getDelegateFn","$$getDelTemplateId","item109List","item109ListLen","length","item109Index","item109Data","print","label","__deltemplate_s112_7eb9136e","$$registerDelegateFn","__deltemplate_s119_3c896c97","$$temp","icon__soy126","iconsMap","icon","$tmp$$2","inputName","inputNameField","inputNamesMap","actionItems","disabled","events","itemToggled","href","inputValue","inputValueField","labels","labelStylesMap","selected","stickerClasses","stickerClassesMap","stickerIcons","stickerIconsMap","stickerIcon","stickerImageAlt","stickerImageAltsMap","stickerLabel","stickerImageSrc","stickerImageSrcsMap","stickerShape","stickerShapesMap","stickerStyle","stickerStylesMap","subtitle","description","title","__deltemplate_s189_953e9510","icon__soy196","__deltemplate_s249_79889b69","icon__soy256","imageAlt","imageSrc","__deltemplate_s321_908d86c7","name","username","userColorClass","userColorsMap","userColor","params","types","ClayCardGrid","Component","register"],"mappings":"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","file":"ClayCardGrid.soy.js","sourcesContent":["/* jshint ignore:start */\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\n\nvar templates;\ngoog.loadModule(function(exports) {\nvar soy = goog.require('soy');\nvar soydata = goog.require('soydata');\n// This file was automatically generated from ClayCardGrid.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace ClayCardGrid.\n * @hassoydeltemplate {ClayCardGrid.Card.idom}\n * @hassoydelcall {ClayCardGrid.Card.idom}\n * @public\n */\n\ngoog.module('ClayCardGrid.incrementaldom');\n\ngoog.require('goog.soy.data.SanitizedContent');\nvar incrementalDom = goog.require('incrementaldom');\ngoog.require('soy');\ngoog.require('soy.asserts');\nvar soyIdom = goog.require('soy.idom');\n\nvar $templateAlias1 = Soy.getTemplate('ClayFileCard.incrementaldom', 'render');\n\nvar $templateAlias2 = Soy.getTemplate('ClayHorizontalCard.incrementaldom', 'render');\n\nvar $templateAlias3 = Soy.getTemplate('ClayImageCard.incrementaldom', 'render');\n\nvar $templateAlias4 = Soy.getTemplate('ClayUserCard.incrementaldom', 'render');\n\n\n/**\n * @param {{\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  _handleItemToggled: (*|null|undefined),\n *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),\n *  id: (!goog.soy.data.SanitizedContent|null|string|undefined),\n *  items: (!Array<?>|null|undefined),\n *  selectable: (boolean|null|undefined),\n *  spritemap: (!goog.soy.data.SanitizedContent|null|string|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $render(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */\n  var elementClasses = soy.asserts.assertType(opt_data.elementClasses == null || (goog.isString(opt_data.elementClasses) || opt_data.elementClasses instanceof goog.soy.data.SanitizedContent), 'elementClasses', opt_data.elementClasses, '!goog.soy.data.SanitizedContent|null|string|undefined');\n  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */\n  var id = soy.asserts.assertType(opt_data.id == null || (goog.isString(opt_data.id) || opt_data.id instanceof goog.soy.data.SanitizedContent), 'id', opt_data.id, '!goog.soy.data.SanitizedContent|null|string|undefined');\n  /** @type {!Array<?>|null|undefined} */\n  var items = soy.asserts.assertType(opt_data.items == null || goog.isArray(opt_data.items), 'items', opt_data.items, '!Array<?>|null|undefined');\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */\n  var spritemap = soy.asserts.assertType(opt_data.spritemap == null || (goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent), 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|null|string|undefined');\n  var attributes__soy11 = function() {\n    incrementalDom.attr('class', 'card-page' + (elementClasses ? ' ' + elementClasses : ''));\n    if (id) {\n      incrementalDom.attr('id', id);\n    }\n  };\n  incrementalDom.elementOpenStart('ul');\n      attributes__soy11();\n  incrementalDom.elementOpenEnd();\n    if (items && spritemap) {\n      $items(opt_data, null, opt_ijData);\n    }\n  incrementalDom.elementClose('ul');\n}\nexports.render = $render;\n/**\n * @typedef {{\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  _handleItemToggled: (*|null|undefined),\n *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),\n *  id: (!goog.soy.data.SanitizedContent|null|string|undefined),\n *  items: (!Array<?>|null|undefined),\n *  selectable: (boolean|null|undefined),\n *  spritemap: (!goog.soy.data.SanitizedContent|null|string|undefined)\n * }}\n */\n$render.Params;\nif (goog.DEBUG) {\n  $render.soyTemplateName = 'ClayCardGrid.render';\n}\n\n\n/**\n * @param {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $item(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {?} */\n  var item = opt_data.item;\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n  incrementalDom.elementOpenStart('li');\n      incrementalDom.attr('class', 'card-page-item card-page-item-directory');\n  incrementalDom.elementOpenEnd();\n    var variant__soy47 = '';\n    var $tmp$$1 = null;\nif (schema.contentRenderer) {\n  $tmp$$1 = schema.contentRenderer;\n} else if (schema && schema.fieldsMap && schema.fieldsMap.contentRenderer) {\n  var $tmp = null;\n  if (schema.contentRendererMap && item[schema.fieldsMap.contentRenderer] && schema.contentRendererMap[item[schema.fieldsMap.contentRenderer]]) {\n    $tmp = schema.contentRendererMap[item[schema.fieldsMap.contentRenderer]];\n  } else if (schema.contentRendererMap['*']) {\n    $tmp = schema.contentRendererMap['*'];\n  } else {\n    $tmp = 'image';\n  }\n  $tmp$$1 = $tmp;\n} else {\n  $tmp$$1 = 'image';\n}\nvariant__soy47 += $tmp$$1;\n    soy.$$getDelegateFn(soy.$$getDelTemplateId('ClayCardGrid.Card.idom'), variant__soy47, false)(opt_data, null, opt_ijData);\n  incrementalDom.elementClose('li');\n}\nexports.item = $item;\n/**\n * @typedef {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }}\n */\n$item.Params;\nif (goog.DEBUG) {\n  $item.soyTemplateName = 'ClayCardGrid.item';\n}\n\n\n/**\n * @param {{\n *  items: !Array<?>,\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $items(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {!Array<?>} */\n  var items = soy.asserts.assertType(goog.isArray(opt_data.items), 'items', opt_data.items, '!Array<?>');\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n  var item109List = items;\n  var item109ListLen = item109List.length;\n  for (var item109Index = 0; item109Index < item109ListLen; item109Index++) {\n      var item109Data = item109List[item109Index];\n      if (item109Data.items) {\n        incrementalDom.elementOpenStart('li');\n            incrementalDom.attr('class', 'card-page-item card-page-item-header');\n        incrementalDom.elementOpenEnd();\n          incrementalDom.elementOpenStart('p');\n              incrementalDom.attr('class', 'card-section-header');\n          incrementalDom.elementOpenEnd();\n            soyIdom.print(item109Data.label);\n          incrementalDom.elementClose('p');\n        incrementalDom.elementClose('li');\n        $items({_handleItemToggled: _handleItemToggled, items: item109Data.items, schema: schema, selectable: selectable, spritemap: spritemap}, null, opt_ijData);\n      } else {\n        $item({_handleItemToggled: _handleItemToggled, item: item109Data, schema: schema, selectable: selectable, spritemap: spritemap}, null, opt_ijData);\n      }\n    }\n}\nexports.items = $items;\n/**\n * @typedef {{\n *  items: !Array<?>,\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }}\n */\n$items.Params;\nif (goog.DEBUG) {\n  $items.soyTemplateName = 'ClayCardGrid.items';\n}\n\n\n/**\n * @param {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction __deltemplate_s112_7eb9136e(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {?} */\n  var item = opt_data.item;\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n}\nexports.__deltemplate_s112_7eb9136e = __deltemplate_s112_7eb9136e;\n/**\n * @typedef {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }}\n */\n__deltemplate_s112_7eb9136e.Params;\nif (goog.DEBUG) {\n  __deltemplate_s112_7eb9136e.soyTemplateName = 'ClayCardGrid.__deltemplate_s112_7eb9136e';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ClayCardGrid.Card.idom'), '', 0, __deltemplate_s112_7eb9136e);\n\n\n/**\n * @param {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction __deltemplate_s119_3c896c97(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  var $$temp;\n  /** @type {?} */\n  var item = opt_data.item;\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n  var icon__soy126 = '';\n  var $tmp = null;\nif (schema.iconsMap) {\n  $tmp = schema.fieldsMap && schema.fieldsMap.icon && item[schema.fieldsMap.icon] ? schema.iconsMap[item[schema.fieldsMap.icon]] : schema.iconsMap['*'];\n} else if (schema.fieldsMap && schema.fieldsMap.icon) {\n  $tmp = item[schema.fieldsMap.icon];\n} else {\n  $tmp = '';\n}\nicon__soy126 += $tmp;\n  var $tmp$$2 = null;\n  if (schema.inputName) {\n    $tmp$$2 = schema.inputName;\n  } else if (schema.inputNameField && schema.inputNamesMap) {\n    var $tmp$$1 = null;\n    if (schema.inputNamesMap[item[schema.inputNameField]]) {\n      $tmp$$1 = schema.inputNamesMap[item[schema.inputNameField]];\n    } else if (schema.inputNamesMap['*']) {\n      $tmp$$1 = schema.inputNamesMap['*'];\n    } else {\n      $tmp$$1 = '';\n    }\n    $tmp$$2 = $tmp$$1;\n  } else {\n    $tmp$$2 = '';\n  }\n  $templateAlias1({actionItems: item.actionItems, disabled: item.disabled, events: {itemToggled: _handleItemToggled}, href: item[schema.fieldsMap.href], icon: icon__soy126 != '' ? icon__soy126 : null, inputName: '' + $tmp$$2, inputValue: item[schema.inputValueField], labels: item[schema.fieldsMap.labels], labelStylesMap: schema.labelStylesMap, selectable: selectable, selected: item.selected, spritemap: spritemap, stickerClasses: schema.stickerClassesMap ? (($$temp = schema.stickerClassesMap[item[schema.fieldsMap.stickerClasses]]) == null ? schema.stickerClassesMap['*'] : $$temp) : null, stickerIcons: schema.stickerIconsMap ? (($$temp = schema.stickerIconsMap[item[schema.fieldsMap.stickerIcon]]) == null ? schema.stickerIconsMap['*'] : $$temp) : null, stickerImageAlt: schema.stickerImageAltsMap ? (($$temp = schema.stickerImageAltsMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerImageAltsMap['*'] : $$temp) : null, stickerImageSrc: schema.stickerImageSrcsMap ? (($$temp = schema.stickerImageSrcsMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerImageSrcsMap['*'] : $$temp) : null, stickerLabel: item[schema.fieldsMap.stickerLabel], stickerShape: schema.stickerShapesMap ? (($$temp = schema.stickerShapesMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerShapesMap['*'] : $$temp) : null, stickerStyle: schema.stickerStylesMap ? (($$temp = schema.stickerStylesMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerStylesMap['*'] : $$temp) : null, subtitle: item[schema.fieldsMap.description], title: item[schema.fieldsMap.title]}, null, opt_ijData);\n}\nexports.__deltemplate_s119_3c896c97 = __deltemplate_s119_3c896c97;\n/**\n * @typedef {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }}\n */\n__deltemplate_s119_3c896c97.Params;\nif (goog.DEBUG) {\n  __deltemplate_s119_3c896c97.soyTemplateName = 'ClayCardGrid.__deltemplate_s119_3c896c97';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ClayCardGrid.Card.idom'), 'file', 0, __deltemplate_s119_3c896c97);\n\n\n/**\n * @param {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction __deltemplate_s189_953e9510(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {?} */\n  var item = opt_data.item;\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n  var icon__soy196 = '';\n  var $tmp = null;\nif (schema.iconsMap) {\n  $tmp = schema.fieldsMap && schema.fieldsMap.icon && item[schema.fieldsMap.icon] ? schema.iconsMap[item[schema.fieldsMap.icon]] : schema.iconsMap['*'];\n} else if (schema.fieldsMap && schema.fieldsMap.icon) {\n  $tmp = item[schema.fieldsMap.icon];\n} else {\n  $tmp = '';\n}\nicon__soy196 += $tmp;\n  var $tmp$$2 = null;\n  if (schema.inputName) {\n    $tmp$$2 = schema.inputName;\n  } else if (schema.inputNameField && schema.inputNamesMap) {\n    var $tmp$$1 = null;\n    if (schema.inputNamesMap[item[schema.inputNameField]]) {\n      $tmp$$1 = schema.inputNamesMap[item[schema.inputNameField]];\n    } else if (schema.inputNamesMap['*']) {\n      $tmp$$1 = schema.inputNamesMap['*'];\n    } else {\n      $tmp$$1 = '';\n    }\n    $tmp$$2 = $tmp$$1;\n  } else {\n    $tmp$$2 = '';\n  }\n  $templateAlias2({actionItems: item.actionItems, disabled: item.disabled, events: {itemToggled: _handleItemToggled}, href: item[schema.fieldsMap.href], icon: icon__soy196 != '' ? icon__soy196 : null, inputName: '' + $tmp$$2, inputValue: item[schema.inputValueField], selectable: selectable, selected: item.selected, spritemap: spritemap, title: item[schema.fieldsMap.title]}, null, opt_ijData);\n}\nexports.__deltemplate_s189_953e9510 = __deltemplate_s189_953e9510;\n/**\n * @typedef {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }}\n */\n__deltemplate_s189_953e9510.Params;\nif (goog.DEBUG) {\n  __deltemplate_s189_953e9510.soyTemplateName = 'ClayCardGrid.__deltemplate_s189_953e9510';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ClayCardGrid.Card.idom'), 'horizontal', 0, __deltemplate_s189_953e9510);\n\n\n/**\n * @param {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction __deltemplate_s249_79889b69(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  var $$temp;\n  /** @type {?} */\n  var item = opt_data.item;\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n  var icon__soy256 = '';\n  var $tmp = null;\nif (schema.iconsMap) {\n  $tmp = schema.fieldsMap && schema.fieldsMap.icon && item[schema.fieldsMap.icon] ? schema.iconsMap[item[schema.fieldsMap.icon]] : schema.iconsMap['*'];\n} else if (schema.fieldsMap && schema.fieldsMap.icon) {\n  $tmp = item[schema.fieldsMap.icon];\n} else {\n  $tmp = '';\n}\nicon__soy256 += $tmp;\n  var $tmp$$2 = null;\n  if (schema.inputName) {\n    $tmp$$2 = schema.inputName;\n  } else if (schema.inputNameField && schema.inputNamesMap) {\n    var $tmp$$1 = null;\n    if (schema.inputNamesMap[item[schema.inputNameField]]) {\n      $tmp$$1 = schema.inputNamesMap[item[schema.inputNameField]];\n    } else if (schema.inputNamesMap['*']) {\n      $tmp$$1 = schema.inputNamesMap['*'];\n    } else {\n      $tmp$$1 = '';\n    }\n    $tmp$$2 = $tmp$$1;\n  } else {\n    $tmp$$2 = '';\n  }\n  $templateAlias3({actionItems: item.actionItems, disabled: item.disabled, events: {itemToggled: _handleItemToggled}, href: item[schema.fieldsMap.href], icon: icon__soy256 != '' ? icon__soy256 : null, imageAlt: item[schema.fieldsMap.imageAlt], imageSrc: item[schema.fieldsMap.imageSrc], inputName: '' + $tmp$$2, inputValue: item[schema.inputValueField], labels: item[schema.fieldsMap.labels], labelStylesMap: schema.labelStylesMap, selectable: selectable, selected: item.selected, spritemap: spritemap, stickerClasses: schema.stickerClassesMap ? (($$temp = schema.stickerClassesMap[item[schema.fieldsMap.stickerClasses]]) == null ? schema.stickerClassesMap['*'] : $$temp) : null, stickerIcons: schema.stickerIconsMap ? (($$temp = schema.stickerIconsMap[item[schema.fieldsMap.stickerIcon]]) == null ? schema.stickerIconsMap['*'] : $$temp) : null, stickerImageAlt: schema.stickerImageAltsMap ? (($$temp = schema.stickerImageAltsMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerImageAltsMap['*'] : $$temp) : null, stickerImageSrc: schema.stickerImageSrcsMap ? (($$temp = schema.stickerImageSrcsMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerImageSrcsMap['*'] : $$temp) : null, stickerLabel: item[schema.fieldsMap.stickerLabel], stickerShape: schema.stickerShapesMap ? (($$temp = schema.stickerShapesMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerShapesMap['*'] : $$temp) : null, stickerStyle: schema.stickerStylesMap ? (($$temp = schema.stickerStylesMap[item[schema.fieldsMap.stickerLabel]]) == null ? schema.stickerStylesMap['*'] : $$temp) : null, subtitle: item[schema.fieldsMap.description], title: item[schema.fieldsMap.title]}, null, opt_ijData);\n}\nexports.__deltemplate_s249_79889b69 = __deltemplate_s249_79889b69;\n/**\n * @typedef {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }}\n */\n__deltemplate_s249_79889b69.Params;\nif (goog.DEBUG) {\n  __deltemplate_s249_79889b69.soyTemplateName = 'ClayCardGrid.__deltemplate_s249_79889b69';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ClayCardGrid.Card.idom'), 'image', 0, __deltemplate_s249_79889b69);\n\n\n/**\n * @param {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction __deltemplate_s321_908d86c7(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  var $$temp;\n  /** @type {?} */\n  var item = opt_data.item;\n  /** @type {{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}} */\n  var schema = soy.asserts.assertType(goog.isObject(opt_data.schema), 'schema', opt_data.schema, '{contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)}');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {*|null|undefined} */\n  var _handleItemToggled = opt_data._handleItemToggled;\n  /** @type {boolean|null|undefined} */\n  var selectable = soy.asserts.assertType(opt_data.selectable == null || (goog.isBoolean(opt_data.selectable) || opt_data.selectable === 1 || opt_data.selectable === 0), 'selectable', opt_data.selectable, 'boolean|null|undefined');\n  var $tmp$$1 = null;\n  if (schema.inputName) {\n    $tmp$$1 = schema.inputName;\n  } else if (schema.inputNameField && schema.inputNamesMap) {\n    var $tmp = null;\n    if (schema.inputNamesMap[item[schema.inputNameField]]) {\n      $tmp = schema.inputNamesMap[item[schema.inputNameField]];\n    } else if (schema.inputNamesMap['*']) {\n      $tmp = schema.inputNamesMap['*'];\n    } else {\n      $tmp = '';\n    }\n    $tmp$$1 = $tmp;\n  } else {\n    $tmp$$1 = '';\n  }\n  $templateAlias4({actionItems: item.actionItems, disabled: item.disabled, events: {itemToggled: _handleItemToggled}, href: item[schema.fieldsMap.href], imageAlt: item[schema.fieldsMap.imageAlt], imageSrc: item[schema.fieldsMap.imageSrc], inputName: '' + $tmp$$1, inputValue: item[schema.inputValueField], name: item[schema.fieldsMap.username], selectable: selectable, selected: item.selected, spritemap: spritemap, subtitle: item[schema.fieldsMap.description], userColorClass: schema.userColorsMap ? (($$temp = schema.userColorsMap[item[schema.fieldsMap.userColor]]) == null ? schema.userColorsMap['*'] : $$temp) : item[schema.fieldsMap.userColor]}, null, opt_ijData);\n}\nexports.__deltemplate_s321_908d86c7 = __deltemplate_s321_908d86c7;\n/**\n * @typedef {{\n *  item: (?),\n *  schema: {contentRenderer: (!goog.soy.data.SanitizedContent|string), contentRendererMap: (?), fieldName: (!goog.soy.data.SanitizedContent|string), fieldsMap: (?), iconsMap: (?), inputName: (!goog.soy.data.SanitizedContent|string), inputNameField: (!goog.soy.data.SanitizedContent|string), inputNamesMap: (?), inputValueField: (!goog.soy.data.SanitizedContent|string), labelStylesMap: (?), stickerClassesMap: (?), stickerIconsMap: (?), stickerImageAltsMap: (?), stickerImageSrcsMap: (?), stickerShapesMap: (?), stickerStylesMap: (?), userColorsMap: (?)},\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  _handleItemToggled: (*|null|undefined),\n *  selectable: (boolean|null|undefined)\n * }}\n */\n__deltemplate_s321_908d86c7.Params;\nif (goog.DEBUG) {\n  __deltemplate_s321_908d86c7.soyTemplateName = 'ClayCardGrid.__deltemplate_s321_908d86c7';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ClayCardGrid.Card.idom'), 'user', 0, __deltemplate_s321_908d86c7);\n\nexports.render.params = [\"schema\",\"_handleItemToggled\",\"elementClasses\",\"id\",\"items\",\"selectable\",\"spritemap\"];\nexports.render.types = {\"schema\":\"[\\n\\t\\tcontentRenderer: string,\\n\\t\\tcontentRendererMap: ?,\\n\\t\\tfieldName: string,\\n\\t\\tfieldsMap: ?,\\n\\t\\ticonsMap: ?,\\n\\t\\tinputName: string,\\n\\t\\tinputNameField: string,\\n\\t\\tinputNamesMap: ?,\\n\\t\\tinputValueField: string,\\n\\t\\tlabelStylesMap: ?,\\n\\t\\tstickerClassesMap: ?,\\n\\t\\tstickerIconsMap: ?,\\n\\t\\tstickerImageAltsMap: ?,\\n\\t\\tstickerImageSrcsMap: ?,\\n\\t\\tstickerShapesMap: ?,\\n\\t\\tstickerStylesMap: ?,\\n\\t\\tuserColorsMap: ?\\n\\t]\",\"_handleItemToggled\":\"any\",\"elementClasses\":\"string\",\"id\":\"string\",\"items\":\"list<?>\",\"selectable\":\"bool\",\"spritemap\":\"string\"};\nexports.item.params = [\"item\",\"schema\",\"spritemap\",\"_handleItemToggled\",\"selectable\"];\nexports.item.types = {\"item\":\"?\",\"schema\":\"[\\n\\t\\tcontentRenderer: string,\\n\\t\\tcontentRendererMap: ?,\\n\\t\\tfieldName: string,\\n\\t\\tfieldsMap: ?,\\n\\t\\ticonsMap: ?,\\n\\t\\tinputName: string,\\n\\t\\tinputNameField: string,\\n\\t\\tinputNamesMap: ?,\\n\\t\\tinputValueField: string,\\n\\t\\tlabelStylesMap: ?,\\n\\t\\tstickerClassesMap: ?,\\n\\t\\tstickerIconsMap: ?,\\n\\t\\tstickerImageAltsMap: ?,\\n\\t\\tstickerImageSrcsMap: ?,\\n\\t\\tstickerShapesMap: ?,\\n\\t\\tstickerStylesMap: ?,\\n\\t\\tuserColorsMap: ?\\n\\t]\",\"spritemap\":\"string\",\"_handleItemToggled\":\"any\",\"selectable\":\"bool\"};\nexports.items.params = [\"items\",\"schema\",\"spritemap\",\"_handleItemToggled\",\"selectable\"];\nexports.items.types = {\"items\":\"list<?>\",\"schema\":\"[\\n\\t\\tcontentRenderer: string,\\n\\t\\tcontentRendererMap: ?,\\n\\t\\tfieldName: string,\\n\\t\\tfieldsMap: ?,\\n\\t\\ticonsMap: ?,\\n\\t\\tinputName: string,\\n\\t\\tinputNameField: string,\\n\\t\\tinputNamesMap: ?,\\n\\t\\tinputValueField: string,\\n\\t\\tlabelStylesMap: ?,\\n\\t\\tstickerClassesMap: ?,\\n\\t\\tstickerIconsMap: ?,\\n\\t\\tstickerImageAltsMap: ?,\\n\\t\\tstickerImageSrcsMap: ?,\\n\\t\\tstickerShapesMap: ?,\\n\\t\\tstickerStylesMap: ?,\\n\\t\\tuserColorsMap: ?\\n\\t]\",\"spritemap\":\"string\",\"_handleItemToggled\":\"any\",\"selectable\":\"bool\"};\ntemplates = exports;\nreturn exports;\n\n});\n\nclass ClayCardGrid extends Component {}\nSoy.register(ClayCardGrid, templates);\nexport { ClayCardGrid, templates };\nexport default templates;\n/* jshint ignore:end */\n"]}