{"version":3,"sources":["../src/ClayCardGrid.js"],"names":["ClayCardGrid","event","emit","ClayComponent","STATE","data","Config","object","defaultEventHandler","elementClasses","string","id","items","array","schema","shapeOf","contentRenderer","contentRendererMap","fieldName","fieldsMap","iconsMap","inputNameField","inputNamesMap","inputValueField","labelStylesMap","stickerClassesMap","stickerIconsMap","stickerImageAltsMap","stickerImageSrcsMap","stickerShapesMap","stickerStylesMap","userColorsMap","required","selectable","bool","value","spritemap","title","Soy","register","templates"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;AAQA;;AAEA;;;;;;;;;;;AAXA;;AAQA;;;AAKA;;;;IAIMA,Y;;;;;;;;;;;;AACL;;;;;qCAKmBC,K,EAAO;AACzB,QAAKC,IAAL,CAAU,aAAV,EAAyBD,KAAzB;AACA;;;;EARyBE,uB;;AAW3B;;;;;;;AAKAH,aAAaI,KAAb,GAAqB;AACpB;;;;;;;AAOAC,OAAMC,mBAAOC,MAAP,EARc;;AAUpB;;;;;;;;AAQAC,sBAAqBF,mBAAOC,MAAP,EAlBD;;AAoBpB;;;;;;;AAOAE,iBAAgBH,mBAAOI,MAAP,EA3BI;;AA6BpB;;;;;;;AAOAC,KAAIL,mBAAOI,MAAP,EApCgB;;AAsCpB;;;;;;;AAOAE,QAAON,mBAAOO,KAAP,EA7Ca;;AA+CpB;;;;;;;AAOAC,SAAQR,mBAAOS,OAAP,CAAe;AACtBC,mBAAiBV,mBAAOI,MAAP,EADK;AAEtBO,sBAAoBX,mBAAOC,MAAP,EAFE;AAGtBW,aAAWZ,mBAAOI,MAAP,EAHW;AAItBS,aAAWb,mBAAOC,MAAP,EAJW;AAKtBa,YAAUd,mBAAOC,MAAP,EALY;AAMtBc,kBAAgBf,mBAAOI,MAAP,EANM;AAOtBY,iBAAehB,mBAAOC,MAAP,EAPO;AAQtBgB,mBAAiBjB,mBAAOI,MAAP,EARK;AAStBc,kBAAgBlB,mBAAOC,MAAP,EATM;AAUtBkB,qBAAmBnB,mBAAOC,MAAP,EAVG;AAWtBmB,mBAAiBpB,mBAAOC,MAAP,EAXK;AAYtBoB,uBAAqBrB,mBAAOC,MAAP,EAZC;AAatBqB,uBAAqBtB,mBAAOC,MAAP,EAbC;AActBsB,oBAAkBvB,mBAAOC,MAAP,EAdI;AAetBuB,oBAAkBxB,mBAAOC,MAAP,EAfI;AAgBtBwB,iBAAezB,mBAAOC,MAAP;AAhBO,EAAf,EAiBLyB,QAjBK,EAtDY;;AAyEpB;;;;;;;AAOAC,aAAY3B,mBAAO4B,IAAP,GAAcC,KAAd,CAAoB,KAApB,CAhFQ;;AAkFpB;;;;;;;AAOAC,YAAW9B,mBAAOI,MAAP,EAzFS;;AA2FpB;;;;;;;AAOA2B,QAAO/B,mBAAOI,MAAP;AAlGa,CAArB;;AAqGA,iCAAmB,gBAAnB,EAAqCV,YAArC;;AAEAsC,mBAAIC,QAAJ,CAAavC,YAAb,EAA2BwC,yBAA3B;;QAEQxC,Y,GAAAA,Y;kBACOA,Y","file":"ClayCardGrid.js","sourcesContent":["import ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\n/* eslint-disable */\nimport {\n\tClayCardBase,\n\tClayFileCard,\n\tClayHorizontalCard,\n\tClayImageCard,\n\tClayUserCard,\n} from 'clay-card';\n/* eslint-enable */\nimport {Config} from 'metal-state';\n\nimport templates from './ClayCardGrid.soy.js';\n\n/**\n * Metal ClayCardGrid component.\n * @extends ClayComponent\n */\nclass ClayCardGrid extends ClayComponent {\n\t/**\n\t * Continues the propagation of the checkbox changed event\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleItemToggled(event) {\n\t\tthis.emit('itemToggled', event);\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayCardGrid.STATE = {\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * List of items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {?(array|undefined)}\n\t */\n\titems: Config.array(),\n\n\t/**\n\t * Schema mapping list item fields with item data properties.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {!object}\n\t */\n\tschema: Config.shapeOf({\n\t\tcontentRenderer: Config.string(),\n\t\tcontentRendererMap: Config.object(),\n\t\tfieldName: Config.string(),\n\t\tfieldsMap: Config.object(),\n\t\ticonsMap: Config.object(),\n\t\tinputNameField: Config.string(),\n\t\tinputNamesMap: Config.object(),\n\t\tinputValueField: Config.string(),\n\t\tlabelStylesMap: Config.object(),\n\t\tstickerClassesMap: Config.object(),\n\t\tstickerIconsMap: Config.object(),\n\t\tstickerImageAltsMap: Config.object(),\n\t\tstickerImageSrcsMap: Config.object(),\n\t\tstickerShapesMap: Config.object(),\n\t\tstickerStylesMap: Config.object(),\n\t\tuserColorsMap: Config.object(),\n\t}).required(),\n\n\t/**\n\t * Flag to indicate if the list group items are selectable.\n\t * @default false\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {?bool}\n\t */\n\tselectable: Config.bool().value(false),\n\n\t/**\n\t * The path to the SVG spritemap file containing the icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {?(string|undefined)}\n\t */\n\tspritemap: Config.string(),\n\n\t/**\n\t * Header of the list group.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCardGrid\n\t * @type {?(string|undefined)}\n\t */\n\ttitle: Config.string(),\n};\n\ndefineWebComponent('clay-card-grid', ClayCardGrid);\n\nSoy.register(ClayCardGrid, templates);\n\nexport {ClayCardGrid};\nexport default ClayCardGrid;\n"]}