{"version":3,"sources":["../../src/__tests__/index.test.js"],"names":["fixturesDir","join","__dirname","it","pkgJson","pkg","name","version","log","rootPkgJson","expect","toMatchSnapshot","dir","messages"],"mappings":";;AAMA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,eAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAApB,C,CAZA;;;;;;AAcAC,GAAG,oDAAH,EAAyD,YAAM;AAC9D,KAAMC,UAAU,4BAAgBJ,WAAhB,2BAAhB;AACA,KAAMK,MAAM,sBAAYD,QAAQE,IAApB,EAA0BF,QAAQG,OAAlC,EAA2CP,WAA3C,EAAwD,IAAxD,CAAZ;AACA,KAAMQ,MAAM,4BAAZ;;AAEA,sBAAO,EAACH,QAAD,EAAMG,QAAN,EAAWC,aAAaL,OAAxB,EAAP,EAAyC,EAACA,gBAAD,EAAzC;;AAEAM,QAAON,OAAP,EAAgBO,eAAhB;AACA,CARD;;AAUAR,GAAG,oDAAH,EAAyD,YAAM;AAC9D,KAAMM,cAAc,4BAAgBT,WAAhB,2BAApB;AACA,KAAMY,MAASZ,WAAT,oCAAN;AACA,KAAMI,UAAU,4BAAgBQ,GAAhB,mBAAhB;AACA,KAAMP,MAAM,sBAAYD,QAAQE,IAApB,EAA0BF,QAAQG,OAAlC,EAA2CK,GAA3C,CAAZ;AACA,KAAMJ,MAAM,4BAAZ;;AAEA,sBAAO,EAACH,QAAD,EAAMG,QAAN,EAAWC,wBAAX,EAAP,EAAgC,EAACL,gBAAD,EAAhC;;AAEAM,QAAON,OAAP,EAAgBO,eAAhB;AACA,CAVD;;AAYAR,GAAG,wBAAH,EAA6B,YAAM;AAClC,KAAMM,cAAc,4BAAgBT,WAAhB,2BAApB;AACA,KAAMY,MAASZ,WAAT,oCAAN;AACA,KAAMI,UAAU,4BAAgBQ,GAAhB,mBAAhB;AACA,KAAMP,MAAM,sBAAYD,QAAQE,IAApB,EAA0BF,QAAQG,OAAlC,EAA2CK,GAA3C,CAAZ;AACA,KAAMJ,MAAM,4BAAZ;;AAEA,sBAAO,EAACH,QAAD,EAAMG,QAAN,EAAWC,wBAAX,EAAP,EAAgC,EAACL,gBAAD,EAAhC;;AAEAM,QAAOF,IAAIK,QAAX,EAAqBF,eAArB;AACA,CAVD","file":"index.test.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PkgDesc from 'liferay-npm-build-tools-common/lib/pkg-desc';\nimport PluginLogger from 'liferay-npm-build-tools-common/lib/plugin-logger';\nimport path from 'path';\nimport readJsonSync from 'read-json-sync';\nimport plugin from '../index';\n\nconst fixturesDir = path.join(__dirname, '__fixtures__');\n\nit('namespaces packages correctly for the root package', () => {\n\tconst pkgJson = readJsonSync(`${fixturesDir}/project/package.json`);\n\tconst pkg = new PkgDesc(pkgJson.name, pkgJson.version, fixturesDir, true);\n\tconst log = new PluginLogger();\n\n\tplugin({pkg, log, rootPkgJson: pkgJson}, {pkgJson});\n\n\texpect(pkgJson).toMatchSnapshot();\n});\n\nit('namespaces packages correctly for non-root package', () => {\n\tconst rootPkgJson = readJsonSync(`${fixturesDir}/project/package.json`);\n\tconst dir = `${fixturesDir}/project/node_modules/is-finite`;\n\tconst pkgJson = readJsonSync(`${dir}/package.json`);\n\tconst pkg = new PkgDesc(pkgJson.name, pkgJson.version, dir);\n\tconst log = new PluginLogger();\n\n\tplugin({pkg, log, rootPkgJson}, {pkgJson});\n\n\texpect(pkgJson).toMatchSnapshot();\n});\n\nit('logs results correctly', () => {\n\tconst rootPkgJson = readJsonSync(`${fixturesDir}/project/package.json`);\n\tconst dir = `${fixturesDir}/project/node_modules/is-finite`;\n\tconst pkgJson = readJsonSync(`${dir}/package.json`);\n\tconst pkg = new PkgDesc(pkgJson.name, pkgJson.version, dir);\n\tconst log = new PluginLogger();\n\n\tplugin({pkg, log, rootPkgJson}, {pkgJson});\n\n\texpect(log.messages).toMatchSnapshot();\n});\n"]}