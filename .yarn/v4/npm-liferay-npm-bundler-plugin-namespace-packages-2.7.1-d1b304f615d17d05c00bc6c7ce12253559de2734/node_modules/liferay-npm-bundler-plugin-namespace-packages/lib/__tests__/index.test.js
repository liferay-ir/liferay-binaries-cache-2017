'use strict';

var _pkgDesc = require('liferay-npm-build-tools-common/lib/pkg-desc');

var _pkgDesc2 = _interopRequireDefault(_pkgDesc);

var _pluginLogger = require('liferay-npm-build-tools-common/lib/plugin-logger');

var _pluginLogger2 = _interopRequireDefault(_pluginLogger);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _readJsonSync = require('read-json-sync');

var _readJsonSync2 = _interopRequireDefault(_readJsonSync);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fixturesDir = _path2.default.join(__dirname, '__fixtures__'); /**
                                                                   * Â© 2017 Liferay, Inc. <https://liferay.com>
                                                                   *
                                                                   * SPDX-License-Identifier: LGPL-3.0-or-later
                                                                   */

it('namespaces packages correctly for the root package', function () {
	var pkgJson = (0, _readJsonSync2.default)(fixturesDir + '/project/package.json');
	var pkg = new _pkgDesc2.default(pkgJson.name, pkgJson.version, fixturesDir, true);
	var log = new _pluginLogger2.default();

	(0, _index2.default)({ pkg: pkg, log: log, rootPkgJson: pkgJson }, { pkgJson: pkgJson });

	expect(pkgJson).toMatchSnapshot();
});

it('namespaces packages correctly for non-root package', function () {
	var rootPkgJson = (0, _readJsonSync2.default)(fixturesDir + '/project/package.json');
	var dir = fixturesDir + '/project/node_modules/is-finite';
	var pkgJson = (0, _readJsonSync2.default)(dir + '/package.json');
	var pkg = new _pkgDesc2.default(pkgJson.name, pkgJson.version, dir);
	var log = new _pluginLogger2.default();

	(0, _index2.default)({ pkg: pkg, log: log, rootPkgJson: rootPkgJson }, { pkgJson: pkgJson });

	expect(pkgJson).toMatchSnapshot();
});

it('logs results correctly', function () {
	var rootPkgJson = (0, _readJsonSync2.default)(fixturesDir + '/project/package.json');
	var dir = fixturesDir + '/project/node_modules/is-finite';
	var pkgJson = (0, _readJsonSync2.default)(dir + '/package.json');
	var pkg = new _pkgDesc2.default(pkgJson.name, pkgJson.version, dir);
	var log = new _pluginLogger2.default();

	(0, _index2.default)({ pkg: pkg, log: log, rootPkgJson: rootPkgJson }, { pkgJson: pkgJson });

	expect(log.messages).toMatchSnapshot();
});
//# sourceMappingURL=index.test.js.map