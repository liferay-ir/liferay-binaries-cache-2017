{"version":3,"sources":["../src/iDOMHelpers.js"],"names":["scope","exports","global","window","iDOMHelpers","attr","value","attrName","IncrementalDOM","forOwn","object","iterator","hasOwn","Object","prototype","hasOwnProperty","prop","call","jsxWrapper","elementClosure","args","wrapper","apply","__jsxDOMWrapper","renderArbitrary","child","type","String","text","Array","isArray","forEach","isIncDomNode","renderChild","skipChild"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;;;AAEA;;;;;;AAMA,IAAMA,QACL,OAAOC,OAAP,KAAmB,WAAnB,IAAkC,OAAOC,MAAP,KAAkB,WAApD,GACGA,MADH,GAEGC,MAHJ;;AAKAH,MAAMI,WAAN,GAAoBJ,MAAMI,WAAN,IAAqB,EAAzC;;AAEAJ,MAAMI,WAAN,CAAkBC,IAAlB,GAAyB,UAASC,KAAT,EAAgBC,QAAhB,EAA0B;AAClDC,gBAAeH,IAAf,CAAoBE,QAApB,EAA8BD,KAA9B;AACA,CAFD;;AAIAN,MAAMI,WAAN,CAAkBK,MAAlB,GAA2B,UAASC,MAAT,EAAiBC,QAAjB,EAA2B;AACrD,KAAMC,SAASC,OAAOC,SAAP,CAAiBC,cAAhC;AACA,MAAK,IAAIC,IAAT,IAAiBN,MAAjB,EAAyB;AACxB,MAAIE,OAAOK,IAAP,CAAYP,MAAZ,EAAoBM,IAApB,CAAJ,EAA+B;AAC9BL,YAASD,OAAOM,IAAP,CAAT,EAAuBA,IAAvB;AACA;AACD;AACD,CAPD;;AASAhB,MAAMI,WAAN,CAAkBc,UAAlB,GAA+B,UAASC,cAAT,EAAyBC,IAAzB,EAA+B;AAC7D,KAAMC,UAAUD,OACb,YAAW;AACX,SAAOD,eAAeG,KAAf,CAAqB,IAArB,EAA2BF,IAA3B,CAAP,CADW,CAC8B;AAC1C,EAHc,GAIbD,cAJH;AAKAE,SAAQE,eAAR,GAA0B,IAA1B;AACA,QAAOF,OAAP;AACA,CARD;;AAUArB,MAAMI,WAAN,CAAkBoB,eAAlB,GAAoC,UAASC,KAAT,EAAgB;AACnD,KAAMC,cAAcD,KAAd,yCAAcA,KAAd,CAAN;AACA,KACCC,SAAS,QAAT,IACCA,SAAS,QAAT,IAAsBD,SAASA,iBAAiBE,MAFlD,EAGE;AACDnB,iBAAeoB,IAAf,CAAoBH,KAApB;AACA,EALD,MAKO,IAAIC,SAAS,UAAT,IAAuBD,MAAMF,eAAjC,EAAkD;AACxDE;AACA,EAFM,MAEA,IAAII,MAAMC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;AAChCA,QAAMM,OAAN,CAAc/B,MAAMI,WAAN,CAAkBoB,eAAhC;AACA,EAFM,MAEA,IAAIG,OAAOF,KAAP,MAAkB,iBAAtB,EAAyC;AAC/C;AACA,MAAI,8BAAuBO,YAAvB,CAAoCP,KAApC,CAAJ,EAAgD;AAC/C,iCAAuBQ,WAAvB,CAAmCR,KAAnC;AACA,GAFD,MAEO;AACNzB,SAAMI,WAAN,CAAkBK,MAAlB,CAAyBgB,KAAzB,EAAgCzB,MAAMI,WAAN,CAAkBoB,eAAlD;AACA;AACD,EAPM,MAOA,IAAI,CAACC,KAAL,EAAY;AAClB,wBAAYS,SAAZ;AACA;AACD,CArBD;;kBAuBelC,MAAMI,W","file":"iDOMHelpers.js","sourcesContent":["'use strict';\n\nimport IncrementalDomRenderer from 'metal-incremental-dom';\nimport JSXRenderer from './JSXRenderer';\n\n/**\n * These helpers are all from \"babel-plugin-incremental-dom\". See its README\n * file for more details:\n * https://github.com/jridgewell/babel-plugin-incremental-dom#runtime\n */\n\nconst scope =\n\ttypeof exports !== 'undefined' && typeof global !== 'undefined'\n\t\t? global\n\t\t: window;\n\nscope.iDOMHelpers = scope.iDOMHelpers || {};\n\nscope.iDOMHelpers.attr = function(value, attrName) {\n\tIncrementalDOM.attr(attrName, value);\n};\n\nscope.iDOMHelpers.forOwn = function(object, iterator) {\n\tconst hasOwn = Object.prototype.hasOwnProperty;\n\tfor (let prop in object) {\n\t\tif (hasOwn.call(object, prop)) {\n\t\t\titerator(object[prop], prop);\n\t\t}\n\t}\n};\n\nscope.iDOMHelpers.jsxWrapper = function(elementClosure, args) {\n\tconst wrapper = args\n\t\t? function() {\n\t\t\t\treturn elementClosure.apply(this, args); // eslint-disable-line\n\t\t}\n\t\t: elementClosure;\n\twrapper.__jsxDOMWrapper = true;\n\treturn wrapper;\n};\n\nscope.iDOMHelpers.renderArbitrary = function(child) {\n\tconst type = typeof child;\n\tif (\n\t\ttype === 'number' ||\n\t\t(type === 'string' || (child && child instanceof String))\n\t) {\n\t\tIncrementalDOM.text(child);\n\t} else if (type === 'function' && child.__jsxDOMWrapper) {\n\t\tchild();\n\t} else if (Array.isArray(child)) {\n\t\tchild.forEach(scope.iDOMHelpers.renderArbitrary);\n\t} else if (String(child) === '[object Object]') {\n\t\t// Renders special incremental dom nodes in a special way :)\n\t\tif (IncrementalDomRenderer.isIncDomNode(child)) {\n\t\t\tIncrementalDomRenderer.renderChild(child);\n\t\t} else {\n\t\t\tscope.iDOMHelpers.forOwn(child, scope.iDOMHelpers.renderArbitrary);\n\t\t}\n\t} else if (!child) {\n\t\tJSXRenderer.skipChild();\n\t}\n};\n\nexport default scope.iDOMHelpers;\n"]}