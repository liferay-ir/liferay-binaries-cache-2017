/* jshint ignore:start */
import Component from 'metal-component';
import Soy from 'metal-soy';

var templates;
goog.loadModule(function(exports) {
var soy = goog.require('soy');
var soydata = goog.require('soydata');
// This file was automatically generated from ClayFilterLabel.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace ClayFilterLabel.
 * @public
 */

goog.module('ClayFilterLabel.incrementaldom');

goog.require('goog.soy.data.SanitizedContent');
var incrementalDom = goog.require('incrementaldom');
goog.require('soy.asserts');
var soyIdom = goog.require('soy.idom');

var $templateAlias1 = Soy.getTemplate('ClayLabel.incrementaldom', 'render');


/**
 * @param {{
 *  label: (!goog.soy.data.SanitizedContent|function()|string),
 *  spritemap: (!goog.soy.data.SanitizedContent|string),
 *  _handleFilterLabelCloseClicked: (*|null|undefined),
 *  closeable: (boolean|null|undefined),
 *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),
 *  filterData: (?)
 * }} opt_data
 * @param {Object<string, *>=} opt_ijData
 * @param {Object<string, *>=} opt_ijData_deprecated
 * @return {void}
 * @suppress {checkTypes}
 */
function $render(opt_data, opt_ijData, opt_ijData_deprecated) {
  opt_ijData = opt_ijData_deprecated || opt_ijData;
  /** @type {!goog.soy.data.SanitizedContent|function()|string} */
  var label = soy.asserts.assertType(goog.isFunction(opt_data.label) || (goog.isString(opt_data.label) || opt_data.label instanceof goog.soy.data.SanitizedContent), 'label', opt_data.label, '!goog.soy.data.SanitizedContent|function()|string');
  /** @type {!goog.soy.data.SanitizedContent|string} */
  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');
  /** @type {*|null|undefined} */
  var _handleFilterLabelCloseClicked = opt_data._handleFilterLabelCloseClicked;
  /** @type {boolean|null|undefined} */
  var closeable = soy.asserts.assertType(opt_data.closeable == null || (goog.isBoolean(opt_data.closeable) || opt_data.closeable === 1 || opt_data.closeable === 0), 'closeable', opt_data.closeable, 'boolean|null|undefined');
  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */
  var elementClasses = soy.asserts.assertType(opt_data.elementClasses == null || (goog.isString(opt_data.elementClasses) || opt_data.elementClasses instanceof goog.soy.data.SanitizedContent), 'elementClasses', opt_data.elementClasses, '!goog.soy.data.SanitizedContent|null|string|undefined');
  /** @type {?} */
  var filterData = opt_data.filterData;
  var elementAttributes__soy10 = function() {
    if (elementClasses) {
      incrementalDom.attr('class', elementClasses);
    }
  };
  incrementalDom.elementOpenStart('div');
      elementAttributes__soy10();
  incrementalDom.elementOpenEnd();
    var param26 = function() {
      incrementalDom.elementOpenStart('div');
          incrementalDom.attr('class', 'label-section');
      incrementalDom.elementOpenEnd();
        soyIdom.print(label);
      incrementalDom.elementClose('div');
    };
    $templateAlias1({closeable: closeable, data: filterData, elementClasses: 'component-label tbar-label', events: {close: _handleFilterLabelCloseClicked}, label: param26, ref: 'label', spritemap: spritemap, style: false}, null, opt_ijData);
  incrementalDom.elementClose('div');
}
exports.render = $render;
/**
 * @typedef {{
 *  label: (!goog.soy.data.SanitizedContent|function()|string),
 *  spritemap: (!goog.soy.data.SanitizedContent|string),
 *  _handleFilterLabelCloseClicked: (*|null|undefined),
 *  closeable: (boolean|null|undefined),
 *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),
 *  filterData: (?)
 * }}
 */
$render.Params;
if (goog.DEBUG) {
  $render.soyTemplateName = 'ClayFilterLabel.render';
}

exports.render.params = ["label","spritemap","_handleFilterLabelCloseClicked","closeable","elementClasses","filterData"];
exports.render.types = {"label":"html|string","spritemap":"string","_handleFilterLabelCloseClicked":"any","closeable":"bool","elementClasses":"string","filterData":"?"};
templates = exports;
return exports;

});

class ClayFilterLabel extends Component {}
Soy.register(ClayFilterLabel, templates);
export { ClayFilterLabel, templates };
export default templates;
/* jshint ignore:end */
