{"version":3,"sources":["../../src/__tests__/index.test.js"],"names":["it","pkgJson","name","version","dependencies","rootPkgJson","globalConfig","imports","provider","config","log","expect","toMatchSnapshot","messages"],"mappings":";;AAMA;;;;AACA;;;;;;AAPA;;;;;;AASAA,GAAG,iBAAH,EAAsB,YAAM;AAC3B,KAAMC,UAAU;AACfC,QAAM,SADS;AAEfC,WAAS,OAFM;AAGfC,gBAAc;AACb,iBAAc,QADD;AAEb,iBAAc,QAFD;AAGb,iBAAc;AAHD;AAHC,EAAhB;;AAUA,sBACC;AACCC,eAAa;AACZH,SAAM,MADM;AAEZC,YAAS;AAFG,GADd;AAKCG,gBAAc;AACbC,YAAS;AACRC,cAAU;AACT,cAAS,QADA;AAET,cAAS;AAFA,KADF;AAKR,QAAI;AACH,cAAS;AADN;AALI;AADI,GALf;AAgBCC,UAAQ,EAhBT;AAiBCC,OAAK;AAjBN,EADD,EAoBC,EAACT,gBAAD,EApBD;;AAuBAU,QAAOV,OAAP,EAAgBW,eAAhB;AACA,CAnCD;;AAqCAZ,GAAG,uDAAH,EAA4D,YAAM;AACjE,KAAMC,UAAU;AACfC,QAAM,SADS;AAEfC,WAAS;AAFM,EAAhB;;AAKA,sBACC;AACCE,eAAa;AACZH,SAAM,MADM;AAEZC,YAAS;AAFG,GADd;AAKCG,gBAAc;AACbC,YAAS;AACRC,cAAU;AACT,cAAS;AADA;AADF;AADI,GALf;AAYCC,UAAQ,EAZT;AAaCC,OAAK;AAbN,EADD,EAgBC,EAACT,gBAAD,EAhBD;;AAmBAU,QAAOV,OAAP,EAAgBW,eAAhB;AACA,CA1BD;;AA4BAZ,GAAG,wBAAH,EAA6B,YAAM;AAClC,KAAMC,UAAU;AACfC,QAAM,SADS;AAEfC,WAAS,OAFM;AAGfC,gBAAc;AACb,iBAAc,QADD;AAEb,iBAAc;AAFD;AAHC,EAAhB;AAQA,KAAMM,MAAM,4BAAZ;;AAEA,sBACC;AACCL,eAAa;AACZH,SAAM,MADM;AAEZC,YAAS;AAFG,GADd;AAKCG,gBAAc;AACbC,YAAS;AACRC,cAAU;AACT,cAAS,QADA;AAET,cAAS;AAFA,KADF;AAKR,QAAI;AACH,cAAS;AADN;AALI;AADI,GALf;AAgBCC,UAAQ,EAhBT;AAiBCC;AAjBD,EADD,EAoBC,EAACT,gBAAD,EApBD;;AAuBAU,QAAOD,IAAIG,QAAX,EAAqBD,eAArB;AACA,CAnCD","file":"index.test.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PluginLogger from 'liferay-npm-build-tools-common/lib/plugin-logger';\nimport plugin from '../index';\n\nit('injects imports', () => {\n\tconst pkgJson = {\n\t\tname: 'package',\n\t\tversion: '2.0.0',\n\t\tdependencies: {\n\t\t\t'root$pkg-a': '^1.0.0',\n\t\t\t'root$pkg-b': '^2.0.0',\n\t\t\t'root$pkg-c': '^3.0.0',\n\t\t},\n\t};\n\n\tplugin(\n\t\t{\n\t\t\trootPkgJson: {\n\t\t\t\tname: 'root',\n\t\t\t\tversion: '1.0.0',\n\t\t\t},\n\t\t\tglobalConfig: {\n\t\t\t\timports: {\n\t\t\t\t\tprovider: {\n\t\t\t\t\t\t'pkg-a': '^1.0.0',\n\t\t\t\t\t\t'pkg-b': '^2.0.0',\n\t\t\t\t\t},\n\t\t\t\t\t'': {\n\t\t\t\t\t\t'pkg-c': '^3.0.0',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: {},\n\t\t\tlog: new PluginLogger(),\n\t\t},\n\t\t{pkgJson}\n\t);\n\n\texpect(pkgJson).toMatchSnapshot();\n});\n\nit('injects imports even when not present in package.json', () => {\n\tconst pkgJson = {\n\t\tname: 'package',\n\t\tversion: '2.0.0',\n\t};\n\n\tplugin(\n\t\t{\n\t\t\trootPkgJson: {\n\t\t\t\tname: 'root',\n\t\t\t\tversion: '1.0.0',\n\t\t\t},\n\t\t\tglobalConfig: {\n\t\t\t\timports: {\n\t\t\t\t\tprovider: {\n\t\t\t\t\t\t'pkg-a': '^1.0.0',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: {},\n\t\t\tlog: new PluginLogger(),\n\t\t},\n\t\t{pkgJson}\n\t);\n\n\texpect(pkgJson).toMatchSnapshot();\n});\n\nit('logs results correctly', () => {\n\tconst pkgJson = {\n\t\tname: 'package',\n\t\tversion: '2.0.0',\n\t\tdependencies: {\n\t\t\t'root$pkg-a': '^1.0.0',\n\t\t\t'root$pkg-b': '^2.0.0',\n\t\t},\n\t};\n\tconst log = new PluginLogger();\n\n\tplugin(\n\t\t{\n\t\t\trootPkgJson: {\n\t\t\t\tname: 'root',\n\t\t\t\tversion: '1.0.0',\n\t\t\t},\n\t\t\tglobalConfig: {\n\t\t\t\timports: {\n\t\t\t\t\tprovider: {\n\t\t\t\t\t\t'pkg-a': '^1.0.0',\n\t\t\t\t\t\t'pkg-b': '^3.0.0',\n\t\t\t\t\t},\n\t\t\t\t\t'': {\n\t\t\t\t\t\t'pkg-c': '^3.0.0',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: {},\n\t\t\tlog,\n\t\t},\n\t\t{pkgJson}\n\t);\n\n\texpect(log.messages).toMatchSnapshot();\n});\n"]}