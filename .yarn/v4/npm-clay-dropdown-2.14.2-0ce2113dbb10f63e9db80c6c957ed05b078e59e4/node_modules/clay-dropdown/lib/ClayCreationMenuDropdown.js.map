{"version":3,"sources":["../src/ClayCreationMenuDropdown.js"],"names":["ClayCreationMenuDropdown","addListener","_defaultToggle","event","preventDefault","expanded","emit","data","name","originalEvent","ClayComponent","STATE","button","Config","shapeOf","label","string","required","style","oneOf","value","type","object","defaultEventHandler","disabled","bool","elementClasses","helpText","id","itemsIconAlignment","maxPrimaryItems","number","maxSecondaryItems","maxTotalItems","preferredAlign","primaryItems","itemsValidator","secondaryItems","spritemap","triggerAriaLabel","triggerClasses","triggerTitle","viewMoreURL","Soy","register","templates"],"mappings":"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","file":"ClayCreationMenuDropdown.js","sourcesContent":["import 'clay-icon';\nimport './ClayDropdownBase';\nimport ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\nimport {Config} from 'metal-state';\n\nimport {itemsValidator, preferredAlign} from './validators';\nimport templates from './ClayCreationMenuDropdown.soy.js';\n\n/**\n * Implementation for Metal Clay Action Dropdown.\n * @extends ClayComponent\n */\nclass ClayCreationMenuDropdown extends ClayComponent {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.addListener('toggle', this._defaultToggle, true);\n\t}\n\n\t/**\n\t * Toggles the dropdown, closing it when open or opening it when closed.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\t_defaultToggle(event) {\n\t\tevent.preventDefault();\n\n\t\tthis.expanded = !this.expanded;\n\t}\n\n\t/**\n\t * Handles footer button click.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\t_handleButtonClick(event) {\n\t\tthis.emit('moreButtonClicked', event);\n\t}\n\n\t/**\n\t * Continues the propagation of the item clicked event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleItemClick(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'itemClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the toggle event.\n\t * @param {!Event} event\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\ttoggle(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'toggle',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayCreationMenuDropdown.STATE = {\n\t/**\n\t * Button configuration to place a button at dropdown footer.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\tbutton: Config.shapeOf({\n\t\tlabel: Config.string().required(),\n\t\tstyle: Config.oneOf(['primary', 'secondary']).value('primary'),\n\t\ttype: Config.oneOf(['button', 'reset', 'submit']),\n\t}),\n\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * Flag to indicate if menu is disabled\n\t * @default false\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?bool}\n\t */\n\tdisabled: Config.bool().value(false),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * Flag to indicate if menu is expanded.\n\t * @default false\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?bool}\n\t */\n\texpanded: Config.bool().value(false),\n\n\t/**\n\t * Help text to be shown on top of the open dropdown.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\thelpText: Config.string(),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * Position in which item icon will be placed. Needed if any item has icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\titemsIconAlignment: Config.oneOf(['left', 'right', 'left-right']),\n\n\t/**\n\t * Maximum number of primary items to show. Only take in account when\n\t * secondaryItems are passed, otherwise maxTotalItems is used.\n\t * @default 8\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(number|undefined)}\n\t */\n\tmaxPrimaryItems: Config.number().value(8),\n\n\t/**\n\t * Maximum number of secondary items to show.\n\t * @default 7\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(number|undefined)}\n\t */\n\tmaxSecondaryItems: Config.number().value(7),\n\n\t/**\n\t * Maximum number of total items to show.\n\t * @default 15\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(number|undefined)}\n\t */\n\tmaxTotalItems: Config.number().value(15),\n\n\t/**\n\t * The preferred alignment for the dropdown content.\n\t * @default BottomLeft\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\tpreferredAlign: preferredAlign.value('BottomLeft'),\n\n\t/**\n\t * List of primary menu items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {!Array}\n\t */\n\tprimaryItems: itemsValidator,\n\n\t/**\n\t * List of secondary menu items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(Array|undefined)}\n\t */\n\tsecondaryItems: itemsValidator,\n\n\t/**\n\t * The path to the SVG spritemap file containing the icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {!string}\n\t */\n\tspritemap: Config.string().required(),\n\n\t/**\n\t * Aria label attribute for the trigger element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\ttriggerAriaLabel: Config.string(),\n\n\t/**\n\t * CSS classes to be applied to the trigger element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\ttriggerClasses: Config.string(),\n\n\t/**\n\t * The title attribute of the trigger element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t */\n\ttriggerTitle: Config.string(),\n\n\t/**\n\t * The url for the view more button in case is rendered.\n\t * @instance\n\t * @memberof ClayCreationMenuDropdown\n\t * @type {?(string|undefined)}\n\t * @default undefined\n\t */\n\tviewMoreURL: Config.string(),\n};\n\ndefineWebComponent('clay-creation-menu-dropdown', ClayCreationMenuDropdown);\n\nSoy.register(ClayCreationMenuDropdown, templates);\n\nexport {ClayCreationMenuDropdown};\nexport default ClayCreationMenuDropdown;\n"]}