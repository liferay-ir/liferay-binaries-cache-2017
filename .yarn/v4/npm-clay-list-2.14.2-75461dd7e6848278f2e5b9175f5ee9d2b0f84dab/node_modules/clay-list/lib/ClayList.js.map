{"version":3,"sources":["../src/ClayList.js"],"names":["ClayList","event","emit","ClayComponent","STATE","data","Config","object","defaultEventHandler","elementClasses","string","id","items","array","selectable","bool","value","schema","shapeOf","fields","arrayOf","contentRenderer","contentRendererMap","fieldName","fieldsMap","iconsMap","iconShapesMap","labelStylesMap","inputNameField","inputNamesMap","inputValueField","required","spritemap","Soy","register","templates"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;AAPA;;;AASA;;;;IAIMA,Q;;;;;;;;;;;;AACL;;;;;qCAKmBC,K,EAAO;AACzB,QAAKC,IAAL,CAAU,aAAV,EAAyBD,KAAzB;AACA;;;;EARqBE,uB;;AAWvB;;;;;;;AAKAH,SAASI,KAAT,GAAiB;AAChB;;;;;;;AAOAC,OAAMC,mBAAOC,MAAP,EARU;;AAUhB;;;;;;;;AAQAC,sBAAqBF,mBAAOC,MAAP,EAlBL;;AAoBhB;;;;;;;AAOAE,iBAAgBH,mBAAOI,MAAP,EA3BA;;AA6BhB;;;;;;;AAOAC,KAAIL,mBAAOI,MAAP,EApCY;;AAsChB;;;;;;;AAOAE,QAAON,mBAAOO,KAAP,EA7CS;;AA+ChB;;;;;;;AAOAC,aAAYR,mBAAOS,IAAP,GAAcC,KAAd,CAAoB,KAApB,CAtDI;;AAwDhB;;;;;;;AAOAC,SAAQX,mBAAOY,OAAP,CAAe;AACtBC,UAAQb,mBAAOc,OAAP,CACPd,mBAAOY,OAAP,CAAe;AACdG,oBAAiBf,mBAAOI,MAAP,EADH;AAEdY,uBAAoBhB,mBAAOC,MAAP,EAFN;AAGdgB,cAAWjB,mBAAOI,MAAP,EAHG;AAIdc,cAAWlB,mBAAOC,MAAP,EAJG;AAKdkB,aAAUnB,mBAAOC,MAAP,EALI;AAMdmB,kBAAepB,mBAAOC,MAAP,EAND;AAOdoB,mBAAgBrB,mBAAOC,MAAP;AAPF,GAAf,CADO,CADc;AAYtBqB,kBAAgBtB,mBAAOI,MAAP,EAZM;AAatBmB,iBAAevB,mBAAOC,MAAP,EAbO;AActBuB,mBAAiBxB,mBAAOI,MAAP;AAdK,EAAf,EAeLqB,QAfK,EA/DQ;;AAgFhB;;;;;;;AAOAC,YAAW1B,mBAAOI,MAAP;AAvFK,CAAjB;;AA0FA,iCAAmB,WAAnB,EAAgCV,QAAhC;;AAEAiC,mBAAIC,QAAJ,CAAalC,QAAb,EAAuBmC,qBAAvB;;QAEQnC,Q,GAAAA,Q;kBACOA,Q","file":"ClayList.js","sourcesContent":["import 'clay-checkbox';\nimport 'clay-dropdown';\nimport 'clay-icon';\nimport 'clay-label';\nimport 'clay-link';\nimport 'clay-sticker';\n// eslint-disable-next-line\nimport { ClayActionsDropdown } from 'clay-dropdown';\nimport {Config} from 'metal-state';\nimport ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\n\nimport templates from './ClayList.soy.js';\n\n/**\n * Metal ClayList component.\n * @extends ClayComponent\n */\nclass ClayList extends ClayComponent {\n\t/**\n\t * Continues the propagation of the checkbox changed event\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleItemToggled(event) {\n\t\tthis.emit('itemToggled', event);\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayList.STATE = {\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayList\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayList\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayList\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayList\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * List of items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayList\n\t * @type {?(array|undefined)}\n\t */\n\titems: Config.array(),\n\n\t/**\n\t * Flag to indicate if the list group items are selectable.\n\t * @default false\n\t * @instance\n\t * @memberof ClayList\n\t * @type {?(bool|undefined)}\n\t */\n\tselectable: Config.bool().value(false),\n\n\t/**\n\t * Schema mapping list item fields with item data properties.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayList\n\t * @type {!object}\n\t */\n\tschema: Config.shapeOf({\n\t\tfields: Config.arrayOf(\n\t\t\tConfig.shapeOf({\n\t\t\t\tcontentRenderer: Config.string(),\n\t\t\t\tcontentRendererMap: Config.object(),\n\t\t\t\tfieldName: Config.string(),\n\t\t\t\tfieldsMap: Config.object(),\n\t\t\t\ticonsMap: Config.object(),\n\t\t\t\ticonShapesMap: Config.object(),\n\t\t\t\tlabelStylesMap: Config.object(),\n\t\t\t})\n\t\t),\n\t\tinputNameField: Config.string(),\n\t\tinputNamesMap: Config.object(),\n\t\tinputValueField: Config.string(),\n\t}).required(),\n\n\t/**\n\t * The path to the SVG spritemap file containing the icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayList\n\t * @type {?(string|undefined)}\n\t */\n\tspritemap: Config.string(),\n};\n\ndefineWebComponent('clay-list', ClayList);\n\nSoy.register(ClayList, templates);\n\nexport {ClayList};\nexport default ClayList;\n"]}