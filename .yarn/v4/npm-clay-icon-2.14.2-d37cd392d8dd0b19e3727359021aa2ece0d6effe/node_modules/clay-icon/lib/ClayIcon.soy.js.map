{"version":3,"sources":["../src/ClayIcon.soy.js"],"names":["templates","goog","loadModule","exports","soy","require","soydata","module","incrementalDom","soyIdom","$render","opt_data","opt_ijData","opt_ijData_deprecated","spritemap","asserts","assertType","isString","data","SanitizedContent","symbol","elementClasses","focusable","isBoolean","id","attributes__soy9","attr","elementOpenStart","elementOpenEnd","elementClose","render","Params","DEBUG","soyTemplateName","params","types","ClayIcon","Component","Soy","register"],"mappings":"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","file":"ClayIcon.soy.js","sourcesContent":["/* jshint ignore:start */\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\n\nvar templates;\ngoog.loadModule(function(exports) {\nvar soy = goog.require('soy');\nvar soydata = goog.require('soydata');\n// This file was automatically generated from ClayIcon.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace ClayIcon.\n * @public\n */\n\ngoog.module('ClayIcon.incrementaldom');\n\ngoog.require('goog.soy.data.SanitizedContent');\nvar incrementalDom = goog.require('incrementaldom');\ngoog.require('soy.asserts');\nvar soyIdom = goog.require('soy.idom');\n\n\n/**\n * @param {{\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  symbol: (!goog.soy.data.SanitizedContent|string),\n *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),\n *  focusable: (boolean|null|undefined),\n *  id: (!goog.soy.data.SanitizedContent|null|string|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $render(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var symbol = soy.asserts.assertType(goog.isString(opt_data.symbol) || opt_data.symbol instanceof goog.soy.data.SanitizedContent, 'symbol', opt_data.symbol, '!goog.soy.data.SanitizedContent|string');\n  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */\n  var elementClasses = soy.asserts.assertType(opt_data.elementClasses == null || (goog.isString(opt_data.elementClasses) || opt_data.elementClasses instanceof goog.soy.data.SanitizedContent), 'elementClasses', opt_data.elementClasses, '!goog.soy.data.SanitizedContent|null|string|undefined');\n  /** @type {boolean|null|undefined} */\n  var focusable = soy.asserts.assertType(opt_data.focusable == null || (goog.isBoolean(opt_data.focusable) || opt_data.focusable === 1 || opt_data.focusable === 0), 'focusable', opt_data.focusable, 'boolean|null|undefined');\n  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */\n  var id = soy.asserts.assertType(opt_data.id == null || (goog.isString(opt_data.id) || opt_data.id instanceof goog.soy.data.SanitizedContent), 'id', opt_data.id, '!goog.soy.data.SanitizedContent|null|string|undefined');\n  var attributes__soy9 = function() {\n    incrementalDom.attr('class', 'lexicon-icon lexicon-icon-' + symbol + (elementClasses ? ' ' + elementClasses : ''));\n    if (focusable) {\n      incrementalDom.attr('focusable', 'true');\n    } else {\n      incrementalDom.attr('focusable', 'false');\n    }\n    if (id) {\n      incrementalDom.attr('id', id);\n    }\n    incrementalDom.attr('role', 'presentation');\n  };\n  incrementalDom.elementOpenStart('svg');\n      attributes__soy9();\n  incrementalDom.elementOpenEnd();\n    incrementalDom.elementOpenStart('use');\n        incrementalDom.attr('xlink:href', spritemap + '#' + symbol);\n    incrementalDom.elementOpenEnd();\n    incrementalDom.elementClose('use');\n  incrementalDom.elementClose('svg');\n}\nexports.render = $render;\n/**\n * @typedef {{\n *  spritemap: (!goog.soy.data.SanitizedContent|string),\n *  symbol: (!goog.soy.data.SanitizedContent|string),\n *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),\n *  focusable: (boolean|null|undefined),\n *  id: (!goog.soy.data.SanitizedContent|null|string|undefined)\n * }}\n */\n$render.Params;\nif (goog.DEBUG) {\n  $render.soyTemplateName = 'ClayIcon.render';\n}\n\nexports.render.params = [\"spritemap\",\"symbol\",\"elementClasses\",\"focusable\",\"id\"];\nexports.render.types = {\"spritemap\":\"string\",\"symbol\":\"string\",\"elementClasses\":\"string\",\"focusable\":\"bool\",\"id\":\"string\"};\ntemplates = exports;\nreturn exports;\n\n});\n\nclass ClayIcon extends Component {}\nSoy.register(ClayIcon, templates);\nexport { ClayIcon, templates };\nexport default templates;\n/* jshint ignore:end */\n"]}