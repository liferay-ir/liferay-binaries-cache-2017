{"version":3,"sources":["../src/ClayIcon.js"],"names":["ClayIcon","ClayComponent","STATE","data","Config","object","defaultEventHandler","elementClasses","string","focusable","bool","value","id","spritemap","required","symbol","title","validator","console","warn","Soy","register","templates"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;;;;;;;;;AAEA;;;;IAIMA,Q;;;;;;;;;;EAAiBC,uB;;AAEvB;;;;;;;AAKAD,SAASE,KAAT,GAAiB;AAChB;;;;;;;AAOAC,OAAMC,mBAAOC,MAAP,EARU;;AAUhB;;;;;;;;AAQAC,sBAAqBF,mBAAOC,MAAP,EAlBL;;AAoBhB;;;;;;;AAOAE,iBAAgBH,mBAAOI,MAAP,EA3BA;;AA6BhB;;;;;;;AAOAC,YAAWL,mBAAOM,IAAP,GAAcC,KAAd,CAAoB,KAApB,CApCK;;AAsChB;;;;;;;AAOAC,KAAIR,mBAAOI,MAAP,EA7CY;;AA+ChB;;;;;;;AAOAK,YAAWT,mBAAOI,MAAP,GAAgBM,QAAhB,EAtDK;;AAwDhB;;;;;;;AAOAC,SAAQX,mBAAOI,MAAP,GAAgBM,QAAhB,EA/DQ;;AAiEhB;;;;;;;;AAQAE,QAAOZ,mBAAOa,SAAP,CAAiB,iBAAS;AAChC,MAAIN,KAAJ,EAAW;AACVO,WAAQC,IAAR,CACC,mHADD;AAGA;AACD,EANM;AAzES,CAAjB;;AAkFA,iCAAmB,WAAnB,EAAgCnB,QAAhC;;AAEAoB,mBAAIC,QAAJ,CAAarB,QAAb,EAAuBsB,qBAAvB;;QAEQtB,Q,GAAAA,Q;kBACOA,Q","file":"ClayIcon.js","sourcesContent":["import ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\nimport {Config} from 'metal-state';\n\nimport templates from './ClayIcon.soy.js';\n\n/**\n * Implementation of the Metal Clay Icon.\n * @extends ClayComponent\n */\nclass ClayIcon extends ClayComponent {}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayIcon.STATE = {\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayIcon\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayIcon\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayIcon\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * Flag to indicate if the svg is focusable or not\n\t * @default false\n\t * @instance\n\t * @memberof ClayIcon\n\t * @type {?bool}\n\t */\n\tfocusable: Config.bool().value(false),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayIcon\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * The path to the SVG spritemap file containing the icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayIcon\n\t * @type {!string}\n\t */\n\tspritemap: Config.string().required(),\n\n\t/**\n\t * The name of the Clay SVG Icon e.g. `plus`.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayIcon\n\t * @type {!string}\n\t */\n\tsymbol: Config.string().required(),\n\n\t/**\n\t * The title of the Clay SVG Icon.\n\t * @default undefined\n\t * @deprecated since version 2.4.x\n\t * @instance\n\t * @memberof ClayIcon\n\t * @type {?(string|undefined)}\n\t */\n\ttitle: Config.validator(value => {\n\t\tif (value) {\n\t\t\tconsole.warn(\n\t\t\t\t'ðŸš¨ The `title` API will be deprecated and removed in the next release. See more information https://goo.gl/EycJtK'\n\t\t\t);\n\t\t}\n\t}),\n};\n\ndefineWebComponent('clay-icon', ClayIcon);\n\nSoy.register(ClayIcon, templates);\n\nexport {ClayIcon};\nexport default ClayIcon;\n"]}