{"version":3,"sources":["../src/ClayHorizontalCard.js"],"names":["ClayHorizontalCard","event","emit","ClayComponent","STATE","actionAriaLabel","Config","string","actionItems","actionItemsValidator","data","object","defaultEventHandler","disabled","bool","value","elementClasses","href","icon","id","inputName","inputValue","selectable","selected","spritemap","required","title","Soy","register","templates"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;AARA;;;AAUA;;;;IAIMA,kB;;;;;;;;;;;;AACL;;;;;;2CAMyBC,K,EAAO;AAC/B,UAAO,CAAC,KAAKC,IAAL,CAAU,aAAV,EAAyBD,KAAzB,CAAR;AACA;;AAED;;;;;;;;2CAKyBA,K,EAAO;AAC/B,QAAKC,IAAL,CAAU,aAAV,EAAyBD,KAAzB;AACA;;;;EAlB+BE,uB;;AAqBjC;;;;;;;AAKAH,mBAAmBI,KAAnB,GAA2B;AAC1B;;;;;;;AAOAC,kBAAiBC,mBAAOC,MAAP,EARS;;AAU1B;;;;;;;AAOAC,cAAaC,gCAjBa;;AAmB1B;;;;;;;AAOAC,OAAMJ,mBAAOK,MAAP,EA1BoB;;AA4B1B;;;;;;;;AAQAC,sBAAqBN,mBAAOK,MAAP,EApCK;;AAsC1B;;;;;;;AAOAE,WAAUP,mBAAOQ,IAAP,GAAcC,KAAd,CAAoB,KAApB,CA7CgB;;AA+C1B;;;;;;;AAOAC,iBAAgBV,mBAAOC,MAAP,EAtDU;;AAwD1B;;;;;;;AAOAU,OAAMX,mBAAOC,MAAP,EA/DoB;;AAiE1B;;;;;;;AAOAW,OAAMZ,mBAAOC,MAAP,GAAgBQ,KAAhB,CAAsB,QAAtB,CAxEoB;;AA0E1B;;;;;;;AAOAI,KAAIb,mBAAOC,MAAP,EAjFsB;;AAmF1B;;;;;;;AAOAa,YAAWd,mBAAOC,MAAP,EA1Fe;;AA4F1B;;;;;;;AAOAc,aAAYf,mBAAOC,MAAP,EAnGc;;AAqG1B;;;;;;;AAOAe,aAAYhB,mBAAOQ,IAAP,GAAcC,KAAd,CAAoB,KAApB,CA5Gc;;AA8G1B;;;;;;;AAOAQ,WAAUjB,mBAAOQ,IAAP,GAAcC,KAAd,CAAoB,KAApB,CArHgB;;AAuH1B;;;;;;;AAOAS,YAAWlB,mBAAOC,MAAP,GAAgBkB,QAAhB,EA9He;;AAgI1B;;;;;;;AAOAC,QAAOpB,mBAAOC,MAAP,GAAgBkB,QAAhB;AAvImB,CAA3B;;AA0IA,iCAAmB,sBAAnB,EAA2CzB,kBAA3C;;AAEA2B,mBAAIC,QAAJ,CAAa5B,kBAAb,EAAiC6B,+BAAjC;;QAEQ7B,kB,GAAAA,kB;kBACOA,kB","file":"ClayHorizontalCard.js","sourcesContent":["import 'clay-checkbox';\nimport 'clay-link';\nimport 'clay-sticker';\n// eslint-disable-next-line\nimport { ClayActionsDropdown } from 'clay-dropdown';\nimport {Config} from 'metal-state';\nimport ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\n\nimport actionItemsValidator from './action_items_validator';\nimport templates from './ClayHorizontalCard.soy.js';\n\n/**\n * Metal ClayHorizontalCard component.\n * @extends ClayComponent\n */\nclass ClayHorizontalCard extends ClayComponent {\n\t/**\n\t * Continues the propagation of the dropdown action item click event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleActionItemClicked(event) {\n\t\treturn !this.emit('itemClicked', event);\n\t}\n\n\t/**\n\t * Continues the propagation of the checkbox changed event\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleItemCheckboxClick(event) {\n\t\tthis.emit('itemToggled', event);\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayHorizontalCard.STATE = {\n\t/**\n\t * Aria label attribute for the action element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?(string|undefined)}\n\t */\n\tactionAriaLabel: Config.string(),\n\n\t/**\n\t * List of items to display in the actions menu.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?(array|undefined)}\n\t */\n\tactionItems: actionItemsValidator,\n\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * Flag to indicate if the card is disabled or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?bool}\n\t */\n\tdisabled: Config.bool().value(false),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * Url to be applied to the title of the card.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?(string|undefined)}\n\t */\n\thref: Config.string(),\n\n\t/**\n\t * Icon of the card.\n\t * @default folder\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?string}\n\t */\n\ticon: Config.string().value('folder'),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * Name to be applied to the input element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?(string|undefined)}\n\t */\n\tinputName: Config.string(),\n\n\t/**\n\t * Value to be applied to the input element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?(string|undefined)}\n\t */\n\tinputValue: Config.string(),\n\n\t/**\n\t * Flag to indicate if the card is selectable or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?bool}\n\t */\n\tselectable: Config.bool().value(false),\n\n\t/**\n\t * Flag to indicate if the card is selected or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {?bool}\n\t */\n\tselected: Config.bool().value(false),\n\n\t/**\n\t * The path to the SVG spritemap file containing the icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {!string}\n\t */\n\tspritemap: Config.string().required(),\n\n\t/**\n\t * Title of the card.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayHorizontalCard\n\t * @type {!string}\n\t */\n\ttitle: Config.string().required(),\n};\n\ndefineWebComponent('clay-horizontal-card', ClayHorizontalCard);\n\nSoy.register(ClayHorizontalCard, templates);\n\nexport {ClayHorizontalCard};\nexport default ClayHorizontalCard;\n"]}