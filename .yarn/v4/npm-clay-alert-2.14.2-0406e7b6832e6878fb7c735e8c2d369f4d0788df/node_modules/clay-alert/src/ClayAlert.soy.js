/* jshint ignore:start */
import Component from 'metal-component';
import Soy from 'metal-soy';

var templates;
goog.loadModule(function(exports) {
var soy = goog.require('soy');
var soydata = goog.require('soydata');
// This file was automatically generated from ClayAlert.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace ClayAlert.
 * @public
 */

goog.module('ClayAlert.incrementaldom');

goog.require('goog.soy.data.SanitizedContent');
goog.require('soy.asserts');
var soyIdom = goog.require('soy.idom');

var $templateAlias1 = Soy.getTemplate('ClayAlertBase.incrementaldom', 'render');


/**
 * @param {{
 *  message: (!goog.soy.data.SanitizedContent|function()|string),
 *  spritemap: (!goog.soy.data.SanitizedContent|string),
 *  title: (!goog.soy.data.SanitizedContent|string),
 *  _handleHide: (*|null|undefined),
 *  closeable: (boolean|null|undefined),
 *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),
 *  id: (!goog.soy.data.SanitizedContent|null|string|undefined),
 *  style: (!goog.soy.data.SanitizedContent|null|string|undefined)
 * }} opt_data
 * @param {Object<string, *>=} opt_ijData
 * @param {Object<string, *>=} opt_ijData_deprecated
 * @return {void}
 * @suppress {checkTypes}
 */
function $render(opt_data, opt_ijData, opt_ijData_deprecated) {
  opt_ijData = opt_ijData_deprecated || opt_ijData;
  /** @type {!goog.soy.data.SanitizedContent|function()|string} */
  var message = soy.asserts.assertType(goog.isFunction(opt_data.message) || (goog.isString(opt_data.message) || opt_data.message instanceof goog.soy.data.SanitizedContent), 'message', opt_data.message, '!goog.soy.data.SanitizedContent|function()|string');
  /** @type {!goog.soy.data.SanitizedContent|string} */
  var spritemap = soy.asserts.assertType(goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent, 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|string');
  /** @type {!goog.soy.data.SanitizedContent|string} */
  var title = soy.asserts.assertType(goog.isString(opt_data.title) || opt_data.title instanceof goog.soy.data.SanitizedContent, 'title', opt_data.title, '!goog.soy.data.SanitizedContent|string');
  /** @type {*|null|undefined} */
  var _handleHide = opt_data._handleHide;
  /** @type {boolean|null|undefined} */
  var closeable = soy.asserts.assertType(opt_data.closeable == null || (goog.isBoolean(opt_data.closeable) || opt_data.closeable === 1 || opt_data.closeable === 0), 'closeable', opt_data.closeable, 'boolean|null|undefined');
  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */
  var elementClasses = soy.asserts.assertType(opt_data.elementClasses == null || (goog.isString(opt_data.elementClasses) || opt_data.elementClasses instanceof goog.soy.data.SanitizedContent), 'elementClasses', opt_data.elementClasses, '!goog.soy.data.SanitizedContent|null|string|undefined');
  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */
  var id = soy.asserts.assertType(opt_data.id == null || (goog.isString(opt_data.id) || opt_data.id instanceof goog.soy.data.SanitizedContent), 'id', opt_data.id, '!goog.soy.data.SanitizedContent|null|string|undefined');
  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */
  var style = soy.asserts.assertType(opt_data.style == null || (goog.isString(opt_data.style) || opt_data.style instanceof goog.soy.data.SanitizedContent), 'style', opt_data.style, '!goog.soy.data.SanitizedContent|null|string|undefined');
  $templateAlias1({closeable: closeable, elementClasses: elementClasses, events: {hide: _handleHide}, id: id, message: message, ref: 'alertBase', spritemap: spritemap, style: style, title: title}, null, opt_ijData);
}
exports.render = $render;
/**
 * @typedef {{
 *  message: (!goog.soy.data.SanitizedContent|function()|string),
 *  spritemap: (!goog.soy.data.SanitizedContent|string),
 *  title: (!goog.soy.data.SanitizedContent|string),
 *  _handleHide: (*|null|undefined),
 *  closeable: (boolean|null|undefined),
 *  elementClasses: (!goog.soy.data.SanitizedContent|null|string|undefined),
 *  id: (!goog.soy.data.SanitizedContent|null|string|undefined),
 *  style: (!goog.soy.data.SanitizedContent|null|string|undefined)
 * }}
 */
$render.Params;
if (goog.DEBUG) {
  $render.soyTemplateName = 'ClayAlert.render';
}

exports.render.params = ["message","spritemap","title","_handleHide","closeable","elementClasses","id","style"];
exports.render.types = {"message":"html|string","spritemap":"string","title":"string","_handleHide":"any","closeable":"bool","elementClasses":"string","id":"string","style":"string"};
templates = exports;
return exports;

});

class ClayAlert extends Component {}
Soy.register(ClayAlert, templates);
export { ClayAlert, templates };
export default templates;
/* jshint ignore:end */
