{"version":3,"sources":["../src/ClayTooltip.js"],"names":["SingletonEnforcer","ClayTooltip","enforcer","config","parentElement","Error","_timer","undefined","_eventHandler","EventHandler","addListener","_handleTransitionEnd","visible","element","style","display","_target","alignedPosition","Align","align","position","bestAlign","removeAllListeners","titleAttribute","getAttribute","setAttribute","removeAttribute","tagName","titleTag","querySelector","innerHTML","remove","event","_restoreTitle","delegateTarget","_isTransitioning","_showTooltip","_hideTooltip","setTimeout","srcElement","clearTimeout","title","restoreTitle","document","createElement","appendChild","value","TopCenter","RightCenter","BottomCenter","LeftCenter","TopRight","BottomRight","BottomLeft","TopLeft","val","object","mixin","valueClassMapFn_","target","content","_getContent","_content","newValue","prevValue","prevSelectors","Array","isArray","newSelectors","reduce","arr","indexOf","push","i","l","length","selector","handlers","test","navigator","userAgent","dom","delegate","_handleTouchStart","bind","_handleTouchEnd","_handleMouseLeave","_handleMouseClick","_handleMouseEnter","add","_instance","ClayComponent","STATE","Config","any","internal","validator","isValidPosition","bool","data","defaultEventHandler","elementClasses","string","classMap","setter","core","isObject","valueFn","oneOf","selectors","array","Soy","register","templates"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAEA;;;IAGMA,iB;;;;AAEN;;;;;;IAIMC,W;;;AACL;;;AAGA,sBAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,aAA9B,EAA6C;AAAA;;AAC5C,MAAI,CAACF,QAAL,EAAe;AACd,SAAM,IAAIG,KAAJ,CAAU,gDAAV,CAAN;AACA;;AAH2C,wHAItCF,MAJsC,EAI9BC,aAJ8B;;AAK5C,QAAKE,MAAL,GAAcC,SAAd;AAL4C;AAM5C;;AAED;;;;;;;;;;;;;;;;;;AAuBA;;;4BAGU;AACT,QAAKC,aAAL,GAAqB,IAAIC,yBAAJ,EAArB;AACA;;AAED;;;;;;6BAGW;AACV,QAAKC,WAAL,CAAiB,eAAjB,EAAkC,KAAKC,oBAAvC,EAA6D,IAA7D;;AAEA,OAAI,CAAC,KAAKC,OAAV,EAAmB;AAClB,SAAKC,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACA;AACD;;AAED;;;;;;6BAGW;AACV,OAAI,KAAKC,OAAT,EAAkB;AACjB,QAAMC,kBAAkBC,qBAAMC,KAAN,CACvB,KAAKN,OADkB,EAEvB,KAAKG,OAFkB,EAGvB,KAAKI,QAHkB,EAIvB,KAAKC,SAJkB,CAAxB;;AAOA,QAAI,KAAKJ,eAAL,KAAyBA,eAA7B,EAA8C;AAC7C,UAAKA,eAAL,GAAuBA,eAAvB;AACA;AACD;AACD;;AAED;;;;;;6BAGW;AACV,QAAKT,aAAL,CAAmBc,kBAAnB;AACA;;AAED;;;;;;6BAGW;AACV,QAAKd,aAAL,CAAmBc,kBAAnB;AACA;;AAED;;;;;;;;;;8BAOYT,O,EAAS;AACpB,OAAMU,iBAAiBV,QAAQW,YAAR,CAAqB,OAArB,CAAvB;;AAEA,OAAID,cAAJ,EAAoB;AACnBV,YAAQY,YAAR,CAAqB,YAArB,EAAmCF,cAAnC;AACAV,YAAQY,YAAR,CAAqB,oBAArB,EAA2C,MAA3C;AACAZ,YAAQa,eAAR,CAAwB,OAAxB;AACA,IAJD,MAIO,IAAIb,QAAQc,OAAR,KAAoB,KAAxB,EAA+B;AACrC,QAAIC,WAAWf,QAAQgB,aAAR,CAAsB,OAAtB,CAAf;;AAEA,QAAID,QAAJ,EAAc;AACbf,aAAQY,YAAR,CAAqB,YAArB,EAAmCG,SAASE,SAA5C;AACAjB,aAAQY,YAAR,CAAqB,oBAArB,EAA2C,MAA3C;AACAG,cAASG,MAAT;AACA;AACD;;AAED,UAAOlB,QAAQW,YAAR,CAAqB,YAArB,CAAP;AACA;;AAED;;;;;;;;;oCAMkBQ,K,EAAO;AACxB,QAAKC,aAAL,CAAmBD,MAAME,cAAzB;;AAEA,QAAKC,gBAAL,GAAwB,IAAxB;AACA,QAAKvB,OAAL,GAAe,KAAf;AACA;;AAED;;;;;;;;;oCAMkBoB,K,EAAO;AACxB,QAAKI,YAAL,CAAkBJ,MAAME,cAAxB;AACA;;AAED;;;;;;;;6CAK2B;AAC1B,OAAI,KAAKC,gBAAT,EAA2B;AAC1B,SAAKvB,OAAL,GAAe,IAAf;AACA;AACD;;AAED;;;;;;;;;oCAMkBoB,K,EAAO;AACxB,QAAKK,YAAL,CAAkBL,MAAME,cAAxB;AACA;;AAED;;;;;;;;;oCAMkBF,K,EAAO;AAAA;;AACxB,QAAK1B,MAAL,GAAcgC,WAAW,YAAM;AAC9B,WAAKF,YAAL,CAAkBJ,MAAMO,UAAxB;AACAC,iBAAa,OAAKlC,MAAlB;AACA,IAHa,EAGX,GAHW,CAAd;AAIA;;AAED;;;;;;;;;kCAMgB0B,K,EAAO;AACtB,QAAKK,YAAL,CAAkBL,MAAMO,UAAxB;AACA;;AAED;;;;;;;;yCAKuB;AACtB,QAAKJ,gBAAL,GAAwB,KAAxB;;AAEA,OAAI,CAAC,KAAKvB,OAAV,EAAmB;AAClB,SAAKC,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACA;AACD;;AAED;;;;;;;;+BAKaF,O,EAAS;AACrB,OAAI,KAAKP,MAAT,EAAiB;AAChBkC,iBAAa,KAAKlC,MAAlB;AACA,SAAKA,MAAL,GAAcC,SAAd;AACA;AACD,OAAI,KAAKK,OAAT,EAAkB;AACjB,SAAKqB,aAAL,CAAmBpB,OAAnB;;AAEA,SAAKsB,gBAAL,GAAwB,IAAxB;AACA,SAAKvB,OAAL,GAAe,KAAf;AACA;AACD;;AAED;;;;;;;;;gCAMcC,O,EAAS;AACtB,OAAM4B,QAAQ5B,QAAQW,YAAR,CAAqB,YAArB,CAAd;AACA,OAAMkB,eAAe7B,QAAQW,YAAR,CAAqB,oBAArB,CAArB;;AAEA,OAAIiB,SAASC,iBAAiB,MAA9B,EAAsC;AACrC,QAAI7B,QAAQc,OAAR,KAAoB,KAAxB,EAA+B;AAC9B,SAAIC,WAAWe,SAASC,aAAT,CAAuB,OAAvB,CAAf;AACAhB,cAASE,SAAT,GAAqBW,KAArB;;AAEA5B,aAAQgC,WAAR,CAAoBjB,QAApB;AACA,KALD,MAKO;AACNf,aAAQY,YAAR,CAAqB,OAArB,EAA8BgB,KAA9B;AACA;;AAED5B,YAAQa,eAAR,CAAwB,oBAAxB;AACA;AACD;;AAED;;;;;;;;;qCAMmBoB,K,EAAO;AACzB,WAAQA,KAAR;AACA,SAAK,WAAL;AACC,YAAO5B,qBAAM6B,SAAb;AACD,SAAK,aAAL;AACC,YAAO7B,qBAAM8B,WAAb;AACD,SAAK,cAAL;AACC,YAAO9B,qBAAM+B,YAAb;AACD,SAAK,YAAL;AACC,YAAO/B,qBAAMgC,UAAb;AACD,SAAK,UAAL;AACC,YAAOhC,qBAAMiC,QAAb;AACD,SAAK,aAAL;AACC,YAAOjC,qBAAMkC,WAAb;AACD,SAAK,YAAL;AACC,YAAOlC,qBAAMmC,UAAb;AACD,SAAK,SAAL;AACC,YAAOnC,qBAAMoC,OAAb;AACD;AACC,YAAOpC,qBAAM6B,SAAb;AAlBD;AAoBA;;AAED;;;;;;;;;;oCAOkBQ,G,EAAK;AACtB,UAAOC,cAAOC,KAAP,CAAa,KAAKC,gBAAL,EAAb,EAAsCH,GAAtC,CAAP;AACA;;AAED;;;;;;;;;+BAMaI,M,EAAQ;AACpB,OAAMC,UAAU,KAAKC,WAAL,CAAiBF,MAAjB,CAAhB;AACA,QAAK3C,OAAL,GAAe2C,MAAf;;AAEA,QAAKG,QAAL,GAAgBF,OAAhB;;AAEA,OAAI,CAAC,KAAKhD,OAAV,EAAmB;AAClB,SAAKC,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,GAA6B,OAA7B;AACA;AACD,QAAKoB,gBAAL,GAAwB,IAAxB;AACA,QAAKvB,OAAL,GAAe,IAAf;AACA;;AAED;;;;;;;;;;gCAOcmD,Q,EAAUC,S,EAAW;AAClC,OAAID,QAAJ,EAAc;AACb,QAAME,gBAAgBC,MAAMC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,EAA7D;;AAEA,QAAMI,eAAeL,SAASM,MAAT,CAAgB,UAACC,GAAD,EAAMf,GAAN,EAAc;AAClD,SAAIe,IAAIC,OAAJ,CAAYhB,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAC5Be,UAAIE,IAAJ,CAASjB,GAAT;AACA;AACD,YAAOe,GAAP;AACA,KALoB,EAKlBL,aALkB,CAArB;;AAOA,SAAKzD,aAAL,CAAmBc,kBAAnB;;AAEA,SAAK,IAAImD,IAAI,CAAR,EAAWC,IAAIN,aAAaO,MAAjC,EAAyCF,IAAIC,CAA7C,EAAgDD,GAAhD,EAAqD;AAAA;;AACpD,SAAMG,WAAWR,aAAaK,CAAb,CAAjB;AACA,SAAMI,WAAW,EAAjB;;AAEA,SAAI,4BAA4BC,IAA5B,CAAiCC,UAAUC,SAA3C,CAAJ,EAA2D;AAC1DH,eAASL,IAAT,CACCS,cAAIC,QAAJ,CACCvC,QADD,EAEC,YAFD,EAGCiC,QAHD,EAIC,KAAKO,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAJD,CADD,EAOCH,cAAIC,QAAJ,CACCvC,QADD,EAEC,UAFD,EAGCiC,QAHD,EAIC,KAAKS,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAJD,CAPD,EAaCH,cAAIC,QAAJ,CACCvC,QADD,EAEC,aAFD,EAGCiC,QAHD,EAIC,KAAKS,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAJD,CAbD;AAoBA,MArBD,MAqBO;AACNP,eAASL,IAAT,CACCS,cAAIC,QAAJ,CACCvC,QADD,EAEC,MAFD,EAGCiC,QAHD,EAIC,KAAKU,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAJD,CADD,EAOCH,cAAIC,QAAJ,CACCvC,QADD,EAEC,OAFD,EAGCiC,QAHD,EAIC,KAAKW,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAJD,CAPD,EAaCH,cAAIC,QAAJ,CACCvC,QADD,EAEC,OAFD,EAGCiC,QAHD,EAIC,KAAKY,iBAAL,CAAuBJ,IAAvB,CAA4B,IAA5B,CAJD,CAbD,EAmBCH,cAAIC,QAAJ,CACCvC,QADD,EAEC,YAFD,EAGCiC,QAHD,EAIC,KAAKY,iBAAL,CAAuBJ,IAAvB,CAA4B,IAA5B,CAJD,CAnBD,EAyBCH,cAAIC,QAAJ,CACCvC,QADD,EAEC,YAFD,EAGCiC,QAHD,EAIC,KAAKU,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAJD,CAzBD;AAgCA;;AAED,2BAAK5E,aAAL,EAAmBiF,GAAnB,sBAA0BZ,QAA1B;AACA;AACD;AACD;;AAED;;;;;;gCAGc,CAEb;AADA;;;AAGD;;;;;;;;qCAKmB;AAAA;;AAClB,2CACE3D,qBAAMoC,OADR,EACkB,uBADlB,yBAEEpC,qBAAM6B,SAFR,EAEoB,kBAFpB,yBAGE7B,qBAAMiC,QAHR,EAGmB,wBAHnB,yBAIEjC,qBAAMmC,UAJR,EAIqB,0BAJrB,yBAKEnC,qBAAM+B,YALR,EAKuB,qBALvB,yBAME/B,qBAAMkC,WANR,EAMsB,2BANtB,yBAOElC,qBAAM8B,WAPR,EAOsB,oBAPtB,yBAQE9B,qBAAMgC,UARR,EAQqB,mBARrB;AAUA;;;uBAzXW/C,M,EAAQC,a,EAAe;AAClC,OAAI,CAAC,KAAKsF,SAAV,EAAqB;AACpB,SAAKA,SAAL,GAAiB,IAAIzF,WAAJ,CAChB,IAAID,iBAAJ,EADgB,EAEhBG,MAFgB,EAGhBC,aAHgB,CAAjB;AAKA;AACD,UAAO,KAAKsF,SAAZ;AACA;;;;EAjCwBC,uB;;AAoZ1B;;;;;;;AAKA1F,YAAY2F,KAAZ,GAAoB;AACnB;;;;;;;AAOA9B,WAAU+B,mBAAOC,GAAP,GACRhD,KADQ,CACF,EADE,EAERiD,QAFQ,EARS;;AAYnB;;;;;;;AAOA9E,kBAAiB;AAChB+E,aAAW9E,qBAAM+E;AADD,EAnBE;;AAuBnB;;;;;;;AAOA5E,YAAWwE,mBAAOK,IAAP,GAAcpD,KAAd,CAAoB,IAApB,CA9BQ;;AAgCnB;;;;;;;AAOAqD,OAAMN,mBAAOrC,MAAP,EAvCa;;AAyCnB;;;;;;;;AAQA4C,sBAAqBP,mBAAOrC,MAAP,EAjDF;;AAmDnB;;;;;;;AAOA6C,iBAAgBR,mBAAOS,MAAP,EA1DG;;AA4DnB;;;;;;;AAOAC,WAAU;AACTC,UAAQ,mBADC;AAETR,aAAWS,YAAKC,QAFP;AAGTC,WAAS;AAHA,EAnES;;AAyEnB;;;;;;;AAOAvF,WAAUyE,mBAAOe,KAAP,CAAa,CACtB,cADsB,EAEtB,YAFsB,EAGtB,aAHsB,EAItB,YAJsB,EAKtB,aALsB,EAMtB,WANsB,EAOtB,SAPsB,EAQtB,UARsB,CAAb,EAURJ,MAVQ,CAUD,oBAVC,EAWR1D,KAXQ,CAWF,WAXE,CAhFS;;AA6FnB;;;;;;;AAOA+D,YAAWhB,mBAAOiB,KAAP,GAAehE,KAAf,CAAqB,CAC/B,mCAD+B,EAE/B,wBAF+B,CAArB,CApGQ;;AAyGnB;;;;;;;;AAQAlC,UAASiF,mBAAOK,IAAP,GAAcpD,KAAd,CAAoB,KAApB;AAjHU,CAApB;;AAoHAiE,mBAAIC,QAAJ,CAAa/G,WAAb,EAA0BgH,wBAA1B;;QAEQhH,W,GAAAA,W;kBACOA,W","file":"ClayTooltip.js","sourcesContent":["import ClayComponent from 'clay-component';\nimport Soy from 'metal-soy';\nimport {Align} from 'metal-position';\nimport {Config} from 'metal-state';\nimport {EventHandler} from 'metal-events';\nimport {core, object} from 'metal';\nimport {dom} from 'metal-dom';\n\nimport templates from './ClayTooltip.soy.js';\n\n/**\n * Singleton enforcer class\n */\nclass SingletonEnforcer {}\n\n/**\n * Implementation of ClayTooltip.\n * @extends ClayComponent\n */\nclass ClayTooltip extends ClayComponent {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(enforcer, config, parentElement) {\n\t\tif (!enforcer) {\n\t\t\tthrow new Error('Use ClayTooltip.init to initialize ClayTooltip');\n\t\t}\n\t\tsuper(config, parentElement);\n\t\tthis._timer = undefined;\n\t}\n\n\t/**\n\t * Returns the instance for this ClayTooltip.\n\t * @memberof ClayTooltip\n\t * @param {Object=} config An object with the initial values for this\n\t *                         component's state.\n\t * @param {boolean|string|Element=} parentElement The element where the\n\t * component should be rendered. Can be given as a selector or an element.\n\t * If `false` is passed, the component won't be rendered automatically\n\t * after created.\n\t * @static\n\t * @return {ClayTooltip}\n\t */\n\tstatic init(config, parentElement) {\n\t\tif (!this._instance) {\n\t\t\tthis._instance = new ClayTooltip(\n\t\t\t\tnew SingletonEnforcer(),\n\t\t\t\tconfig,\n\t\t\t\tparentElement\n\t\t\t);\n\t\t}\n\t\treturn this._instance;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tcreated() {\n\t\tthis._eventHandler = new EventHandler();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.addListener('transitionend', this._handleTransitionEnd, true);\n\n\t\tif (!this.visible) {\n\t\t\tthis.element.style.display = 'none';\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trendered() {\n\t\tif (this._target) {\n\t\t\tconst alignedPosition = Align.align(\n\t\t\t\tthis.element,\n\t\t\t\tthis._target,\n\t\t\t\tthis.position,\n\t\t\t\tthis.bestAlign\n\t\t\t);\n\n\t\t\tif (this.alignedPosition !== alignedPosition) {\n\t\t\t\tthis.alignedPosition = alignedPosition;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdetached() {\n\t\tthis._eventHandler.removeAllListeners();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposed() {\n\t\tthis._eventHandler.removeAllListeners();\n\t}\n\n\t/**\n\t * Handles mouseenter event.\n\t * @memberof ClayTooltip\n\t * @param {!Element} element\n\t * @return {!String}\n\t * @private\n\t */\n\t_getContent(element) {\n\t\tconst titleAttribute = element.getAttribute('title');\n\n\t\tif (titleAttribute) {\n\t\t\telement.setAttribute('data-title', titleAttribute);\n\t\t\telement.setAttribute('data-restore-title', 'true');\n\t\t\telement.removeAttribute('title');\n\t\t} else if (element.tagName === 'svg') {\n\t\t\tlet titleTag = element.querySelector('title');\n\n\t\t\tif (titleTag) {\n\t\t\t\telement.setAttribute('data-title', titleTag.innerHTML);\n\t\t\t\telement.setAttribute('data-restore-title', 'true');\n\t\t\t\ttitleTag.remove();\n\t\t\t}\n\t\t}\n\n\t\treturn element.getAttribute('data-title');\n\t}\n\n\t/**\n\t * Handles click event.\n\t * @memberof ClayTooltip\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleMouseClick(event) {\n\t\tthis._restoreTitle(event.delegateTarget);\n\n\t\tthis._isTransitioning = true;\n\t\tthis.visible = false;\n\t}\n\n\t/**\n\t * Handles mouseenter event.\n\t * @memberof ClayTooltip\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleMouseEnter(event) {\n\t\tthis._showTooltip(event.delegateTarget);\n\t}\n\n\t/**\n\t * Handles tooltip element mouseenter event.\n\t * @memberof ClayTooltip\n\t * @private\n\t */\n\t_handleMouseEnterTooltip() {\n\t\tif (this._isTransitioning) {\n\t\t\tthis.visible = true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles mouseleave events.\n\t * @memberof ClayTooltip\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleMouseLeave(event) {\n\t\tthis._hideTooltip(event.delegateTarget);\n\t}\n\n\t/**\n\t * Handles touchstart events.\n\t * @memberof ClayTooltip\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleTouchStart(event) {\n\t\tthis._timer = setTimeout(() => {\n\t\t\tthis._showTooltip(event.srcElement);\n\t\t\tclearTimeout(this._timer);\n\t\t}, 500);\n\t}\n\n\t/**\n\t * Handle touchend events.\n\t * @memberof ClayTooltip\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_handleTouchEnd(event) {\n\t\tthis._hideTooltip(event.srcElement);\n\t}\n\n\t/**\n\t * Handles transitionend event.\n\t * @memberof ClayTooltip\n\t * @private\n\t */\n\t_handleTransitionEnd() {\n\t\tthis._isTransitioning = false;\n\n\t\tif (!this.visible) {\n\t\t\tthis.element.style.display = 'none';\n\t\t}\n\t}\n\n\t/**\n\t * Hides the tooltip on the given element.\n\t * @param {!Element} element\n\t * @private\n\t */\n\t_hideTooltip(element) {\n\t\tif (this._timer) {\n\t\t\tclearTimeout(this._timer);\n\t\t\tthis._timer = undefined;\n\t\t}\n\t\tif (this.visible) {\n\t\t\tthis._restoreTitle(element);\n\n\t\t\tthis._isTransitioning = true;\n\t\t\tthis.visible = false;\n\t\t}\n\t}\n\n\t/**\n\t * Restores the title attribute to an element\n\t * @memberof ClayTooltip\n\t * @param {Element} element\n\t * @private\n\t */\n\t_restoreTitle(element) {\n\t\tconst title = element.getAttribute('data-title');\n\t\tconst restoreTitle = element.getAttribute('data-restore-title');\n\n\t\tif (title && restoreTitle === 'true') {\n\t\t\tif (element.tagName === 'svg') {\n\t\t\t\tlet titleTag = document.createElement('title');\n\t\t\t\ttitleTag.innerHTML = title;\n\n\t\t\t\telement.appendChild(titleTag);\n\t\t\t} else {\n\t\t\t\telement.setAttribute('title', title);\n\t\t\t}\n\n\t\t\telement.removeAttribute('data-restore-title');\n\t\t}\n\t}\n\n\t/**\n\t * Set preferred alignment with Align API.\n\t * @private\n\t * @param {!string} value\n\t * @return {number}\n\t */\n\t_setPreferredAlign(value) {\n\t\tswitch (value) {\n\t\tcase 'TopCenter':\n\t\t\treturn Align.TopCenter;\n\t\tcase 'RightCenter':\n\t\t\treturn Align.RightCenter;\n\t\tcase 'BottomCenter':\n\t\t\treturn Align.BottomCenter;\n\t\tcase 'LeftCenter':\n\t\t\treturn Align.LeftCenter;\n\t\tcase 'TopRight':\n\t\t\treturn Align.TopRight;\n\t\tcase 'BottomRight':\n\t\t\treturn Align.BottomRight;\n\t\tcase 'BottomLeft':\n\t\t\treturn Align.BottomLeft;\n\t\tcase 'TopLeft':\n\t\t\treturn Align.TopLeft;\n\t\tdefault:\n\t\t\treturn Align.TopCenter;\n\t\t}\n\t}\n\n\t/**\n\t * The setter function for the `classMap` state.\n\t * @memberof ClayTooltip\n\t * @param {Object} val\n\t * @return {!Object}\n\t * @private\n\t */\n\tsetterClassMapFn_(val) {\n\t\treturn object.mixin(this.valueClassMapFn_(), val);\n\t}\n\n\t/**\n\t * Shows the tooltip on a given element.\n\t * @memberof ClayTooltip\n\t * @param {!Element} target\n\t * @private\n\t */\n\t_showTooltip(target) {\n\t\tconst content = this._getContent(target);\n\t\tthis._target = target;\n\n\t\tthis._content = content;\n\n\t\tif (!this.visible) {\n\t\t\tthis.element.style.display = 'block';\n\t\t}\n\t\tthis._isTransitioning = true;\n\t\tthis.visible = true;\n\t}\n\n\t/**\n\t * Sync selectors\n\t * @memberof ClayTooltip\n\t * @param {Array.<string>} newValue  The new value of `this.selectors`.\n\t * @param {Array.<string>} prevValue The previous value of `this.selectors`.\n\t * @private\n\t */\n\tsyncSelectors(newValue, prevValue) {\n\t\tif (newValue) {\n\t\t\tconst prevSelectors = Array.isArray(prevValue) ? prevValue : [];\n\n\t\t\tconst newSelectors = newValue.reduce((arr, val) => {\n\t\t\t\tif (arr.indexOf(val) === -1) {\n\t\t\t\t\tarr.push(val);\n\t\t\t\t}\n\t\t\t\treturn arr;\n\t\t\t}, prevSelectors);\n\n\t\t\tthis._eventHandler.removeAllListeners();\n\n\t\t\tfor (let i = 0, l = newSelectors.length; i < l; i++) {\n\t\t\t\tconst selector = newSelectors[i];\n\t\t\t\tconst handlers = [];\n\n\t\t\t\tif (/iPad|iPhone|iPod|android/i.test(navigator.userAgent)) {\n\t\t\t\t\thandlers.push(\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'touchstart',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleTouchStart.bind(this)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'touchend',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleTouchEnd.bind(this)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'touchcancel',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleTouchEnd.bind(this)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\thandlers.push(\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'blur',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleMouseLeave.bind(this)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'click',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleMouseClick.bind(this)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'focus',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleMouseEnter.bind(this)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'mouseenter',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleMouseEnter.bind(this)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdom.delegate(\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t'mouseleave',\n\t\t\t\t\t\t\tselector,\n\t\t\t\t\t\t\tthis._handleMouseLeave.bind(this)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._eventHandler.add(...handlers);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsyncVisible() {\n\t\t// This is needed to make fade transition work\n\t}\n\n\t/**\n\t * Gets the default value for the `classMap` state.\n\t * @return {!Object}\n\t * @private\n\t */\n\tvalueClassMapFn_() {\n\t\treturn {\n\t\t\t[Align.TopLeft]: 'clay-tooltip-top-left',\n\t\t\t[Align.TopCenter]: 'clay-tooltip-top',\n\t\t\t[Align.TopRight]: 'clay-tooltip-top-right',\n\t\t\t[Align.BottomLeft]: 'clay-tooltip-bottom-left',\n\t\t\t[Align.BottomCenter]: 'clay-tooltip-bottom',\n\t\t\t[Align.BottomRight]: 'clay-tooltip-bottom-right',\n\t\t\t[Align.RightCenter]: 'clay-tooltip-right',\n\t\t\t[Align.LeftCenter]: 'clay-tooltip-left',\n\t\t};\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayTooltip.STATE = {\n\t/**\n\t * Content of the tooltip.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @type {!(html|string)}\n\t */\n\t_content: Config.any()\n\t\t.value('')\n\t\t.internal(),\n\n\t/**\n\t * The current position of the tooltip after being aligned via `Align.align`.\n\t * @default undefined\n\t * @type {number}\n\t * @instance\n\t * @memberof ClayTooltip\n\t */\n\talignedPosition: {\n\t\tvalidator: Align.isValidPosition,\n\t},\n\n\t/**\n\t * Flag to activate the auto best position.\n\t * @default true\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @type {?bool}\n\t */\n\tbestAlign: Config.bool().value(true),\n\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * Element classes.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @type {string}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * A map from `Align` position constants to the CSS class that should be\n\t * added to the tooltip when it's aligned in that position.\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @type {!Object}\n\t */\n\tclassMap: {\n\t\tsetter: 'setterClassMapFn_',\n\t\tvalidator: core.isObject,\n\t\tvalueFn: 'valueClassMapFn_',\n\t},\n\n\t/**\n\t * Tooltip position\n\t * @default TopCenter\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @type {!string}\n\t */\n\tposition: Config.oneOf([\n\t\t'BottomCenter',\n\t\t'BottomLeft',\n\t\t'BottomRight',\n\t\t'LeftCenter',\n\t\t'RightCenter',\n\t\t'TopCenter',\n\t\t'TopLeft',\n\t\t'TopRight',\n\t])\n\t\t.setter('_setPreferredAlign')\n\t\t.value('TopCenter'),\n\n\t/**\n\t * Selectors\n\t * @default ['[data-title]', '[title]']\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @type {!Array.<string>}\n\t */\n\tselectors: Config.array().value([\n\t\t'[data-title]:not([data-title=\"\"])',\n\t\t'[title]:not([title=\"\"]',\n\t]),\n\n\t/**\n\t * Tooltip visible when show is called.\n\t * @default false\n\t * @instance\n\t * @memberof ClayTooltip\n\t * @private\n\t * @type {?bool}\n\t */\n\tvisible: Config.bool().value(false),\n};\n\nSoy.register(ClayTooltip, templates);\n\nexport {ClayTooltip};\nexport default ClayTooltip;\n"]}